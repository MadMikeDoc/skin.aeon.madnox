<?xml version="1.0" encoding="utf-8"?>
<includes>
	<include name="Furniture_Showcase">
		<control type="group" id="8857">
			<include>Animation_OpenClose_Furniture</include>
			<include>Animation_VisibleChange400</include>
			<animation effect="slide" end="0,400" time="560" tween="quadratic" condition="Control.HasFocus(109)">Conditional</animation>
			<visible>!Skin.HasSetting(Nofloor) + ![Control.IsVisible(516) | Control.IsVisible(514) | [Control.IsVisible(518) + Skin.HasSetting(infopanelbackground)] | [Control.IsVisible(500) + Skin.HasSetting(wallfullscreen)] | Control.IsVisible(511) | Control.IsVisible(506) | Control.IsVisible(8858) | [Skin.HasSetting(addonwallaltbackground) + Control.IsVisible(512)]]</visible>
			<control type="image">
				<top>472</top>
				<width>1920</width>
				<height>608</height>
				<texture>views/showcase_floor.png</texture>
				<colordiffuse>$VAR[ExtendedColorDiffuseVar]</colordiffuse>
			</control>
			<control type="group" id="8860">
				<visible>![Control.IsVisible(512) | Control.IsVisible(510) | Control.IsVisible(550)]</visible>
				<animation effect="slide" time="800" start="1200,0" end="0,0" tween="cubic">WindowOpen</animation>
				<animation effect="slide" time="800" end="1200,0" tween="cubic">WindowClose</animation>
				<control type="image">
					<left>216</left>
					<top>874</top>
					<width>1490</width>
					<height>206</height>
					<texture>views/showcase_spot.png</texture>
					<animation effect="fade" start="100" end="50" time="240" condition="!Control.IsVisible(52) + !Control.IsVisible(53) + [ControlGroup(9000).HasFocus | Control.HasFocus(60) | Control.HasFocus(70) | Control.HasFocus(62) | Control.HasFocus(61)]">Conditional</animation>
					<animation effect="slide" time="160" end="-585" tween="cubic" condition="Control.IsVisible(57)">Conditional</animation>
					<animation effect="slide" time="160" end="-120" tween="cubic" condition="Control.IsVisible(57) + Skin.HasSetting(smallshiftview)">Conditional</animation>
					<animation effect="slide" time="160" end="185" tween="cubic" condition="Control.IsVisible(52) | Control.IsVisible(53)">Conditional</animation>
					<colordiffuse>$VAR[ColorDiffuseVar]</colordiffuse>
				</control>
				<control type="image">
					<left>1040</left>
					<top>874</top>
					<width>880</width>
					<height>206</height>
					<texture>views/list_spot.png</texture>
					<colordiffuse>$VAR[ColorDiffuseVar]</colordiffuse>
					<animation effect="slide" time="160" end="190" tween="cubic" condition="Control.IsVisible(52) | Control.IsVisible(53)">Conditional</animation>
					<animation effect="slide" time="160" end="60" tween="cubic" condition="Control.IsVisible(50) + Window.IsActive(musiclibrary)">Conditional</animation>
					<visible>[Control.IsVisible(50) | Control.IsVisible(52) | Control.IsVisible(53)]</visible>
					<visible>!Container.Content(years) + !Container.Content(playlists)</visible>
				</control>
			</control>
			<control type="group">
				<visible>![Control.IsVisible(510) | Control.IsVisible(57) | Control.IsVisible(550)]</visible>
				<visible>!Control.HasFocus(109)</visible>
				<animation effect="slide" end="0,-400" time="560" tween="quadratic" condition="Control.HasFocus(109)">Conditional</animation>
				<include>Animation_VisibleChange400</include>
				<control type="image">
					<width>696</width>
					<height>1080</height>
					<texture>views/showcase_vignette.png</texture>
					<colordiffuse>vignette</colordiffuse>
				</control>
				<control type="image">
					<left>1224</left>
					<width>696</width>
					<height>1080</height>
					<texture flipx="true">views/showcase_vignette.png</texture>
					<colordiffuse>vignette</colordiffuse>
				</control>
			</control>
			<control type="image">
				<top>874</top>
				<width>1920</width>
				<height>206</height>
				<texture>views/panel_spot.png</texture>
				<include>Animation_OpenClose_Furniture</include>
				<visible>[Control.IsVisible(518) + !Skin.HasSetting(infopanelfanart)]| Control.IsVisible(52) | Control.IsVisible(53) | Control.IsVisible(50) | Control.IsVisible(500) | [Control.IsVisible(512) + !Skin.HasSetting(addonwallaltbackground)] | Control.IsVisible(500) | Control.IsVisible(550)| Control.IsVisible(508)</visible>
				<colordiffuse>$VAR[SpotColorVar2]</colordiffuse>
				<animation effect="zoom" start="0,874,1920,206" end="0,874,2020,206" time="0" reversible="false" condition="Control.IsVisible(518)">Conditional</animation>
			</control>
			<include>Neon_Floor</include>
		</control>
			<control type="image" id="8858">
				<top>105</top>
				<width>2040</width>
				<texture>views/logo_back.png</texture>
				<visible>!Skin.HasSetting(Nofloor) + [Control.IsVisible(503) + [Container.Content(tvshows) | Container.Content(movies) | Container.Content(artists)] + [Skin.HasSetting(landscapelogo) | Skin.HasSetting(landscapeonelogo)] + Skin.HasSetting(altfloor)]</visible>
				<include>Animation_CommonFade</include>
				<animation effect="slide" time="160" end="0,100" tween="cubic" condition="Skin.HasSetting(landscapeonelogo)">Conditional</animation>
				<include>FullscreenDimensions</include>
				<animation effect="fade" start="100" end="80" time="40" condition="Substring(Skin.CurrentTheme,whit)">Conditional</animation>
            <colordiffuse>black</colordiffuse>
        </control>
	</include>
	<include name="PanelSpot">
		<control type="image">
			<top>874</top>
			<width>1920</width>
			<height>206</height>
			<texture>views/panel_spot.png</texture>
			<colordiffuse>$VAR[SpotColorVar2]</colordiffuse>
		</control>
	</include>
	<include name="FloorLabels">
		<control type="group">
			<animation effect="fade" end="100" time="80" delay="80" reversible="false">Visible</animation>
			<animation effect="fade" start="100" end="0" time="0" reversible="false">Hidden</animation>
			<!-- MikeBZH44 : Add NoFloorLabel for Movies in Showcase view -->
			<visible>[Control.IsVisible(503) + Skin.HasSetting(landscapeonelogo) + !Container.Content(episodes) + !Container.Content(seasons)] | Control.IsVisible(509) | Control.IsVisible(499) | [Control.IsVisible(500) + !StringCompare(Container.FolderName,youtube)] | Control.IsVisible(508) | [Control.IsVisible(501) + [[Container.Content(movies) + !Skin.HasSetting(NoFloorLabelMovies)] | [Container.Content(sets) + !Skin.HasSetting(NoFloorLabelMovies) | [IsEmpty(ListItem.Art(clearlogo)) + !Skin.HasSetting(NoFloorLabelMovies)]] | [[Container.Content(tvshows) | Container.Content(seasons)] + !Skin.HasSetting(NoFloorLabelTVshows)]]]</visible>
			<include>Animation_WindowFade200</include>
			<visible>[Control.IsVisible(8822) + !Container.OnNext + !Container.OnPrevious + Stringcompare(Control.GetLabel(8822),empty.png)] | !Control.IsVisible(8822) | Container.Content(seasons) | Container.Content(albums)</visible>
			<left>410</left>
			<control type="label">
				<top>1010</top>
				<width>1090</width>
				<align>center</align>
				<label>$VAR[SecondLabelVar]</label>
				<font>Font_Reg28_Caps</font>
				<shadowcolor>floorshadow</shadowcolor>
				<textcolor>white</textcolor>
				<visible>![Control.HasFocus(61) | Control.IsVisible(4050)]</visible>
				<include>Animation_VisibleChange400</include>
				<scroll>true</scroll>
				<scrollspeed>30</scrollspeed>
				<visible>Container.Content(seasons)+ !Skin.HasSetting(ShowcaseBanner)</visible>
			</control>
			<control type="label">
				<top>1010</top>
				<width>1090</width>
				<align>center</align>
				<label>$VAR[SecondLabelVar]</label>
				<font>Font_Reg28_Caps</font>
				<shadowcolor>floorshadow</shadowcolor>
				<textcolor>white</textcolor>
				<visible>![Control.HasFocus(61) | Control.IsVisible(4050)]</visible>
				<include>Animation_VisibleChange400</include>
				<scroll>true</scroll>
				<scrollspeed>30</scrollspeed>
				<visible>!Container.Content(seasons)</visible>
			</control>
			<control type="label">
				<top>932</top>
				<width>1100</width>
				<align>center</align>
				<label>$VAR[FirstLabelVar]</label>
				<font>Font_ShowcaseMainLabel2_Caps</font>
				<shadowcolor>floorshadow</shadowcolor>
				<textcolor>floor</textcolor>
				<scroll>true</scroll>
				<scrollspeed>30</scrollspeed>
				<visible>Container.Content(seasons)+ !Skin.HasSetting(ShowcaseBanner)</visible>
			</control>
			 <control type="label">
				<top>932</top>
				<width>1100</width>
				<align>center</align>
				<label>$VAR[FirstLabelVar]</label>
				<font>Font_ShowcaseMainLabel2_Caps</font>
				<shadowcolor>floorshadow</shadowcolor>
				<textcolor>floor</textcolor>
				<scroll>true</scroll>
				<scrollspeed>30</scrollspeed>
				<visible>!Container.Content(seasons)</visible>
			</control>
		</control>
		<!-- MikeBZH44 : Banner for TV shows and season under thumb in showcase view -->
		<control type="group">
			<animation effect="fade" end="100" time="80" delay="80" reversible="false">Visible</animation>
			<animation effect="fade" start="100" end="0" time="0" reversible="false">Hidden</animation>
			<animation effect="zoom" end="80" center="auto" time="0" condition="true">Conditional</animation>
			<!-- MikeBZH44 : Add NoFloorLabel for Movies in Showcase view -->
			<visible>[Control.IsVisible(501) + [Container.Content(tvshows) |Container.Content(seasons)] + Skin.HasSetting(ShowcaseBanner)]</visible>
			<include>Animation_WindowFade200</include>
			<visible>[Control.IsVisible(8822) + !Container.OnNext + !Container.OnPrevious + Stringcompare(Control.GetLabel(8822),empty.png)] | !Control.IsVisible(8822) | Container.Content(seasons) | Container.Content(albums)</visible>
			<left>410</left>
			<control type="image">
				<left>224</left>
				<top>1090</top>
				<width>552</width>
				<height>104</height>
				<aspectratio scalediffuse="false">scale</aspectratio>
				<texture background="true" diffuse="thumbs/banner_mask.png">$VAR[BannerVar]</texture>
				<visible>Container.Content(seasons)</visible>
			</control>
			<control type="image">
				<left>224</left>
				<top>1094</top>
				<width>552</width>
				<height>96</height>
				<aspectratio scalediffuse="false" align="left">keep</aspectratio>
				<texture background="true" diffuse="thumbs/banner_mask.png">$VAR[LogoVarList]</texture>
				<visible>IsEmpty(ListItem.Art(banner)) + IsEmpty(ListItem.Art(tvshow.banner))</visible>
			</control>
			<control type="label">
				<left>236</left>
				<top>1089</top>
				<width>528</width>
				<height>105</height>
				<align>center</align>
				<label>$INFO[ListItem.Label]</label>
				<font>Font_Bold40</font>
				<shadowcolor>black</shadowcolor>
				<visible>IsEmpty(ListItem.Art(banner)) + IsEmpty(ListItem.Art(tvshow.banner)) + IsEmpty(ListItem.Art(clearlogo))</visible>
			</control>
		</control>
	</include>
	<include name="Furniture_DarkGradient">

		 <!--gradient start-->
		<control type="image">
			<left>-17</left>
			<top>1012</top>
			<width>1936</width>
			<height>72</height>
			<texture>views/showcase_gradient.png</texture>
			<include>Animation_CommonFade</include>
			<visible>!Skin.HasSetting(Nofloor) + [Control.IsVisible(8857) | Control.IsVisible(8860)] + ![Control.IsVisible(53) | Control.IsVisible(52) | Control.IsVisible(50) | Control.IsVisible(518) | Control.IsVisible(57) | Control.IsVisible(511) | Control.IsVisible(516) | Control.IsVisible(514) | Control.IsVisible(506) | Control.IsVisible(550)]</visible>
			<animation effect="slide" time="160" end="1440" tween="cubic" condition="Control.IsVisible(510)">Conditional</animation>
			<animation effect="slide" time="160" end="-750" tween="cubic" condition="Control.IsVisible(512)">Conditional</animation>
		</control>
		<control type="image">
			<left>-17</left>
			<top>992</top>
			<width>1936</width>
			<height>92</height>
			<texture>views/showcase_gradient.png</texture>
			<include>Animation_CommonFade</include>
			<visible>Skin.HasSetting(Nofloor) + [Control.IsVisible(8857) | Control.IsVisible(8860)] + ![Control.IsVisible(53) | Control.IsVisible(52) | Control.IsVisible(50) | Control.IsVisible(518) | Control.IsVisible(57) | Control.IsVisible(511) | Control.IsVisible(516) | Control.IsVisible(514) | Control.IsVisible(506) | Control.IsVisible(550)]</visible>
			<animation effect="slide" time="160" end="1440" tween="cubic" condition="Control.IsVisible(510)">Conditional</animation>
			<animation effect="slide" time="160" end="-750" tween="cubic" condition="Control.IsVisible(512)">Conditional</animation>
		</control>
		 <!--gradient end-->
		<control type="image" id="4050">
			<visible>Container.Scrolling</visible>
			<animation effect="fade" end="100" time="0" delay="2400">Visible</animation>
			<animation effect="fade" time="800">Hidden</animation>
		</control>
		<control type="scrollbar" id="61">
			<left>465</left>
			<top>1035</top>
			<height>40</height>
			<width>975</width>
			<visible>Control.IsVisible(509) | Control.IsVisible(508) | Control.IsVisible(500) | Control.IsVisible(501) | Control.IsVisible(499) | Control.IsVisible(57) | Control.IsVisible(510) | Control.IsVisible(503)</visible>
			<animation effect="fade" start="100" end="0" time="320" condition="![Control.HasFocus(61) | Control.IsVisible(4050)]">Conditional</animation>
			<onup>50</onup>
			<orientation>horizontal</orientation>
			<animation effect="zoom" start="70" end="100" center="auto" tween="back" time="320" condition="Control.HasFocus(61) | Control.IsVisible(4050)">Conditional</animation>
			<texturesliderbar>-</texturesliderbar>
			<texturesliderbarfocus>-</texturesliderbarfocus>
			<textureslidernib>views/scrollbarnub-nofocus.png</textureslidernib>
			<textureslidernibfocus>views/scrollbarnub-focus.png</textureslidernibfocus>
			<texturesliderbackground border="12,0,12,0">views/scrollbarbacklist2.png</texturesliderbackground>
			<ondown condition="!Control.IsVisible(500)">109</ondown>
			<ondown condition="Control.IsVisible(500)">50</ondown>
		</control>
		<control type="image">
			<top>924</top>
			<width>1920</width>
			<height>224</height>
			<texture border="1">home/homemenu_gradient.png</texture>
			<visible>Control.IsVisible(57) | Control.IsVisible(550) | Control.IsVisible(50) | Control.IsVisible(52) | Control.IsVisible(53)</visible>
		</control>
		<control type="button" id="109">
			<include>HiddenObject</include>
			<onup>50</onup>
			<ondown>50</ondown>
			<onleft>50</onleft>
			<onright>50</onright>
			<onclick>SetFocus(50)</onclick>
			<onback>50</onback>
		</control>
		<control type="group">
			<left>20</left>
			<top>-1020</top>
			<visible>Control.HasFocus(109)</visible>
			<include>Animation_WindowFade200</include>
			<animation type="Visible">
				<effect type="zoom" start="150" end="100" center="960,540" time="400" tween="cubic"/>
				<effect type="fade" end="100" time="240"/>
			</animation>
			<animation type="Hidden">
				<effect type="fade" start="100" end="0" time="240"/>
				<effect type="zoom" start="100" end="130" center="960,540" time="240" tween="cubic" easing="in"/>
			</animation>
			<control type="image">
				<width>130</width>
				<height>80</height>
				<texture>dialogs/dialog_back_shadow.png</texture>
				<include>PanelGlowFade</include>
				<visible>!Skin.HasSetting(DisableGlowbar)</visible>
				<colordiffuse>$VAR[ColorDiffuseVar]</colordiffuse>
			</control>
			<control type="image">
				<width>130</width>
				<height>80</height>
				<texture>dialogs/dialog_back.png</texture>
				<animation effect="fade" end="60" time="0" condition="true">Conditional</animation>
				<colordiffuse>$VAR[DialogColorVar]</colordiffuse>
			</control>
			<control type="label">
				<left>15</left>
				<width>100</width>
				<height>74</height>
				<align>center</align>
				<label>31888</label>
				<font>Font_Reg22</font>
				<textcolor>grey2</textcolor>
				<wrapmultiline>true</wrapmultiline>
			</control>
		</control>
	</include>
	<include name="Furniture_Glow">
		<control type="image">
			<top>-100</top>
			<width>1920</width>
			<height>608</height>
			<texture flipy="true">views/showcase_glow.png</texture>
			<visible>!Control.HasFocus(109)</visible>
			<include>Animation_OpenClose_Furniture</include>
			<include>Animation_VisibleChange400</include>
			<visible>![Control.IsVisible(516) | Control.IsVisible(514) | Control.IsVisible(511) | Control.IsVisible(506) | Control.IsVisible(8858) | [Skin.HasSetting(addonwallaltbackground) + Control.IsVisible(512)]]</visible>
			<colordiffuse>$VAR[ExtendedColorDiffuseVar]</colordiffuse>
			<include>Animation_VisibleChange400</include>
			<visible>[Skin.HasSetting(ExtendedGlowMode) + !Skin.HasSetting(DisableGlowbar)] + ![Control.IsVisible(518) + Skin.HasSetting(infopanelbackground)]</visible>
		</control>
	</include>
	<include name="WallPanel">
		<control type="group">
			<include>Animation_Widgets</include>
			<animation effect="fade" end="100" time="160">Visible</animation>
			<animation effect="fade" start="100" end="0" time="160">Hidden</animation>
			<animation type="Conditional" condition="Control.IsVisible(518) + Skin.HasSetting(infopanelfanart)">
				<effect type="zoom" end="50,100" time="320" easing="in" tween="cubic"/>
				<effect type="slide" end="148" time="320" easing="in" tween="cubic"/>
			</animation>
			<visible>[Control.IsVisible(512) + !Skin.HasSetting(addonwallaltbackground)] | [Control.IsVisible(500) + !Skin.HasSetting(wallfullscreen)] | [Control.IsVisible(518) + !Skin.HasSetting(infopanelbackground)]</visible>
			<control type="group">
				<control type="image">
					<left>112</left>
					<top>68</top>
					<animation effect="zoom" start="112,68,1695,1038" end="38,68,1845,1038" time="240" condition="Control.IsVisible(512)">Conditional</animation>
					<animation effect="zoom" start="112,68,1695,1038" end="136,38,1651,1132" time="240" condition="Control.IsVisible(518)">Conditional</animation>
					<width>1695</width>
					<height>1038</height>
					<texture>wall/wall_bg_glow.png</texture>
					<colordiffuse>$VAR[ColorDiffuseVar]</colordiffuse>
					<visible>!Skin.HasSetting(DisableGlowbar)</visible>
					<include>PanelGlowFade</include>
				</control>
				<control type="image">
					<left>112</left>
					<top>68</top>
					<animation effect="zoom" start="112,68,1695,1038" end="38,68,1845,1038" time="240" condition="Control.IsVisible(512)">Conditional</animation>
					<animation effect="zoom" start="112,68,1695,1038" end="136,38,1651,1132" time="240" condition="Control.IsVisible(518)">Conditional</animation>
					<width>1695</width>
					<height>1038</height>
					<texture>wall/wall_bg.png</texture>
					<colordiffuse>$VAR[DialogColorVar]</colordiffuse>
				</control>
				<control type="image">
					<left>112</left>
					<top>68</top>
					<animation effect="zoom" start="112,68,1695,1038" end="38,68,1845,1038" time="240" condition="Control.IsVisible(512)">Conditional</animation>
					<animation effect="zoom" start="112,68,1695,1038" end="136,38,1651,1132" time="240" condition="Control.IsVisible(518)">Conditional</animation>
					<width>1695</width>
					<height>1038</height>
					<texture>wall/wall_bg_reflection.png</texture>
				</control>
			</control>
		</control>
	</include>
	<include name="OverlayVisibility-7">
		<texture>$INFO[ListItem(-7).Overlay,thumbs/]</texture>
		<visible>[Skin.HasSetting(watchedoverlay) + SubString(ListItem(-7).Overlay,OverlayWatched.png)] | [Skin.HasSetting(newstatus)
+ SubString(ListItem(-7).Overlay,OverlayUnWatched.png) + [[Container.Content(movies) + [StringCompare(Window(Home).Property(LatestMovie.1.Title),ListItem(-7).Label)
| StringCompare(Window(Home).Property(LatestMovie.2.Title),ListItem(-7).Label) | StringCompare(Window(Home).Property(LatestMovie.3.Title),ListItem(-7).Label)
| StringCompare(Window(Home).Property(LatestMovie.4.Title),ListItem(-7).Label) | StringCompare(Window(Home).Property(LatestMovie.5.Title),ListItem(-7).Label)
| StringCompare(Window(Home).Property(LatestMovie.6.Title),ListItem(-7).Label) | StringCompare(Window(Home).Property(LatestMovie.7.Title),ListItem(-7).Label)
| StringCompare(Window(Home).Property(LatestMovie.8.Title),ListItem(-7).Label) | StringCompare(Window(Home).Property(LatestMovie.9.Title),ListItem(-7).Label)
| StringCompare(Window(Home).Property(LatestMovie.10.Title),ListItem(-7).Label)]] | [[Container.Content(tvshows)
| Container.Content(seasons)] + [StringCompare(Window(Home).Property(LatestEpisode.1.ShowTitle),ListItem(-7).TvShowTitle)
| StringCompare(Window(Home).Property(LatestEpisode.2.ShowTitle),ListItem(-7).TvShowTitle) | StringCompare(Window(Home).Property(LatestEpisode.3.ShowTitle),ListItem(-7).TvShowTitle)
| StringCompare(Window(Home).Property(LatestEpisode.4.ShowTitle),ListItem(-7).TvShowTitle) | StringCompare(Window(Home).Property(LatestEpisode.5.ShowTitle),ListItem(-7).TvShowTitle)
| StringCompare(Window(Home).Property(LatestEpisode.6.ShowTitle),ListItem(-7).TvShowTitle) | StringCompare(Window(Home).Property(LatestEpisode.7.ShowTitle),ListItem(-7).TvShowTitle)
| StringCompare(Window(Home).Property(LatestEpisode.8.ShowTitle),ListItem(-7).TvShowTitle) | StringCompare(Window(Home).Property(LatestEpisode.9.ShowTitle),ListItem(-7).TvShowTitle)
| StringCompare(Window(Home).Property(LatestEpisode.10.ShowTitle),ListItem(-7).TvShowTitle)]] | [Container.Content(episodes)
+ [StringCompare(Window(Home).Property(LatestEpisode.1.EpisodeTitle),ListItem(-7).Title) | StringCompare(Window(Home).Property(LatestEpisode.2.EpisodeTitle),ListItem(-7).Title)
| StringCompare(Window(Home).Property(LatestEpisode.3.EpisodeTitle),ListItem(-7).Title) | StringCompare(Window(Home).Property(LatestEpisode.4.EpisodeTitle),ListItem(-7).Title)
| StringCompare(Window(Home).Property(LatestEpisode.5.EpisodeTitle),ListItem(-7).Title) | StringCompare(Window(Home).Property(LatestEpisode.6.EpisodeTitle),ListItem(-7).Title)
| StringCompare(Window(Home).Property(LatestEpisode.7.EpisodeTitle),ListItem(-7).Title) | StringCompare(Window(Home).Property(LatestEpisode.8.EpisodeTitle),ListItem(-7).Title)
| StringCompare(Window(Home).Property(LatestEpisode.9.EpisodeTitle),ListItem(-7).Title) | StringCompare(Window(Home).Property(LatestEpisode.10.EpisodeTitle),ListItem(-7).Title)]]]]</visible>
		<visible>[!Container.ListItem(-7).IsResumable + Skin.HasSetting(InProgressFlag)] | [Container.ListItem(-7).IsResumable + !Skin.HasSetting(InProgressFlag)] | !Skin.HasSetting(InProgressFlag)</visible>
	</include>
	<include name="OverlayVisibility-6">
		<texture>$INFO[ListItem(-6).Overlay,thumbs/]</texture>
		<visible>[Skin.HasSetting(watchedoverlay) + SubString(ListItem(-6).Overlay,OverlayWatched.png)] | [Skin.HasSetting(newstatus)
+ SubString(ListItem(-6).Overlay,OverlayUnWatched.png) + [[Container.Content(movies) + [StringCompare(Window(Home).Property(LatestMovie.1.Title),ListItem(-6).Label)
| StringCompare(Window(Home).Property(LatestMovie.2.Title),ListItem(-6).Label) | StringCompare(Window(Home).Property(LatestMovie.3.Title),ListItem(-6).Label)
| StringCompare(Window(Home).Property(LatestMovie.4.Title),ListItem(-6).Label) | StringCompare(Window(Home).Property(LatestMovie.5.Title),ListItem(-6).Label)
| StringCompare(Window(Home).Property(LatestMovie.6.Title),ListItem(-6).Label) | StringCompare(Window(Home).Property(LatestMovie.7.Title),ListItem(-6).Label)
| StringCompare(Window(Home).Property(LatestMovie.8.Title),ListItem(-6).Label) | StringCompare(Window(Home).Property(LatestMovie.9.Title),ListItem(-6).Label)
| StringCompare(Window(Home).Property(LatestMovie.10.Title),ListItem(-6).Label)]] | [[Container.Content(tvshows)
| Container.Content(seasons)] + [StringCompare(Window(Home).Property(LatestEpisode.1.ShowTitle),ListItem(-6).TvShowTitle)
| StringCompare(Window(Home).Property(LatestEpisode.2.ShowTitle),ListItem(-6).TvShowTitle) | StringCompare(Window(Home).Property(LatestEpisode.3.ShowTitle),ListItem(-6).TvShowTitle)
| StringCompare(Window(Home).Property(LatestEpisode.4.ShowTitle),ListItem(-6).TvShowTitle) | StringCompare(Window(Home).Property(LatestEpisode.5.ShowTitle),ListItem(-6).TvShowTitle)
| StringCompare(Window(Home).Property(LatestEpisode.6.ShowTitle),ListItem(-6).TvShowTitle) | StringCompare(Window(Home).Property(LatestEpisode.7.ShowTitle),ListItem(-6).TvShowTitle)
| StringCompare(Window(Home).Property(LatestEpisode.8.ShowTitle),ListItem(-6).TvShowTitle) | StringCompare(Window(Home).Property(LatestEpisode.9.ShowTitle),ListItem(-6).TvShowTitle)
| StringCompare(Window(Home).Property(LatestEpisode.10.ShowTitle),ListItem(-6).TvShowTitle)]] | [Container.Content(episodes)
+ [StringCompare(Window(Home).Property(LatestEpisode.1.EpisodeTitle),ListItem(-6).Title) | StringCompare(Window(Home).Property(LatestEpisode.2.EpisodeTitle),ListItem(-6).Title)
| StringCompare(Window(Home).Property(LatestEpisode.3.EpisodeTitle),ListItem(-6).Title) | StringCompare(Window(Home).Property(LatestEpisode.4.EpisodeTitle),ListItem(-6).Title)
| StringCompare(Window(Home).Property(LatestEpisode.5.EpisodeTitle),ListItem(-6).Title) | StringCompare(Window(Home).Property(LatestEpisode.6.EpisodeTitle),ListItem(-6).Title)
| StringCompare(Window(Home).Property(LatestEpisode.7.EpisodeTitle),ListItem(-6).Title) | StringCompare(Window(Home).Property(LatestEpisode.8.EpisodeTitle),ListItem(-6).Title)
| StringCompare(Window(Home).Property(LatestEpisode.9.EpisodeTitle),ListItem(-6).Title) | StringCompare(Window(Home).Property(LatestEpisode.10.EpisodeTitle),ListItem(-6).Title)]]]]</visible>
		<visible>[!Container.ListItem(-6).IsResumable + Skin.HasSetting(InProgressFlag)] | [Container.ListItem(-6).IsResumable + !Skin.HasSetting(InProgressFlag)] | !Skin.HasSetting(InProgressFlag)</visible>
	</include>
	<include name="OverlayVisibility-5">
		<texture>$INFO[ListItem(-5).Overlay,thumbs/]</texture>
		<visible>[Skin.HasSetting(watchedoverlay) + SubString(ListItem(-5).Overlay,OverlayWatched.png)] | [Skin.HasSetting(newstatus)
+ SubString(ListItem(-5).Overlay,OverlayUnWatched.png) + [[Container.Content(movies) + [StringCompare(Window(Home).Property(LatestMovie.1.Title),ListItem(-5).Label)
| StringCompare(Window(Home).Property(LatestMovie.2.Title),ListItem(-5).Label) | StringCompare(Window(Home).Property(LatestMovie.3.Title),ListItem(-5).Label)
| StringCompare(Window(Home).Property(LatestMovie.4.Title),ListItem(-5).Label) | StringCompare(Window(Home).Property(LatestMovie.5.Title),ListItem(-5).Label)
| StringCompare(Window(Home).Property(LatestMovie.6.Title),ListItem(-5).Label) | StringCompare(Window(Home).Property(LatestMovie.7.Title),ListItem(-5).Label)
| StringCompare(Window(Home).Property(LatestMovie.8.Title),ListItem(-5).Label) | StringCompare(Window(Home).Property(LatestMovie.9.Title),ListItem(-5).Label)
| StringCompare(Window(Home).Property(LatestMovie.10.Title),ListItem(-5).Label)]] | [[Container.Content(tvshows)
| Container.Content(seasons)] + [StringCompare(Window(Home).Property(LatestEpisode.1.ShowTitle),ListItem(-5).TvShowTitle)
| StringCompare(Window(Home).Property(LatestEpisode.2.ShowTitle),ListItem(-5).TvShowTitle) | StringCompare(Window(Home).Property(LatestEpisode.3.ShowTitle),ListItem(-5).TvShowTitle)
| StringCompare(Window(Home).Property(LatestEpisode.4.ShowTitle),ListItem(-5).TvShowTitle) | StringCompare(Window(Home).Property(LatestEpisode.5.ShowTitle),ListItem(-5).TvShowTitle)
| StringCompare(Window(Home).Property(LatestEpisode.6.ShowTitle),ListItem(-5).TvShowTitle) | StringCompare(Window(Home).Property(LatestEpisode.7.ShowTitle),ListItem(-5).TvShowTitle)
| StringCompare(Window(Home).Property(LatestEpisode.8.ShowTitle),ListItem(-5).TvShowTitle) | StringCompare(Window(Home).Property(LatestEpisode.9.ShowTitle),ListItem(-5).TvShowTitle)
| StringCompare(Window(Home).Property(LatestEpisode.10.ShowTitle),ListItem(-5).TvShowTitle)]] | [Container.Content(episodes)
+ [StringCompare(Window(Home).Property(LatestEpisode.1.EpisodeTitle),ListItem(-5).Title) | StringCompare(Window(Home).Property(LatestEpisode.2.EpisodeTitle),ListItem(-5).Title)
| StringCompare(Window(Home).Property(LatestEpisode.3.EpisodeTitle),ListItem(-5).Title) | StringCompare(Window(Home).Property(LatestEpisode.4.EpisodeTitle),ListItem(-5).Title)
| StringCompare(Window(Home).Property(LatestEpisode.5.EpisodeTitle),ListItem(-5).Title) | StringCompare(Window(Home).Property(LatestEpisode.6.EpisodeTitle),ListItem(-5).Title)
| StringCompare(Window(Home).Property(LatestEpisode.7.EpisodeTitle),ListItem(-5).Title) | StringCompare(Window(Home).Property(LatestEpisode.8.EpisodeTitle),ListItem(-5).Title)
| StringCompare(Window(Home).Property(LatestEpisode.9.EpisodeTitle),ListItem(-5).Title) | StringCompare(Window(Home).Property(LatestEpisode.10.EpisodeTitle),ListItem(-5).Title)]]]]</visible>
		<visible>[!Container.ListItem(-5).IsResumable + Skin.HasSetting(InProgressFlag)] | [Container.ListItem(-5).IsResumable + !Skin.HasSetting(InProgressFlag)] | !Skin.HasSetting(InProgressFlag)</visible>
	</include>
	<include name="OverlayVisibility-4">
		<texture>$INFO[ListItem(-4).Overlay,thumbs/]</texture>
		<visible>[Skin.HasSetting(watchedoverlay) + SubString(ListItem(-4).Overlay,OverlayWatched.png)] | [Skin.HasSetting(newstatus)
+ SubString(ListItem(-4).Overlay,OverlayUnWatched.png) + [[Container.Content(movies) + [StringCompare(Window(Home).Property(LatestMovie.1.Title),ListItem(-4).Label)
| StringCompare(Window(Home).Property(LatestMovie.2.Title),ListItem(-4).Label) | StringCompare(Window(Home).Property(LatestMovie.3.Title),ListItem(-4).Label)
| StringCompare(Window(Home).Property(LatestMovie.4.Title),ListItem(-4).Label) | StringCompare(Window(Home).Property(LatestMovie.5.Title),ListItem(-4).Label)
| StringCompare(Window(Home).Property(LatestMovie.6.Title),ListItem(-4).Label) | StringCompare(Window(Home).Property(LatestMovie.7.Title),ListItem(-4).Label)
| StringCompare(Window(Home).Property(LatestMovie.8.Title),ListItem(-4).Label) | StringCompare(Window(Home).Property(LatestMovie.9.Title),ListItem(-4).Label)
| StringCompare(Window(Home).Property(LatestMovie.10.Title),ListItem(-4).Label)]] | [[Container.Content(tvshows)
| Container.Content(seasons)] + [StringCompare(Window(Home).Property(LatestEpisode.1.ShowTitle),ListItem(-4).TvShowTitle)
| StringCompare(Window(Home).Property(LatestEpisode.2.ShowTitle),ListItem(-4).TvShowTitle) | StringCompare(Window(Home).Property(LatestEpisode.3.ShowTitle),ListItem(-4).TvShowTitle)
| StringCompare(Window(Home).Property(LatestEpisode.4.ShowTitle),ListItem(-4).TvShowTitle) | StringCompare(Window(Home).Property(LatestEpisode.5.ShowTitle),ListItem(-4).TvShowTitle)
| StringCompare(Window(Home).Property(LatestEpisode.6.ShowTitle),ListItem(-4).TvShowTitle) | StringCompare(Window(Home).Property(LatestEpisode.7.ShowTitle),ListItem(-4).TvShowTitle)
| StringCompare(Window(Home).Property(LatestEpisode.8.ShowTitle),ListItem(-4).TvShowTitle) | StringCompare(Window(Home).Property(LatestEpisode.9.ShowTitle),ListItem(-4).TvShowTitle)
| StringCompare(Window(Home).Property(LatestEpisode.10.ShowTitle),ListItem(-4).TvShowTitle)]] | [Container.Content(episodes)
+ [StringCompare(Window(Home).Property(LatestEpisode.1.EpisodeTitle),ListItem(-4).Title) | StringCompare(Window(Home).Property(LatestEpisode.2.EpisodeTitle),ListItem(-4).Title)
| StringCompare(Window(Home).Property(LatestEpisode.3.EpisodeTitle),ListItem(-4).Title) | StringCompare(Window(Home).Property(LatestEpisode.4.EpisodeTitle),ListItem(-4).Title)
| StringCompare(Window(Home).Property(LatestEpisode.5.EpisodeTitle),ListItem(-4).Title) | StringCompare(Window(Home).Property(LatestEpisode.6.EpisodeTitle),ListItem(-4).Title)
| StringCompare(Window(Home).Property(LatestEpisode.7.EpisodeTitle),ListItem(-4).Title) | StringCompare(Window(Home).Property(LatestEpisode.8.EpisodeTitle),ListItem(-4).Title)
| StringCompare(Window(Home).Property(LatestEpisode.9.EpisodeTitle),ListItem(-4).Title) | StringCompare(Window(Home).Property(LatestEpisode.10.EpisodeTitle),ListItem(-4).Title)]]]]</visible>
		<visible>[!Container.ListItem(-4).IsResumable + Skin.HasSetting(InProgressFlag)] | [Container.ListItem(-4).IsResumable + !Skin.HasSetting(InProgressFlag)] | !Skin.HasSetting(InProgressFlag)</visible>
	</include>
	<include name="OverlayVisibility-3">
		<texture>$INFO[ListItem(-3).Overlay,thumbs/]</texture>
		<visible>[Skin.HasSetting(watchedoverlay) + SubString(ListItem(-3).Overlay,OverlayWatched.png)] | [Skin.HasSetting(newstatus)
+ SubString(ListItem(-3).Overlay,OverlayUnWatched.png) + [[Container.Content(movies) + [StringCompare(Window(Home).Property(LatestMovie.1.Title),ListItem(-3).Label)
| StringCompare(Window(Home).Property(LatestMovie.2.Title),ListItem(-3).Label) | StringCompare(Window(Home).Property(LatestMovie.3.Title),ListItem(-3).Label)
| StringCompare(Window(Home).Property(LatestMovie.4.Title),ListItem(-3).Label) | StringCompare(Window(Home).Property(LatestMovie.5.Title),ListItem(-3).Label)
| StringCompare(Window(Home).Property(LatestMovie.6.Title),ListItem(-3).Label) | StringCompare(Window(Home).Property(LatestMovie.7.Title),ListItem(-3).Label)
| StringCompare(Window(Home).Property(LatestMovie.8.Title),ListItem(-3).Label) | StringCompare(Window(Home).Property(LatestMovie.9.Title),ListItem(-3).Label)
| StringCompare(Window(Home).Property(LatestMovie.10.Title),ListItem(-3).Label)]] | [[Container.Content(tvshows)
| Container.Content(seasons)] + [StringCompare(Window(Home).Property(LatestEpisode.1.ShowTitle),ListItem(-3).TvShowTitle)
| StringCompare(Window(Home).Property(LatestEpisode.2.ShowTitle),ListItem(-3).TvShowTitle) | StringCompare(Window(Home).Property(LatestEpisode.3.ShowTitle),ListItem(-3).TvShowTitle)
| StringCompare(Window(Home).Property(LatestEpisode.4.ShowTitle),ListItem(-3).TvShowTitle) | StringCompare(Window(Home).Property(LatestEpisode.5.ShowTitle),ListItem(-3).TvShowTitle)
| StringCompare(Window(Home).Property(LatestEpisode.6.ShowTitle),ListItem(-3).TvShowTitle) | StringCompare(Window(Home).Property(LatestEpisode.7.ShowTitle),ListItem(-3).TvShowTitle)
| StringCompare(Window(Home).Property(LatestEpisode.8.ShowTitle),ListItem(-3).TvShowTitle) | StringCompare(Window(Home).Property(LatestEpisode.9.ShowTitle),ListItem(-3).TvShowTitle)
| StringCompare(Window(Home).Property(LatestEpisode.10.ShowTitle),ListItem(-3).TvShowTitle)]] | [Container.Content(episodes)
+ [StringCompare(Window(Home).Property(LatestEpisode.1.EpisodeTitle),ListItem(-3).Title) | StringCompare(Window(Home).Property(LatestEpisode.2.EpisodeTitle),ListItem(-3).Title)
| StringCompare(Window(Home).Property(LatestEpisode.3.EpisodeTitle),ListItem(-3).Title) | StringCompare(Window(Home).Property(LatestEpisode.4.EpisodeTitle),ListItem(-3).Title)
| StringCompare(Window(Home).Property(LatestEpisode.5.EpisodeTitle),ListItem(-3).Title) | StringCompare(Window(Home).Property(LatestEpisode.6.EpisodeTitle),ListItem(-3).Title)
| StringCompare(Window(Home).Property(LatestEpisode.7.EpisodeTitle),ListItem(-3).Title) | StringCompare(Window(Home).Property(LatestEpisode.8.EpisodeTitle),ListItem(-3).Title)
| StringCompare(Window(Home).Property(LatestEpisode.9.EpisodeTitle),ListItem(-3).Title) | StringCompare(Window(Home).Property(LatestEpisode.10.EpisodeTitle),ListItem(-3).Title)]]]]</visible>
		<visible>[!Container.ListItem(-3).IsResumable + Skin.HasSetting(InProgressFlag)] | [Container.ListItem(-3).IsResumable + !Skin.HasSetting(InProgressFlag)] | !Skin.HasSetting(InProgressFlag)</visible>
	</include>
	<include name="OverlayVisibility-2">
		<texture>$INFO[ListItem(-2).Overlay,thumbs/]</texture>
		<visible>[Skin.HasSetting(watchedoverlay) + SubString(ListItem(-2).Overlay,OverlayWatched.png)] | [Skin.HasSetting(newstatus)
+ SubString(ListItem(-2).Overlay,OverlayUnWatched.png) + [[Container.Content(movies) + [StringCompare(Window(Home).Property(LatestMovie.1.Title),ListItem(-2).Label)
| StringCompare(Window(Home).Property(LatestMovie.2.Title),ListItem(-2).Label) | StringCompare(Window(Home).Property(LatestMovie.3.Title),ListItem(-2).Label)
| StringCompare(Window(Home).Property(LatestMovie.4.Title),ListItem(-2).Label) | StringCompare(Window(Home).Property(LatestMovie.5.Title),ListItem(-2).Label)
| StringCompare(Window(Home).Property(LatestMovie.6.Title),ListItem(-2).Label) | StringCompare(Window(Home).Property(LatestMovie.7.Title),ListItem(-2).Label)
| StringCompare(Window(Home).Property(LatestMovie.8.Title),ListItem(-2).Label) | StringCompare(Window(Home).Property(LatestMovie.9.Title),ListItem(-2).Label)
| StringCompare(Window(Home).Property(LatestMovie.10.Title),ListItem(-2).Label)]] | [[Container.Content(tvshows)
| Container.Content(seasons)] + [StringCompare(Window(Home).Property(LatestEpisode.1.ShowTitle),ListItem(-2).TvShowTitle)
| StringCompare(Window(Home).Property(LatestEpisode.2.ShowTitle),ListItem(-2).TvShowTitle) | StringCompare(Window(Home).Property(LatestEpisode.3.ShowTitle),ListItem(-2).TvShowTitle)
| StringCompare(Window(Home).Property(LatestEpisode.4.ShowTitle),ListItem(-2).TvShowTitle) | StringCompare(Window(Home).Property(LatestEpisode.5.ShowTitle),ListItem(-2).TvShowTitle)
| StringCompare(Window(Home).Property(LatestEpisode.6.ShowTitle),ListItem(-2).TvShowTitle) | StringCompare(Window(Home).Property(LatestEpisode.7.ShowTitle),ListItem(-2).TvShowTitle)
| StringCompare(Window(Home).Property(LatestEpisode.8.ShowTitle),ListItem(-2).TvShowTitle) | StringCompare(Window(Home).Property(LatestEpisode.9.ShowTitle),ListItem(-2).TvShowTitle)
| StringCompare(Window(Home).Property(LatestEpisode.10.ShowTitle),ListItem(-2).TvShowTitle)]] | [Container.Content(episodes)
+ [StringCompare(Window(Home).Property(LatestEpisode.1.EpisodeTitle),ListItem(-2).Title) | StringCompare(Window(Home).Property(LatestEpisode.2.EpisodeTitle),ListItem(-2).Title)
| StringCompare(Window(Home).Property(LatestEpisode.3.EpisodeTitle),ListItem(-2).Title) | StringCompare(Window(Home).Property(LatestEpisode.4.EpisodeTitle),ListItem(-2).Title)
| StringCompare(Window(Home).Property(LatestEpisode.5.EpisodeTitle),ListItem(-2).Title) | StringCompare(Window(Home).Property(LatestEpisode.6.EpisodeTitle),ListItem(-2).Title)
| StringCompare(Window(Home).Property(LatestEpisode.7.EpisodeTitle),ListItem(-2).Title) | StringCompare(Window(Home).Property(LatestEpisode.8.EpisodeTitle),ListItem(-2).Title)
| StringCompare(Window(Home).Property(LatestEpisode.9.EpisodeTitle),ListItem(-2).Title) | StringCompare(Window(Home).Property(LatestEpisode.10.EpisodeTitle),ListItem(-2).Title)]]]]</visible>
		<visible>[!Container.ListItem(-2).IsResumable + Skin.HasSetting(InProgressFlag)] | [Container.ListItem(-2).IsResumable + !Skin.HasSetting(InProgressFlag)] | !Skin.HasSetting(InProgressFlag)</visible>
	</include>
	<include name="OverlayVisibility-1">
		<texture>$INFO[ListItem(-1).Overlay,thumbs/]</texture>
		<visible>[Skin.HasSetting(watchedoverlay) + SubString(ListItem(-1).Overlay,OverlayWatched.png)] | [Skin.HasSetting(newstatus)
+ SubString(ListItem(-1).Overlay,OverlayUnWatched.png) + [[Container.Content(movies) + [StringCompare(Window(Home).Property(LatestMovie.1.Title),ListItem(-1).Label)
| StringCompare(Window(Home).Property(LatestMovie.2.Title),ListItem(-1).Label) | StringCompare(Window(Home).Property(LatestMovie.3.Title),ListItem(-1).Label)
| StringCompare(Window(Home).Property(LatestMovie.4.Title),ListItem(-1).Label) | StringCompare(Window(Home).Property(LatestMovie.5.Title),ListItem(-1).Label)
| StringCompare(Window(Home).Property(LatestMovie.6.Title),ListItem(-1).Label) | StringCompare(Window(Home).Property(LatestMovie.7.Title),ListItem(-1).Label)
| StringCompare(Window(Home).Property(LatestMovie.8.Title),ListItem(-1).Label) | StringCompare(Window(Home).Property(LatestMovie.9.Title),ListItem(-1).Label)
| StringCompare(Window(Home).Property(LatestMovie.10.Title),ListItem(-1).Label)]] | [[Container.Content(tvshows)
| Container.Content(seasons)] + [StringCompare(Window(Home).Property(LatestEpisode.1.ShowTitle),ListItem(-1).TvShowTitle)
| StringCompare(Window(Home).Property(LatestEpisode.2.ShowTitle),ListItem(-1).TvShowTitle) | StringCompare(Window(Home).Property(LatestEpisode.3.ShowTitle),ListItem(-1).TvShowTitle)
| StringCompare(Window(Home).Property(LatestEpisode.4.ShowTitle),ListItem(-1).TvShowTitle) | StringCompare(Window(Home).Property(LatestEpisode.5.ShowTitle),ListItem(-1).TvShowTitle)
| StringCompare(Window(Home).Property(LatestEpisode.6.ShowTitle),ListItem(-1).TvShowTitle) | StringCompare(Window(Home).Property(LatestEpisode.7.ShowTitle),ListItem(-1).TvShowTitle)
| StringCompare(Window(Home).Property(LatestEpisode.8.ShowTitle),ListItem(-1).TvShowTitle) | StringCompare(Window(Home).Property(LatestEpisode.9.ShowTitle),ListItem(-1).TvShowTitle)
| StringCompare(Window(Home).Property(LatestEpisode.10.ShowTitle),ListItem(-1).TvShowTitle)]] | [Container.Content(episodes)
+ [StringCompare(Window(Home).Property(LatestEpisode.1.EpisodeTitle),ListItem(-1).Title) | StringCompare(Window(Home).Property(LatestEpisode.2.EpisodeTitle),ListItem(-1).Title)
| StringCompare(Window(Home).Property(LatestEpisode.3.EpisodeTitle),ListItem(-1).Title) | StringCompare(Window(Home).Property(LatestEpisode.4.EpisodeTitle),ListItem(-1).Title)
| StringCompare(Window(Home).Property(LatestEpisode.5.EpisodeTitle),ListItem(-1).Title) | StringCompare(Window(Home).Property(LatestEpisode.6.EpisodeTitle),ListItem(-1).Title)
| StringCompare(Window(Home).Property(LatestEpisode.7.EpisodeTitle),ListItem(-1).Title) | StringCompare(Window(Home).Property(LatestEpisode.8.EpisodeTitle),ListItem(-1).Title)
| StringCompare(Window(Home).Property(LatestEpisode.9.EpisodeTitle),ListItem(-1).Title) | StringCompare(Window(Home).Property(LatestEpisode.10.EpisodeTitle),ListItem(-1).Title)]]]]</visible>
		<visible>[!Container.ListItem(-1).IsResumable + Skin.HasSetting(InProgressFlag)] | [Container.ListItem(-1).IsResumable + !Skin.HasSetting(InProgressFlag)] | !Skin.HasSetting(InProgressFlag)</visible>
	</include>
	<include name="OverlayVisibility0">
		<texture>$INFO[ListItem(0).Overlay,thumbs/]</texture>
		<visible>[Skin.HasSetting(watchedoverlay) + SubString(ListItem(0).Overlay,OverlayWatched.png)] | [Skin.HasSetting(newstatus)
+ SubString(ListItem(0).Overlay,OverlayUnWatched.png) + [[Container.Content(movies) + [StringCompare(Window(Home).Property(LatestMovie.1.Title),ListItem(0).Label)
| StringCompare(Window(Home).Property(LatestMovie.2.Title),ListItem(0).Label) | StringCompare(Window(Home).Property(LatestMovie.3.Title),ListItem(0).Label)
| StringCompare(Window(Home).Property(LatestMovie.4.Title),ListItem(0).Label) | StringCompare(Window(Home).Property(LatestMovie.5.Title),ListItem(0).Label)
| StringCompare(Window(Home).Property(LatestMovie.6.Title),ListItem(0).Label) | StringCompare(Window(Home).Property(LatestMovie.7.Title),ListItem(0).Label)
| StringCompare(Window(Home).Property(LatestMovie.8.Title),ListItem(0).Label) | StringCompare(Window(Home).Property(LatestMovie.9.Title),ListItem(0).Label)
| StringCompare(Window(Home).Property(LatestMovie.10.Title),ListItem(0).Label)]] | [[Container.Content(tvshows)
| Container.Content(seasons)] + [StringCompare(Window(Home).Property(LatestEpisode.1.ShowTitle),ListItem(0).TvShowTitle)
| StringCompare(Window(Home).Property(LatestEpisode.2.ShowTitle),ListItem(0).TvShowTitle) | StringCompare(Window(Home).Property(LatestEpisode.3.ShowTitle),ListItem(0).TvShowTitle)
| StringCompare(Window(Home).Property(LatestEpisode.4.ShowTitle),ListItem(0).TvShowTitle) | StringCompare(Window(Home).Property(LatestEpisode.5.ShowTitle),ListItem(0).TvShowTitle)
| StringCompare(Window(Home).Property(LatestEpisode.6.ShowTitle),ListItem(0).TvShowTitle) | StringCompare(Window(Home).Property(LatestEpisode.7.ShowTitle),ListItem(0).TvShowTitle)
| StringCompare(Window(Home).Property(LatestEpisode.8.ShowTitle),ListItem(0).TvShowTitle) | StringCompare(Window(Home).Property(LatestEpisode.9.ShowTitle),ListItem(0).TvShowTitle)
| StringCompare(Window(Home).Property(LatestEpisode.10.ShowTitle),ListItem(0).TvShowTitle)]] | [Container.Content(episodes)
+ [StringCompare(Window(Home).Property(LatestEpisode.1.EpisodeTitle),ListItem(0).Title) | StringCompare(Window(Home).Property(LatestEpisode.2.EpisodeTitle),ListItem(0).Title)
| StringCompare(Window(Home).Property(LatestEpisode.3.EpisodeTitle),ListItem(0).Title) | StringCompare(Window(Home).Property(LatestEpisode.4.EpisodeTitle),ListItem(0).Title)
| StringCompare(Window(Home).Property(LatestEpisode.5.EpisodeTitle),ListItem(0).Title) | StringCompare(Window(Home).Property(LatestEpisode.6.EpisodeTitle),ListItem(0).Title)
| StringCompare(Window(Home).Property(LatestEpisode.7.EpisodeTitle),ListItem(0).Title) | StringCompare(Window(Home).Property(LatestEpisode.8.EpisodeTitle),ListItem(0).Title)
| StringCompare(Window(Home).Property(LatestEpisode.9.EpisodeTitle),ListItem(0).Title) | StringCompare(Window(Home).Property(LatestEpisode.10.EpisodeTitle),ListItem(0).Title)]]]]</visible>
		<visible>[!Container.ListItem(0).IsResumable + Skin.HasSetting(InProgressFlag)] | [Container.ListItem(0).IsResumable + !Skin.HasSetting(InProgressFlag)] | !Skin.HasSetting(InProgressFlag)</visible>
	</include>
	<include name="OverlayVisibility1">
		<texture>$INFO[ListItem(1).Overlay,thumbs/]</texture>
		<visible>[Skin.HasSetting(watchedoverlay) + SubString(ListItem(1).Overlay,OverlayWatched.png)] | [Skin.HasSetting(newstatus)
+ SubString(ListItem(1).Overlay,OverlayUnWatched.png) + [[Container.Content(movies) + [StringCompare(Window(Home).Property(LatestMovie.1.Title),ListItem(1).Label)
| StringCompare(Window(Home).Property(LatestMovie.2.Title),ListItem(1).Label) | StringCompare(Window(Home).Property(LatestMovie.3.Title),ListItem(1).Label)
| StringCompare(Window(Home).Property(LatestMovie.4.Title),ListItem(1).Label) | StringCompare(Window(Home).Property(LatestMovie.5.Title),ListItem(1).Label)
| StringCompare(Window(Home).Property(LatestMovie.6.Title),ListItem(1).Label) | StringCompare(Window(Home).Property(LatestMovie.7.Title),ListItem(1).Label)
| StringCompare(Window(Home).Property(LatestMovie.8.Title),ListItem(1).Label) | StringCompare(Window(Home).Property(LatestMovie.9.Title),ListItem(1).Label)
| StringCompare(Window(Home).Property(LatestMovie.10.Title),ListItem(1).Label)]] | [[Container.Content(tvshows)
| Container.Content(seasons)] + [StringCompare(Window(Home).Property(LatestEpisode.1.ShowTitle),ListItem(1).TvShowTitle)
| StringCompare(Window(Home).Property(LatestEpisode.2.ShowTitle),ListItem(1).TvShowTitle) | StringCompare(Window(Home).Property(LatestEpisode.3.ShowTitle),ListItem(1).TvShowTitle)
| StringCompare(Window(Home).Property(LatestEpisode.4.ShowTitle),ListItem(1).TvShowTitle) | StringCompare(Window(Home).Property(LatestEpisode.5.ShowTitle),ListItem(1).TvShowTitle)
| StringCompare(Window(Home).Property(LatestEpisode.6.ShowTitle),ListItem(1).TvShowTitle) | StringCompare(Window(Home).Property(LatestEpisode.7.ShowTitle),ListItem(1).TvShowTitle)
| StringCompare(Window(Home).Property(LatestEpisode.8.ShowTitle),ListItem(1).TvShowTitle) | StringCompare(Window(Home).Property(LatestEpisode.9.ShowTitle),ListItem(1).TvShowTitle)
| StringCompare(Window(Home).Property(LatestEpisode.10.ShowTitle),ListItem(1).TvShowTitle)]] | [Container.Content(episodes)
+ [StringCompare(Window(Home).Property(LatestEpisode.1.EpisodeTitle),ListItem(1).Title) | StringCompare(Window(Home).Property(LatestEpisode.2.EpisodeTitle),ListItem(1).Title)
| StringCompare(Window(Home).Property(LatestEpisode.3.EpisodeTitle),ListItem(1).Title) | StringCompare(Window(Home).Property(LatestEpisode.4.EpisodeTitle),ListItem(1).Title)
| StringCompare(Window(Home).Property(LatestEpisode.5.EpisodeTitle),ListItem(1).Title) | StringCompare(Window(Home).Property(LatestEpisode.6.EpisodeTitle),ListItem(1).Title)
| StringCompare(Window(Home).Property(LatestEpisode.7.EpisodeTitle),ListItem(1).Title) | StringCompare(Window(Home).Property(LatestEpisode.8.EpisodeTitle),ListItem(1).Title)
| StringCompare(Window(Home).Property(LatestEpisode.9.EpisodeTitle),ListItem(1).Title) | StringCompare(Window(Home).Property(LatestEpisode.10.EpisodeTitle),ListItem(1).Title)]]]]</visible>
		<visible>[!Container.ListItem(1).IsResumable + Skin.HasSetting(InProgressFlag)] | [Container.ListItem(1).IsResumable + !Skin.HasSetting(InProgressFlag)] | !Skin.HasSetting(InProgressFlag)</visible>
	</include>
	<include name="OverlayVisibility2">
		<texture>$INFO[ListItem(2).Overlay,thumbs/]</texture>
		<visible>[Skin.HasSetting(watchedoverlay) + SubString(ListItem(2).Overlay,OverlayWatched.png)] | [Skin.HasSetting(newstatus)
+ SubString(ListItem(2).Overlay,OverlayUnWatched.png) + [[Container.Content(movies) + [StringCompare(Window(Home).Property(LatestMovie.1.Title),ListItem(2).Label)
| StringCompare(Window(Home).Property(LatestMovie.2.Title),ListItem(2).Label) | StringCompare(Window(Home).Property(LatestMovie.3.Title),ListItem(2).Label)
| StringCompare(Window(Home).Property(LatestMovie.4.Title),ListItem(2).Label) | StringCompare(Window(Home).Property(LatestMovie.5.Title),ListItem(2).Label)
| StringCompare(Window(Home).Property(LatestMovie.6.Title),ListItem(2).Label) | StringCompare(Window(Home).Property(LatestMovie.7.Title),ListItem(2).Label)
| StringCompare(Window(Home).Property(LatestMovie.8.Title),ListItem(2).Label) | StringCompare(Window(Home).Property(LatestMovie.9.Title),ListItem(2).Label)
| StringCompare(Window(Home).Property(LatestMovie.10.Title),ListItem(2).Label)]] | [[Container.Content(tvshows)
| Container.Content(seasons)] + [StringCompare(Window(Home).Property(LatestEpisode.1.ShowTitle),ListItem(2).TvShowTitle)
| StringCompare(Window(Home).Property(LatestEpisode.2.ShowTitle),ListItem(2).TvShowTitle) | StringCompare(Window(Home).Property(LatestEpisode.3.ShowTitle),ListItem(2).TvShowTitle)
| StringCompare(Window(Home).Property(LatestEpisode.4.ShowTitle),ListItem(2).TvShowTitle) | StringCompare(Window(Home).Property(LatestEpisode.5.ShowTitle),ListItem(2).TvShowTitle)
| StringCompare(Window(Home).Property(LatestEpisode.6.ShowTitle),ListItem(2).TvShowTitle) | StringCompare(Window(Home).Property(LatestEpisode.7.ShowTitle),ListItem(2).TvShowTitle)
| StringCompare(Window(Home).Property(LatestEpisode.8.ShowTitle),ListItem(2).TvShowTitle) | StringCompare(Window(Home).Property(LatestEpisode.9.ShowTitle),ListItem(2).TvShowTitle)
| StringCompare(Window(Home).Property(LatestEpisode.10.ShowTitle),ListItem(2).TvShowTitle)]] | [Container.Content(episodes)
+ [StringCompare(Window(Home).Property(LatestEpisode.1.EpisodeTitle),ListItem(2).Title) | StringCompare(Window(Home).Property(LatestEpisode.2.EpisodeTitle),ListItem(2).Title)
| StringCompare(Window(Home).Property(LatestEpisode.3.EpisodeTitle),ListItem(2).Title) | StringCompare(Window(Home).Property(LatestEpisode.4.EpisodeTitle),ListItem(2).Title)
| StringCompare(Window(Home).Property(LatestEpisode.5.EpisodeTitle),ListItem(2).Title) | StringCompare(Window(Home).Property(LatestEpisode.6.EpisodeTitle),ListItem(2).Title)
| StringCompare(Window(Home).Property(LatestEpisode.7.EpisodeTitle),ListItem(2).Title) | StringCompare(Window(Home).Property(LatestEpisode.8.EpisodeTitle),ListItem(2).Title)
| StringCompare(Window(Home).Property(LatestEpisode.9.EpisodeTitle),ListItem(2).Title) | StringCompare(Window(Home).Property(LatestEpisode.10.EpisodeTitle),ListItem(2).Title)]]]]</visible>
		<visible>[!Container.ListItem(2).IsResumable + Skin.HasSetting(InProgressFlag)] | [Container.ListItem(2).IsResumable + !Skin.HasSetting(InProgressFlag)] | !Skin.HasSetting(InProgressFlag)</visible>
	</include>
	<include name="OverlayVisibility3">
		<texture>$INFO[ListItem(3).Overlay,thumbs/]</texture>
		<visible>[Skin.HasSetting(watchedoverlay) + SubString(ListItem(3).Overlay,OverlayWatched.png)] | [Skin.HasSetting(newstatus)
+ SubString(ListItem(3).Overlay,OverlayUnWatched.png) + [[Container.Content(movies) + [StringCompare(Window(Home).Property(LatestMovie.1.Title),ListItem(3).Label)
| StringCompare(Window(Home).Property(LatestMovie.2.Title),ListItem(3).Label) | StringCompare(Window(Home).Property(LatestMovie.3.Title),ListItem(3).Label)
| StringCompare(Window(Home).Property(LatestMovie.4.Title),ListItem(3).Label) | StringCompare(Window(Home).Property(LatestMovie.5.Title),ListItem(3).Label)
| StringCompare(Window(Home).Property(LatestMovie.6.Title),ListItem(3).Label) | StringCompare(Window(Home).Property(LatestMovie.7.Title),ListItem(3).Label)
| StringCompare(Window(Home).Property(LatestMovie.8.Title),ListItem(3).Label) | StringCompare(Window(Home).Property(LatestMovie.9.Title),ListItem(3).Label)
| StringCompare(Window(Home).Property(LatestMovie.10.Title),ListItem(3).Label)]] | [[Container.Content(tvshows)
| Container.Content(seasons)] + [StringCompare(Window(Home).Property(LatestEpisode.1.ShowTitle),ListItem(3).TvShowTitle)
| StringCompare(Window(Home).Property(LatestEpisode.2.ShowTitle),ListItem(3).TvShowTitle) | StringCompare(Window(Home).Property(LatestEpisode.3.ShowTitle),ListItem(3).TvShowTitle)
| StringCompare(Window(Home).Property(LatestEpisode.4.ShowTitle),ListItem(3).TvShowTitle) | StringCompare(Window(Home).Property(LatestEpisode.5.ShowTitle),ListItem(3).TvShowTitle)
| StringCompare(Window(Home).Property(LatestEpisode.6.ShowTitle),ListItem(3).TvShowTitle) | StringCompare(Window(Home).Property(LatestEpisode.7.ShowTitle),ListItem(3).TvShowTitle)
| StringCompare(Window(Home).Property(LatestEpisode.8.ShowTitle),ListItem(3).TvShowTitle) | StringCompare(Window(Home).Property(LatestEpisode.9.ShowTitle),ListItem(3).TvShowTitle)
| StringCompare(Window(Home).Property(LatestEpisode.10.ShowTitle),ListItem(3).TvShowTitle)]] | [Container.Content(episodes)
+ [StringCompare(Window(Home).Property(LatestEpisode.1.EpisodeTitle),ListItem(3).Title) | StringCompare(Window(Home).Property(LatestEpisode.2.EpisodeTitle),ListItem(3).Title)
| StringCompare(Window(Home).Property(LatestEpisode.3.EpisodeTitle),ListItem(3).Title) | StringCompare(Window(Home).Property(LatestEpisode.4.EpisodeTitle),ListItem(3).Title)
| StringCompare(Window(Home).Property(LatestEpisode.5.EpisodeTitle),ListItem(3).Title) | StringCompare(Window(Home).Property(LatestEpisode.6.EpisodeTitle),ListItem(3).Title)
| StringCompare(Window(Home).Property(LatestEpisode.7.EpisodeTitle),ListItem(3).Title) | StringCompare(Window(Home).Property(LatestEpisode.8.EpisodeTitle),ListItem(3).Title)
| StringCompare(Window(Home).Property(LatestEpisode.9.EpisodeTitle),ListItem(3).Title) | StringCompare(Window(Home).Property(LatestEpisode.10.EpisodeTitle),ListItem(3).Title)]]]]</visible>
		<visible>[!Container.ListItem(3).IsResumable + Skin.HasSetting(InProgressFlag)] | [Container.ListItem(3).IsResumable + !Skin.HasSetting(InProgressFlag)] | !Skin.HasSetting(InProgressFlag)</visible>
	</include>
	<include name="OverlayVisibility4">
		<texture>$INFO[ListItem(4).Overlay,thumbs/]</texture>
		<visible>[Skin.HasSetting(watchedoverlay) + SubString(ListItem(4).Overlay,OverlayWatched.png)] | [Skin.HasSetting(newstatus)
+ SubString(ListItem(4).Overlay,OverlayUnWatched.png) + [[Container.Content(movies) + [StringCompare(Window(Home).Property(LatestMovie.1.Title),ListItem(4).Label)
| StringCompare(Window(Home).Property(LatestMovie.2.Title),ListItem(4).Label) | StringCompare(Window(Home).Property(LatestMovie.3.Title),ListItem(4).Label)
| StringCompare(Window(Home).Property(LatestMovie.4.Title),ListItem(4).Label) | StringCompare(Window(Home).Property(LatestMovie.5.Title),ListItem(4).Label)
| StringCompare(Window(Home).Property(LatestMovie.6.Title),ListItem(4).Label) | StringCompare(Window(Home).Property(LatestMovie.7.Title),ListItem(4).Label)
| StringCompare(Window(Home).Property(LatestMovie.8.Title),ListItem(4).Label) | StringCompare(Window(Home).Property(LatestMovie.9.Title),ListItem(4).Label)
| StringCompare(Window(Home).Property(LatestMovie.10.Title),ListItem(4).Label)]] | [[Container.Content(tvshows)
| Container.Content(seasons)] + [StringCompare(Window(Home).Property(LatestEpisode.1.ShowTitle),ListItem(4).TvShowTitle)
| StringCompare(Window(Home).Property(LatestEpisode.2.ShowTitle),ListItem(4).TvShowTitle) | StringCompare(Window(Home).Property(LatestEpisode.3.ShowTitle),ListItem(4).TvShowTitle)
| StringCompare(Window(Home).Property(LatestEpisode.4.ShowTitle),ListItem(4).TvShowTitle) | StringCompare(Window(Home).Property(LatestEpisode.5.ShowTitle),ListItem(4).TvShowTitle)
| StringCompare(Window(Home).Property(LatestEpisode.6.ShowTitle),ListItem(4).TvShowTitle) | StringCompare(Window(Home).Property(LatestEpisode.7.ShowTitle),ListItem(4).TvShowTitle)
| StringCompare(Window(Home).Property(LatestEpisode.8.ShowTitle),ListItem(4).TvShowTitle) | StringCompare(Window(Home).Property(LatestEpisode.9.ShowTitle),ListItem(4).TvShowTitle)
| StringCompare(Window(Home).Property(LatestEpisode.10.ShowTitle),ListItem(4).TvShowTitle)]] | [Container.Content(episodes)
+ [StringCompare(Window(Home).Property(LatestEpisode.1.EpisodeTitle),ListItem(4).Title) | StringCompare(Window(Home).Property(LatestEpisode.2.EpisodeTitle),ListItem(4).Title)
| StringCompare(Window(Home).Property(LatestEpisode.3.EpisodeTitle),ListItem(4).Title) | StringCompare(Window(Home).Property(LatestEpisode.4.EpisodeTitle),ListItem(4).Title)
| StringCompare(Window(Home).Property(LatestEpisode.5.EpisodeTitle),ListItem(4).Title) | StringCompare(Window(Home).Property(LatestEpisode.6.EpisodeTitle),ListItem(4).Title)
| StringCompare(Window(Home).Property(LatestEpisode.7.EpisodeTitle),ListItem(4).Title) | StringCompare(Window(Home).Property(LatestEpisode.8.EpisodeTitle),ListItem(4).Title)
| StringCompare(Window(Home).Property(LatestEpisode.9.EpisodeTitle),ListItem(4).Title) | StringCompare(Window(Home).Property(LatestEpisode.10.EpisodeTitle),ListItem(4).Title)]]]]</visible>
		<visible>[!Container.ListItem(4).IsResumable + Skin.HasSetting(InProgressFlag)] | [Container.ListItem(4).IsResumable + !Skin.HasSetting(InProgressFlag)] | !Skin.HasSetting(InProgressFlag)</visible>
	</include>
	<include name="OverlayVisibility5">
		<texture>$INFO[ListItem(5).Overlay,thumbs/]</texture>
		<visible>[Skin.HasSetting(watchedoverlay) + SubString(ListItem(5).Overlay,OverlayWatched.png)] | [Skin.HasSetting(newstatus)
+ SubString(ListItem(5).Overlay,OverlayUnWatched.png) + [[Container.Content(movies) + [StringCompare(Window(Home).Property(LatestMovie.1.Title),ListItem(5).Label)
| StringCompare(Window(Home).Property(LatestMovie.2.Title),ListItem(5).Label) | StringCompare(Window(Home).Property(LatestMovie.3.Title),ListItem(5).Label)
| StringCompare(Window(Home).Property(LatestMovie.4.Title),ListItem(5).Label) | StringCompare(Window(Home).Property(LatestMovie.5.Title),ListItem(5).Label)
| StringCompare(Window(Home).Property(LatestMovie.6.Title),ListItem(5).Label) | StringCompare(Window(Home).Property(LatestMovie.7.Title),ListItem(5).Label)
| StringCompare(Window(Home).Property(LatestMovie.8.Title),ListItem(5).Label) | StringCompare(Window(Home).Property(LatestMovie.9.Title),ListItem(5).Label)
| StringCompare(Window(Home).Property(LatestMovie.10.Title),ListItem(5).Label)]] | [[Container.Content(tvshows)
| Container.Content(seasons)] + [StringCompare(Window(Home).Property(LatestEpisode.1.ShowTitle),ListItem(5).TvShowTitle)
| StringCompare(Window(Home).Property(LatestEpisode.2.ShowTitle),ListItem(5).TvShowTitle) | StringCompare(Window(Home).Property(LatestEpisode.3.ShowTitle),ListItem(5).TvShowTitle)
| StringCompare(Window(Home).Property(LatestEpisode.4.ShowTitle),ListItem(5).TvShowTitle) | StringCompare(Window(Home).Property(LatestEpisode.5.ShowTitle),ListItem(5).TvShowTitle)
| StringCompare(Window(Home).Property(LatestEpisode.6.ShowTitle),ListItem(5).TvShowTitle) | StringCompare(Window(Home).Property(LatestEpisode.7.ShowTitle),ListItem(5).TvShowTitle)
| StringCompare(Window(Home).Property(LatestEpisode.8.ShowTitle),ListItem(5).TvShowTitle) | StringCompare(Window(Home).Property(LatestEpisode.9.ShowTitle),ListItem(5).TvShowTitle)
| StringCompare(Window(Home).Property(LatestEpisode.10.ShowTitle),ListItem(5).TvShowTitle)]] | [Container.Content(episodes)
+ [StringCompare(Window(Home).Property(LatestEpisode.1.EpisodeTitle),ListItem(5).Title) | StringCompare(Window(Home).Property(LatestEpisode.2.EpisodeTitle),ListItem(5).Title)
| StringCompare(Window(Home).Property(LatestEpisode.3.EpisodeTitle),ListItem(5).Title) | StringCompare(Window(Home).Property(LatestEpisode.4.EpisodeTitle),ListItem(5).Title)
| StringCompare(Window(Home).Property(LatestEpisode.5.EpisodeTitle),ListItem(5).Title) | StringCompare(Window(Home).Property(LatestEpisode.6.EpisodeTitle),ListItem(5).Title)
| StringCompare(Window(Home).Property(LatestEpisode.7.EpisodeTitle),ListItem(5).Title) | StringCompare(Window(Home).Property(LatestEpisode.8.EpisodeTitle),ListItem(5).Title)
| StringCompare(Window(Home).Property(LatestEpisode.9.EpisodeTitle),ListItem(5).Title) | StringCompare(Window(Home).Property(LatestEpisode.10.EpisodeTitle),ListItem(5).Title)]]]]</visible>
		<visible>[!Container.ListItem(5).IsResumable + Skin.HasSetting(InProgressFlag)] | [Container.ListItem(5).IsResumable + !Skin.HasSetting(InProgressFlag)] | !Skin.HasSetting(InProgressFlag)</visible>
	</include>
	<include name="OverlayVisibility6">
		<texture>$INFO[ListItem(6).Overlay,thumbs/]</texture>
		<visible>[Skin.HasSetting(watchedoverlay) + SubString(ListItem(6).Overlay,OverlayWatched.png)] | [Skin.HasSetting(newstatus)
+ SubString(ListItem(6).Overlay,OverlayUnWatched.png) + [[Container.Content(movies) + [StringCompare(Window(Home).Property(LatestMovie.1.Title),ListItem(6).Label)
| StringCompare(Window(Home).Property(LatestMovie.2.Title),ListItem(6).Label) | StringCompare(Window(Home).Property(LatestMovie.3.Title),ListItem(6).Label)
| StringCompare(Window(Home).Property(LatestMovie.4.Title),ListItem(6).Label) | StringCompare(Window(Home).Property(LatestMovie.5.Title),ListItem(6).Label)
| StringCompare(Window(Home).Property(LatestMovie.6.Title),ListItem(6).Label) | StringCompare(Window(Home).Property(LatestMovie.7.Title),ListItem(6).Label)
| StringCompare(Window(Home).Property(LatestMovie.8.Title),ListItem(6).Label) | StringCompare(Window(Home).Property(LatestMovie.9.Title),ListItem(6).Label)
| StringCompare(Window(Home).Property(LatestMovie.10.Title),ListItem(6).Label)]] | [[Container.Content(tvshows)
| Container.Content(seasons)] + [StringCompare(Window(Home).Property(LatestEpisode.1.ShowTitle),ListItem(6).TvShowTitle)
| StringCompare(Window(Home).Property(LatestEpisode.2.ShowTitle),ListItem(6).TvShowTitle) | StringCompare(Window(Home).Property(LatestEpisode.3.ShowTitle),ListItem(6).TvShowTitle)
| StringCompare(Window(Home).Property(LatestEpisode.4.ShowTitle),ListItem(6).TvShowTitle) | StringCompare(Window(Home).Property(LatestEpisode.5.ShowTitle),ListItem(6).TvShowTitle)
| StringCompare(Window(Home).Property(LatestEpisode.6.ShowTitle),ListItem(6).TvShowTitle) | StringCompare(Window(Home).Property(LatestEpisode.7.ShowTitle),ListItem(6).TvShowTitle)
| StringCompare(Window(Home).Property(LatestEpisode.8.ShowTitle),ListItem(6).TvShowTitle) | StringCompare(Window(Home).Property(LatestEpisode.9.ShowTitle),ListItem(6).TvShowTitle)
| StringCompare(Window(Home).Property(LatestEpisode.10.ShowTitle),ListItem(6).TvShowTitle)]] | [Container.Content(episodes)
+ [StringCompare(Window(Home).Property(LatestEpisode.1.EpisodeTitle),ListItem(6).Title) | StringCompare(Window(Home).Property(LatestEpisode.2.EpisodeTitle),ListItem(6).Title)
| StringCompare(Window(Home).Property(LatestEpisode.3.EpisodeTitle),ListItem(6).Title) | StringCompare(Window(Home).Property(LatestEpisode.4.EpisodeTitle),ListItem(6).Title)
| StringCompare(Window(Home).Property(LatestEpisode.5.EpisodeTitle),ListItem(6).Title) | StringCompare(Window(Home).Property(LatestEpisode.6.EpisodeTitle),ListItem(6).Title)
| StringCompare(Window(Home).Property(LatestEpisode.7.EpisodeTitle),ListItem(6).Title) | StringCompare(Window(Home).Property(LatestEpisode.8.EpisodeTitle),ListItem(6).Title)
| StringCompare(Window(Home).Property(LatestEpisode.9.EpisodeTitle),ListItem(6).Title) | StringCompare(Window(Home).Property(LatestEpisode.10.EpisodeTitle),ListItem(6).Title)]]]]</visible>
		<visible>[!Container.ListItem(6).IsResumable + Skin.HasSetting(InProgressFlag)] | [Container.ListItem(6).IsResumable + !Skin.HasSetting(InProgressFlag)] | !Skin.HasSetting(InProgressFlag)</visible>
	</include>
	<include name="OverlayVisibility7">
		<texture>$INFO[ListItem(7).Overlay,thumbs/]</texture>
		<visible>[Skin.HasSetting(watchedoverlay) + SubString(ListItem(7).Overlay,OverlayWatched.png)] | [Skin.HasSetting(newstatus)
+ SubString(ListItem(7).Overlay,OverlayUnWatched.png) + [[Container.Content(movies) + [StringCompare(Window(Home).Property(LatestMovie.1.Title),ListItem(7).Label)
| StringCompare(Window(Home).Property(LatestMovie.2.Title),ListItem(7).Label) | StringCompare(Window(Home).Property(LatestMovie.3.Title),ListItem(7).Label)
| StringCompare(Window(Home).Property(LatestMovie.4.Title),ListItem(7).Label) | StringCompare(Window(Home).Property(LatestMovie.5.Title),ListItem(7).Label)
| StringCompare(Window(Home).Property(LatestMovie.6.Title),ListItem(7).Label) | StringCompare(Window(Home).Property(LatestMovie.7.Title),ListItem(7).Label)
| StringCompare(Window(Home).Property(LatestMovie.8.Title),ListItem(7).Label) | StringCompare(Window(Home).Property(LatestMovie.9.Title),ListItem(7).Label)
| StringCompare(Window(Home).Property(LatestMovie.10.Title),ListItem(7).Label)]] | [[Container.Content(tvshows)
| Container.Content(seasons)] + [StringCompare(Window(Home).Property(LatestEpisode.1.ShowTitle),ListItem(7).TvShowTitle)
| StringCompare(Window(Home).Property(LatestEpisode.2.ShowTitle),ListItem(7).TvShowTitle) | StringCompare(Window(Home).Property(LatestEpisode.3.ShowTitle),ListItem(7).TvShowTitle)
| StringCompare(Window(Home).Property(LatestEpisode.4.ShowTitle),ListItem(7).TvShowTitle) | StringCompare(Window(Home).Property(LatestEpisode.5.ShowTitle),ListItem(7).TvShowTitle)
| StringCompare(Window(Home).Property(LatestEpisode.6.ShowTitle),ListItem(7).TvShowTitle) | StringCompare(Window(Home).Property(LatestEpisode.7.ShowTitle),ListItem(7).TvShowTitle)
| StringCompare(Window(Home).Property(LatestEpisode.8.ShowTitle),ListItem(7).TvShowTitle) | StringCompare(Window(Home).Property(LatestEpisode.9.ShowTitle),ListItem(7).TvShowTitle)
| StringCompare(Window(Home).Property(LatestEpisode.10.ShowTitle),ListItem(7).TvShowTitle)]] | [Container.Content(episodes)
+ [StringCompare(Window(Home).Property(LatestEpisode.1.EpisodeTitle),ListItem(7).Title) | StringCompare(Window(Home).Property(LatestEpisode.2.EpisodeTitle),ListItem(7).Title)
| StringCompare(Window(Home).Property(LatestEpisode.3.EpisodeTitle),ListItem(7).Title) | StringCompare(Window(Home).Property(LatestEpisode.4.EpisodeTitle),ListItem(7).Title)
| StringCompare(Window(Home).Property(LatestEpisode.5.EpisodeTitle),ListItem(7).Title) | StringCompare(Window(Home).Property(LatestEpisode.6.EpisodeTitle),ListItem(7).Title)
| StringCompare(Window(Home).Property(LatestEpisode.7.EpisodeTitle),ListItem(7).Title) | StringCompare(Window(Home).Property(LatestEpisode.8.EpisodeTitle),ListItem(7).Title)
| StringCompare(Window(Home).Property(LatestEpisode.9.EpisodeTitle),ListItem(7).Title) | StringCompare(Window(Home).Property(LatestEpisode.10.EpisodeTitle),ListItem(7).Title)]]]]</visible>
		<visible>[!Container.ListItem(7).IsResumable + Skin.HasSetting(InProgressFlag)] | [Container.ListItem(7).IsResumable + !Skin.HasSetting(InProgressFlag)] | !Skin.HasSetting(InProgressFlag)</visible>
	</include>
	<include name="OverlayVisibility8">
		<texture>$INFO[ListItem(8).Overlay,thumbs/]</texture>
		<visible>[Skin.HasSetting(watchedoverlay) + SubString(ListItem(8).Overlay,OverlayWatched.png)] | [Skin.HasSetting(newstatus)
+ SubString(ListItem(8).Overlay,OverlayUnWatched.png) + [[Container.Content(movies) + [StringCompare(Window(Home).Property(LatestMovie.1.Title),ListItem(8).Label)
| StringCompare(Window(Home).Property(LatestMovie.2.Title),ListItem(8).Label) | StringCompare(Window(Home).Property(LatestMovie.3.Title),ListItem(8).Label)
| StringCompare(Window(Home).Property(LatestMovie.4.Title),ListItem(8).Label) | StringCompare(Window(Home).Property(LatestMovie.5.Title),ListItem(8).Label)
| StringCompare(Window(Home).Property(LatestMovie.6.Title),ListItem(8).Label) | StringCompare(Window(Home).Property(LatestMovie.7.Title),ListItem(8).Label)
| StringCompare(Window(Home).Property(LatestMovie.8.Title),ListItem(8).Label) | StringCompare(Window(Home).Property(LatestMovie.9.Title),ListItem(8).Label)
| StringCompare(Window(Home).Property(LatestMovie.10.Title),ListItem(8).Label)]] | [[Container.Content(tvshows)
| Container.Content(seasons)] + [StringCompare(Window(Home).Property(LatestEpisode.1.ShowTitle),ListItem(8).TvShowTitle)
| StringCompare(Window(Home).Property(LatestEpisode.2.ShowTitle),ListItem(8).TvShowTitle) | StringCompare(Window(Home).Property(LatestEpisode.3.ShowTitle),ListItem(8).TvShowTitle)
| StringCompare(Window(Home).Property(LatestEpisode.4.ShowTitle),ListItem(8).TvShowTitle) | StringCompare(Window(Home).Property(LatestEpisode.5.ShowTitle),ListItem(8).TvShowTitle)
| StringCompare(Window(Home).Property(LatestEpisode.6.ShowTitle),ListItem(8).TvShowTitle) | StringCompare(Window(Home).Property(LatestEpisode.7.ShowTitle),ListItem(8).TvShowTitle)
| StringCompare(Window(Home).Property(LatestEpisode.8.ShowTitle),ListItem(8).TvShowTitle) | StringCompare(Window(Home).Property(LatestEpisode.9.ShowTitle),ListItem(8).TvShowTitle)
| StringCompare(Window(Home).Property(LatestEpisode.10.ShowTitle),ListItem(8).TvShowTitle)]] | [Container.Content(episodes)
+ [StringCompare(Window(Home).Property(LatestEpisode.1.EpisodeTitle),ListItem(8).Title) | StringCompare(Window(Home).Property(LatestEpisode.2.EpisodeTitle),ListItem(8).Title)
| StringCompare(Window(Home).Property(LatestEpisode.3.EpisodeTitle),ListItem(8).Title) | StringCompare(Window(Home).Property(LatestEpisode.4.EpisodeTitle),ListItem(8).Title)
| StringCompare(Window(Home).Property(LatestEpisode.5.EpisodeTitle),ListItem(8).Title) | StringCompare(Window(Home).Property(LatestEpisode.6.EpisodeTitle),ListItem(8).Title)
| StringCompare(Window(Home).Property(LatestEpisode.7.EpisodeTitle),ListItem(8).Title) | StringCompare(Window(Home).Property(LatestEpisode.8.EpisodeTitle),ListItem(8).Title)
| StringCompare(Window(Home).Property(LatestEpisode.9.EpisodeTitle),ListItem(8).Title) | StringCompare(Window(Home).Property(LatestEpisode.10.EpisodeTitle),ListItem(8).Title)]]]]</visible>
		<visible>[!Container.ListItem(8).IsResumable + Skin.HasSetting(InProgressFlag)] | [Container.ListItem(8).IsResumable + !Skin.HasSetting(InProgressFlag)] | !Skin.HasSetting(InProgressFlag)</visible>
	</include>
	<include name="OverlayVisibility9">
		<texture>$INFO[ListItem(9).Overlay,thumbs/]</texture>
		<visible>[Skin.HasSetting(watchedoverlay) + SubString(ListItem(9).Overlay,OverlayWatched.png)] | [Skin.HasSetting(newstatus)
+ SubString(ListItem(9).Overlay,OverlayUnWatched.png) + [[Container.Content(movies) + [StringCompare(Window(Home).Property(LatestMovie.1.Title),ListItem(9).Label)
| StringCompare(Window(Home).Property(LatestMovie.2.Title),ListItem(9).Label) | StringCompare(Window(Home).Property(LatestMovie.3.Title),ListItem(9).Label)
| StringCompare(Window(Home).Property(LatestMovie.4.Title),ListItem(9).Label) | StringCompare(Window(Home).Property(LatestMovie.5.Title),ListItem(9).Label)
| StringCompare(Window(Home).Property(LatestMovie.6.Title),ListItem(9).Label) | StringCompare(Window(Home).Property(LatestMovie.7.Title),ListItem(9).Label)
| StringCompare(Window(Home).Property(LatestMovie.8.Title),ListItem(9).Label) | StringCompare(Window(Home).Property(LatestMovie.9.Title),ListItem(9).Label)
| StringCompare(Window(Home).Property(LatestMovie.10.Title),ListItem(9).Label)]] | [[Container.Content(tvshows)
| Container.Content(seasons)] + [StringCompare(Window(Home).Property(LatestEpisode.1.ShowTitle),ListItem(9).TvShowTitle)
| StringCompare(Window(Home).Property(LatestEpisode.2.ShowTitle),ListItem(9).TvShowTitle) | StringCompare(Window(Home).Property(LatestEpisode.3.ShowTitle),ListItem(9).TvShowTitle)
| StringCompare(Window(Home).Property(LatestEpisode.4.ShowTitle),ListItem(9).TvShowTitle) | StringCompare(Window(Home).Property(LatestEpisode.5.ShowTitle),ListItem(9).TvShowTitle)
| StringCompare(Window(Home).Property(LatestEpisode.6.ShowTitle),ListItem(9).TvShowTitle) | StringCompare(Window(Home).Property(LatestEpisode.7.ShowTitle),ListItem(9).TvShowTitle)
| StringCompare(Window(Home).Property(LatestEpisode.8.ShowTitle),ListItem(9).TvShowTitle) | StringCompare(Window(Home).Property(LatestEpisode.9.ShowTitle),ListItem(9).TvShowTitle)
| StringCompare(Window(Home).Property(LatestEpisode.10.ShowTitle),ListItem(9).TvShowTitle)]] | [Container.Content(episodes)
+ [StringCompare(Window(Home).Property(LatestEpisode.1.EpisodeTitle),ListItem(9).Title) | StringCompare(Window(Home).Property(LatestEpisode.2.EpisodeTitle),ListItem(9).Title)
| StringCompare(Window(Home).Property(LatestEpisode.3.EpisodeTitle),ListItem(9).Title) | StringCompare(Window(Home).Property(LatestEpisode.4.EpisodeTitle),ListItem(9).Title)
| StringCompare(Window(Home).Property(LatestEpisode.5.EpisodeTitle),ListItem(9).Title) | StringCompare(Window(Home).Property(LatestEpisode.6.EpisodeTitle),ListItem(9).Title)
| StringCompare(Window(Home).Property(LatestEpisode.7.EpisodeTitle),ListItem(9).Title) | StringCompare(Window(Home).Property(LatestEpisode.8.EpisodeTitle),ListItem(9).Title)
| StringCompare(Window(Home).Property(LatestEpisode.9.EpisodeTitle),ListItem(9).Title) | StringCompare(Window(Home).Property(LatestEpisode.10.EpisodeTitle),ListItem(9).Title)]]]]</visible>
		<visible>[!Container.ListItem(9).IsResumable + Skin.HasSetting(InProgressFlag)] | [Container.ListItem(9).IsResumable + !Skin.HasSetting(InProgressFlag)] | !Skin.HasSetting(InProgressFlag)</visible>
	</include>
	<include name="ReloadWindowOnClick">
		<onclick condition="Window.IsActive(addonbrowser)">SetProperty(activewindow,addons,home)</onclick>
		<onclick condition="Window.IsActive(musicfiles)">SetProperty(activewindow,musicfiles,home)</onclick>
		<onclick condition="Window.IsActive(musiclibrary)">SetProperty(activewindow,musiclibrary,home)</onclick>
		<onclick condition="Window.IsActive(musicplaylist)">SetProperty(activewindow,musicplaylist,home)</onclick>
		<onclick condition="Window.IsActive(videoplaylist)">SetProperty(activewindow,videoplaylist,home)</onclick>
		<onclick condition="Window.IsActive(videos)">SetProperty(activewindow,videos,home)</onclick>
		<onclick condition="Window.IsActive(programs)">SetProperty(activewindow,programs,home)</onclick>
		<onclick>SetProperty(containerpath,$ESCINFO[Container.FolderPath],home)</onclick>
		<onclick>Dialog.Close(1126)</onclick>
		<onclick>ReplaceWindow(1141)</onclick>
	</include>
	<include name="ShowcaseInfoPaneMoviesNew">
		<control type="group" id="7550">
			<top>-33</top>
			<width>1920</width>
			<height>750</height>
			<visible>Skin.HasSetting(infopane_panel2) + !Skin.HasSetting(infopanel_textonly)</visible>
			<visible>Window.IsActive(1112) | Control.IsVisible(197) | Control.HasFocus(7000) | Stringcompare(Control.GetLabel(4421),infopanelon)</visible>
			<visible>Control.IsVisible(9900)</visible>
			<visible>Control.IsVisible(508) | Control.IsVisible(503) | Control.IsVisible(509) | Control.IsVisible(501) | [Control.IsVisible(57) + Skin.HasSetting(smallshiftview)]</visible>
			<animation effect="slide" start="0,-1200" end="0,0" time="600" tween="cubic">VisibleChange</animation>
			<animation effect="slide" end="0,45" time="320" easing="inout" tween="cubic" condition="Control.IsVisible(501) | Control.IsVisible(503) | Control.IsVisible(508)">Conditional</animation>
			<animation effect="fade" time="200">WindowOpen</animation>
			<animation effect="slide" end="0,-1000" time="240" easing="in" tween="cubic">WindowClose</animation>
			<animation effect="slide" end="0,00" time="400" easing="in" tween="cubic" condition="!Skin.HasSetting(no_infopane_panel) + Control.IsVisible(503)">Conditional</animation>  <!-- TV lv3 -->
			<animation effect="slide" end="0,45" time="400" easing="in" tween="cubic" condition="[Control.IsVisible(57) + Skin.HasSetting(smallshiftview)]">Conditional</animation>
			<animation effect="slide" end="0,00" time="400" easing="in" tween="cubic" condition="!Skin.HasSetting(no_infopane_panel) + Control.IsVisible(503) + [Skin.HasSetting(landscapelogo) | Skin.HasSetting(landscapeonelogo)] + [Container.Content(tvshows) | Container.Content(movies)]">Conditional</animation>
			<animation effect="zoom" end="100" center="960,500" time="320" tween="cubic" easing="inout" condition="Skin.HasSetting(no_infopane_panel)">Conditional</animation>
			<control type="group">
				<visible>!Skin.HasSetting(no_infopane_panel)</visible>
				<include>Animation_VisibleChange400</include>
				<control type="image">  <!-- panel BG Glow -->
					<top>-38</top>
					<left>112</left>
					<width>1695</width>
					<height>1050</height>
					<texture>wall/wall_bg_new_glow.png</texture>
					<visible>!Skin.HasSetting(DisableGlowbar)</visible>
					<colordiffuse>$VAR[ColorDiffuseVar]</colordiffuse>
					<include>PanelGlowFade</include>
				</control>
				<control type="image">	<!-- panel BG  -->
					<top>-40</top>
					<left>112</left>
					<width>1695</width>
					<height>1050</height>
					<texture>wall/wall_bg_new.png</texture>
					<colordiffuse>$VAR[DialogColorVar]</colordiffuse>
				</control>
			</control>
			<control type="image">   <!-- grid left top panel -->
				<top>-40</top>
				<left>112</left>
				<width>1695</width>
				<height>1050</height>
				<texture>$VAR[InfoPanelLayoutVar2]</texture>
				<fadetime>400</fadetime>
			</control>
			<control type="group">     <!-- watched icons -->
				<visible>!Skin.HasSetting(no_infopane_panel) + Skin.HasSetting(enable_Watchedicontop)</visible>
				<include>Animation_VisibleChange400</include>
				<control type="image">  <!--  gesehen icon center -->
					<left>1280</left>
					<top>79</top>
					<width>40</width>
					<height>40</height>
					<aspectratio align="center">keep</aspectratio>
					<texture>$VAR[WatchedIconVar]</texture>
					<colordiffuse>$VAR[ColorDiffuseVar]</colordiffuse>
				</control>
				<control type="label">    <!-- top 250 number -->
					<left>1275</left>
					<top>70</top>
					<width>50</width>
					<height>50</height>
					<label>$INFO[ListItem.Top250]</label>
					<textcolor>white6</textcolor>
					<align>center</align>
					<font>Font_Bold15_Caps</font>
					<visible>IntegerGreaterThan(ListItem.Top250,3)</visible>
				</control>
			</control>
			<control type="image">   <!-- language flag -->
				<left>590</left>
				<top>80</top>
				<width>32</width>
				<height>32</height>
				<texture background="true">$VAR[CountryFlagVar]</texture>
				<visible>!Skin.HasSetting(no_infopane_panel)</visible>
				<include>Animation_VisibleChange400</include>
			</control>
			<control type="image">    <!-- no extra fanart center -->
				<left>580</left>
				<top>121</top>
				<width>744</width>
				<height>423</height>
				<aspectratio align="center">scale</aspectratio>
				<texture background="true" fallback="special://skin/backgrounds/fallback_movies.jpg">$VAR[FanartTextureVar]</texture>
				<fadetime>FanartCrossfadeTime</fadetime>
				<bordertexture border="7">thumbs/thumbshadow.png</bordertexture>
				<bordersize>7</bordersize>
				<animation effect="zoom" end="110" center="1800,270" time="320" tween="cubic" easing="inout" condition="Skin.HasSetting(no_infopane_panel) + Control.IsVisible(503)">Conditional</animation>
				<visible>StringCompare(Control.GetLabel(4420),fanart) + [!Skin.HasSetting(infopanel_extrafanart) | SubString(ListItem.Path,videodb://movies/sets)]</visible>
				<animation type="VisibleChange">
					<effect type="fade" end="100" delay="320" time="160"/>
				</animation>
			</control>
			<!-- BEGIN Extra Fanart by ShadowTek - Replaces above single image if switch on(MAD)-->
            <control type="multiimage">   <!-- fanart center -->
                <left>588</left>
                <top>127</top>
                <width>730</width>
                <height>411</height>
                <aspectratio align="center">scale</aspectratio>
                <fadetime>FanartCrossfadeTime</fadetime>
                <include condition="Window.IsActive(pictures)">Aspectratio_Keep</include>
                <include condition="!Window.IsActive(pictures)">Aspectratio_Scale</include>
                <timeperimage>3000</timeperimage>
                <imagepath background="true">$VAR[VideoExtraFanartVar]</imagepath>
                <visible>StringCompare(Control.GetLabel(4420),fanart) + Skin.HasSetting(infopanel_extrafanart)</visible>
                <include>Animation_VisibleChange200</include>
             </control>
			<!-- END Extra Fanart by ShadowTek -->
			<control type="image">      <!-- ?????? -->
				<left>588</left>
				<top>127</top>
				<width>730</width>
				<height>411</height>
				<aspectratio align="center">scale</aspectratio>
				<texture>$VAR[SeasonLandscape]</texture>
				<fadetime>FanartCrossfadeTime</fadetime>
				<bordertexture border="7">thumbs/thumbshadow.png</bordertexture>
				<bordersize>7</bordersize>
				<animation effect="zoom" end="108" center="1800,270" time="320" tween="cubic" easing="inout" condition="Skin.HasSetting(no_infopane_panel) + Control.IsVisible(503)">Conditional</animation>
				<visible>Container.Content(seasons) + Skin.HasSetting(TVLandscapeThumb)</visible>
				<animation type="VisibleChange">
					<effect type="fade" end="100" delay="340" time="160"/>
				</animation>
			</control>
			<!-- Left side -->
			<control type="group"> 	<!-- Left Panel -->
				<left>230</left>
				<top>-2</top>
				<visible>StringCompare(Control.GetLabel(4420),fanart) | StringCompare(Control.GetLabel(4420),fourthumbs) | StringCompare(Control.GetLabel(4420),poster) | StringCompare(Control.GetLabel(4420),extrathumbs)</visible>
				<animation type="VisibleChange">
					<effect type="fade" end="150" delay="320" time="160"/>
				</animation>
				<!-- left side rotation -->
				<animation effect="zoom" end="130" time="0" tween="cubic" easing="inout" condition="true">Conditional</animation>
				<animation effect="rotatey" center="0" start="45" end="-46" time="0" condition="true">Conditional</animation>
				<camera x="300" y="370"/>
				<control type="grouplist">  <!-- TV left side left panel -->
					<orientation>vertical</orientation>
					<top>-5</top>
					<control type="label">
						<width>250</width>
						<height>40</height>
						<label>$VAR[FanartPanelDetail1Var]</label>
						<textcolor>$VAR[SubTitleColorVar]</textcolor>
					</control>
					<control type="label">
						<width>300</width>
						<height>25</height>
						<label fallback="31006">$VAR[FanartPanelValue1Var]</label>
						<scroll>true</scroll>
					</control>
					<control type="label">
						<width>250</width>
						<height>60</height>
						<label>$VAR[FanartPanelDetail3Var]</label>
						<textcolor>$VAR[SubTitleColorVar]</textcolor>
					</control>
					<control type="label">
						<width>300</width>
						<height>10</height>
						<label fallback="31006">$VAR[FanartPanelValue3Var]</label>
						<scroll>true</scroll>
					</control>
					<control type="label">
						<width>250</width>
						<height>60</height>
						<label>$VAR[FanartPanelDetail5Var]</label>
						<textcolor>$VAR[SubTitleColorVar]</textcolor>
					</control>
					<control type="label">
						<width>300</width>
						<height>10</height>
						<label fallback="31006">$VAR[FanartPanelValue5Var]</label>
						<scroll>true</scroll>
					</control>
				</control>    <!-- TV left side left panel end -->
				<control type="grouplist">   <!-- TV right side left panel -->
					<orientation>vertical</orientation>
					<top>1</top>
					<left>325</left>
					<control type="label">
						<width>420</width>
						<height>25</height>
						<label>$VAR[FanartPanelDetail2Var]</label>
						<textcolor>$VAR[SubTitleColorVar]</textcolor>
					</control>
					<control type="label">
						<width>315</width>
						<height>47</height>
						<label fallback="31006">$VAR[FanartPanelValue2Var]</label>
						<scroll>true</scroll>
					</control>
					<control type="label">
						<width>420</width>
						<height>28</height>
						<label>$VAR[FanartPanelDetail4Var]</label>
						<textcolor>$VAR[SubTitleColorVar]</textcolor>
					</control>
					<control type="fadelabel">        <!-- ?????? -->
						<width>315</width>
						<height>47</height>
						<label>$LOCALIZE[13409] #$INFO[ListItem.Top250]</label>
						<label>$INFO[ListItem.RatingAndVotes]</label>
						<scrollspeed>200</scrollspeed>
						<pauseatend>3000</pauseatend>
						<visible>!IsEmpty(ListItem.Top250)</visible>
					</control>
					<control type="label">
						<width>315</width>
						<height>47</height>
						<label fallback="31006">$VAR[FanartPanelValue4Var]</label>
						<scroll>true</scroll>
						<visible>IsEmpty(ListItem.Top250)</visible>
					</control>
					<control type="label">
						<width>420</width>
						<height>28</height>
						<label>$VAR[FanartPanelDetail6Var]</label>
						<textcolor>$VAR[SubTitleColorVar]</textcolor>
					</control>
					<control type="label">
						<width>315</width>
						<height>47</height>
						<label fallback="31006">$VAR[FanartPanelValue6Var]</label>
						<scroll>true</scroll>
					</control>
				</control>
				<control type="textbox">  <!-- content bottom lvl2-->
					<top>228</top>
					<width>640</width>
					<height>205</height>
					<label>$VAR[FanartPanelPlotVar]</label>
					<textcolor>white6</textcolor>
					<autoscroll delay="8000" time="AutoScrollTime" repeat="8000">Skin.HasSetting(AutoScroll)</autoscroll>
					<visible>StringCompare(Control.GetLabel(4420),fanart)</visible>
				</control>
				<control type="textbox">   <!-- content bottom lvl1-->
					<top>228</top>
					<width>640</width>
					<height>205</height>
					<label>$VAR[FanartPanelPlotVar]</label>
					<textcolor>white6</textcolor>
					<autoscroll delay="8000" time="AutoScrollTime" repeat="8000">Skin.HasSetting(AutoScroll)</autoscroll>
					<visible>!StringCompare(Control.GetLabel(4420),fanart) + !Skin.HasSetting(NoFlow)</visible>
				</control>
				<control type="textbox">    <!-- ?????? -->
					<top>228</top>
					<width>640</width>
					<height>205</height>
					<label>$VAR[FanartPanelPlotVar]</label>
					<textcolor>white6</textcolor>
					<autoscroll delay="8000" time="AutoScrollTime" repeat="8000">Skin.HasSetting(AutoScroll)</autoscroll>
					<visible>!StringCompare(Control.GetLabel(4420),fanart) + Skin.HasSetting(NoFlow)</visible>
				</control>
			</control>
				<control type="group">  <!-- PANEL posters tv and movies !!! -->
				<animation type="VisibleChange">
					<effect type="fade" end="108" delay="320" time="160"/>
				</animation>
				<control type="image">   <!--  Posters fanart center -->
					<left>580</left>
					<top>121</top>
					<width>744</width>
					<height>423</height>
					<aspectratio align="center">scale</aspectratio>
					<texture background="true" fallback="special://skin/backgrounds/fallback_movies.jpg">$VAR[FanartTextureVar]</texture>
					<fadetime>FanartCrossfadeTime</fadetime>
					<bordertexture border="7">thumbs/thumbshadow.png</bordertexture>
					<bordersize>7</bordersize>
					<animation effect="zoom" end="100" center="1800,270" time="320" tween="cubic" easing="inout" condition="Skin.HasSetting(no_infopane_panel) + Control.IsVisible(503)">Conditional</animation>
					<visible>StringCompare(Control.GetLabel(4420),poster) | StringCompare(Control.GetLabel(4420),extrathumbs)</visible>
				</control>
				<!-- BEGIN Extra Fanart by ShadowTek -->
				<control type="multiimage">
					<left>580</left>
					<top>121</top>
					<width>744</width>
					<height>423</height>
					<aspectratio>stretch</aspectratio>
					<fadetime>FanartCrossfadeTime</fadetime>
					<include condition="Window.IsActive(pictures)">Aspectratio_Keep</include>
					<include condition="!Window.IsActive(pictures)">Aspectratio_Scale</include>
					<timeperimage>3000</timeperimage>
					<imagepath background="true">$VAR[VideoExtraFanartVar]</imagepath>
					<visible>StringCompare(Control.GetLabel(4420),poster) | StringCompare(Control.GetLabel(4420),extrathumbs)</visible>
					<include>Animation_VisibleChange200</include>
				</control>
				<!-- END Extra Fanart by ShadowTek -->
				<control type="image">   <!--  Posters Poster right -->
					<left>1591</left>
					<top>78</top>
					<width>264</width>
					<height>400</height>
					<texture background="true" diffuse="thumbs/movieposter_mask.png">$VAR[ListPosterVar]</texture>
					<fadetime>200</fadetime>
					<bordertexture border="-50">thumbs/poster_shadow.png</bordertexture>
 					<bordersize>0</bordersize>
					<animation effect="rotatey" center="auto" start="-45" end="45" time="0" condition="true">Conditional</animation>
					<camera x="1250" y="370"/>
					<animation effect="zoom" end="112" time="0" delay="0" reversible="false" condition="true">Conditional</animation>
					<visible>![StringCompare(Control.GetLabel(4420),fourthumbs) | StringCompare(Control.GetLabel(4420),fanart) | StringCompare(Control.GetLabel(4420),extrathumbs)]</visible>
				</control>
				<control type="image">   <!--  Posters Poster glass right -->
					<left>1591</left>
					<top>78</top>
					<width>264</width>
					<height>400</height>
					<texture diffuse="thumbs/movieposter_mask.png">thumbs/thumb_glass.png</texture>
					<animation effect="rotatey" center="auto" start="-45" end="45" time="0" condition="true">Conditional</animation>
					<camera x="1250" y="380"/>
					<animation effect="zoom" end="112" time="0" delay="0" reversible="false" condition="true">Conditional</animation>
					<visible>![StringCompare(Control.GetLabel(4420),fourthumbs) | StringCompare(Control.GetLabel(4420),fanart) | StringCompare(Control.GetLabel(4420),extrathumbs)]</visible>
				</control>
			</control>
			<!-- Right side -->
			<control type="group">    <!-- MOVIES -->
				<visible>Container.Content(movies)</visible>
				<control type="group">
					<left>580</left>
					<visible>StringCompare(Control.GetLabel(4420),fourthumbs)</visible>
					<animation type="VisibleChange">
						<effect type="fade" end="100" delay="320" time="160"/>
					</animation>
					<control type="image">
						<left>-10</left>
						<top>120</top>
						<width>391</width>
						<height>220</height>
						<aspectratio>keep</aspectratio>
						<texture background="true">$VAR[ExtraThumb3Var]</texture>
						<fadetime>400</fadetime>
						<bordertexture border="7">thumbs/thumbshadow.png</bordertexture>
						<bordersize>7</bordersize>
					</control>
					<control type="image">
						<left>370</left>
						<top>120</top>
						<width>391</width>
						<height>220</height>
						<texture background="true">$VAR[ExtraThumb4Var]</texture>
						<fadetime>400</fadetime>
						<bordertexture border="7">thumbs/thumbshadow.png</bordertexture>
						<bordersize>7</bordersize>
					</control>
					<control type="image">
						<left>1</left>
						<top>358</top>
						<width>750</width>
						<height>152</height>
						<texture background="true" diffuse="thumbs/banner_mask.png">$INFO[ListItem.Art(banner)]</texture>
						<bordertexture border="12">thumbs/banner_shadow_b.png</bordertexture>
						<bordersize>12</bordersize>
						<visible>!StringCompare(Control.GetLabel(4420),fanart)</visible>
					</control>
				</control>
				<control type="group">
					<left>1650</left>
					<visible>SubString(Control.GetLabel(4420),thumbs)</visible>
					<animation type="VisibleChange">
						<effect type="fade" end="100" delay="320" time="160"/>
					</animation>
					<animation effect="rotatey" center="auto" start="-45" end="43" time="0" condition="true">Conditional</animation>
					<camera x="1290" y="380"/>
					<animation effect="zoom" end="115" time="0" delay="0" reversible="false" condition="true">Conditional</animation>
					<control type="image">     <!-- 4thumbs top right -->
						<left>-50</left>
						<top>56</top>
						<width>391</width>
						<height>200</height>
						<aspectratio>keep</aspectratio>
						<bordertexture border="7">thumbs/thumbshadow.png</bordertexture>
						<bordersize>7</bordersize>
						<texture background="true">$VAR[ExtraThumb1Var]</texture>
						<fadetime>400</fadetime>
					</control>

					<!-- MAD - multi image control for thumbs top right WIP-->      <!-- 4thumbs top right -->
					<!--control type="multiimage">
						<left>-50</left>
						<top>56</top>
						<width>391</width>
						<height>200</height>
						<aspectratio>keep</aspectratio>
						<bordertexture border="7">thumbs/thumbshadow.png</bordertexture>
						<bordersize>7</bordersize>
						<timeperimage>20000</timeperimage>
						<imagepath background="true">$VAR[VideoExtraThumbVar]</imagepath>
						<fadetime>400</fadetime>
					</control-->

					<control type="image">    <!-- 4thumbs bottom right -->
						<left>-50</left>
						<top>265</top>
						<width>391</width>
						<height>200</height>
						<aspectratio>keep</aspectratio>
						<texture background="true">$VAR[ExtraThumb2Var]</texture>
						<fadetime>400</fadetime>
						<bordertexture border="7">thumbs/thumbshadow.png</bordertexture>
						<bordersize>7</bordersize>
					</control>
				</control>
				<control type="group">      <!-- movie fanart bottom right -->
					<left>1650</left>
					<visible>SubString(Control.GetLabel(4420),fanart)</visible>
					<animation type="VisibleChange">
						<effect type="fade" end="100" delay="320" time="160"/>
					</animation>
					<animation effect="rotatey" center="auto" start="-45" end="45" time="0" condition="true">Conditional</animation>
					<camera x="1290" y="410"/>
					<animation effect="zoom" end="110" time="0" delay="0" reversible="false" condition="true">Conditional</animation>
					<control type="image">     <!-- This was missing completely Schimi - copied 4thumbs top right -->
						<left>-50</left>
						<top>56</top>
						<width>391</width>
						<height>200</height>
						<aspectratio>keep</aspectratio>
						<bordertexture border="7">thumbs/thumbshadow.png</bordertexture>
						<bordersize>7</bordersize>
						<texture background="true">$VAR[ExtraThumb1Var]</texture>
						<fadetime>400</fadetime>
						<visible>SubString(ListItem.Path,videodb://movies/sets)</visible>
					</control>
					<control type="image" id="9001">
						<left>-50</left>
						<top>300</top>
						<width>391</width>
						<height>200</height>
						<aspectratio>keep</aspectratio>
						<texture background="true">$VAR[ExtraThumb2Var]</texture>
						<fadetime>400</fadetime>
						<bordertexture border="7">thumbs/thumbshadow.png</bordertexture>
						<bordersize>7</bordersize>
					</control>
				</control>
			</control>
			<control type="group">    <!-- TV SHOW PANEL RIGHT SIDE -->
				<visible>Container.Content(tvshows) + StringCompare(Control.GetLabel(4420),fourthumbs) | StringCompare(Control.GetLabel(4420),fanart)</visible>
				<animation type="VisibleChange">
					<effect type="fade" end="100" delay="320" time="160"/>
				</animation>
				<control type="group">  <!--  tv season 4thumbs and fanart panel-->
					<left>1550</left>
					<animation effect="rotatey" center="auto" start="-45" end="80" time="0" condition="true">Conditional</animation>
					<camera x="200" y="408"/>
					<animation effect="zoom" end="115" time="0" delay="0" reversible="false" condition="true">Conditional</animation>
					<control type="image" id="9002">  <!--  tv season 4thumbs top right panel LVL1 -->
						<left>398</left>
						<top>90</top>
						<width>200</width>
						<height>173</height>
						<texture background="true">$INFO[ListItem.Art(fanart)]</texture>
						<fadetime>400</fadetime>
						<bordertexture border="7">thumbs/thumbshadow.png</bordertexture>
						<bordersize>7</bordersize>
						<visible>StringCompare(Control.GetLabel(4420),fourthumbs)</visible>
					</control>
					<control type="image" id="9003">  <!--  tv season 4thumbs bottom right lvl 1 -->
						<left>398</left>
						<top>272</top>
						<width>200</width>
						<height>173</height>
						<texture background="true">$INFO[ListItem.Art(landscape)]</texture>
						<fadetime>400</fadetime>
						<bordertexture border="7">thumbs/thumbshadow.png</bordertexture>
						<bordersize>7</bordersize>
						<visible>StringCompare(Control.GetLabel(4420),fourthumbs)</visible>
					</control>
					<control type="image" id="9004">  <!--  tv season Fanart bottom right lvl 1+2 -->
						<left>398</left>
						<top>288</top>
						<width>200</width>
						<height>173</height>
						<texture background="true">$VAR[InfoPanelCharacterArtVar2]</texture>
						<fadetime>400</fadetime>
						<bordertexture border="7">thumbs/thumbshadow.png</bordertexture>
						<bordersize>7</bordersize>
						<visible>StringCompare(Control.GetLabel(4420),fanart)</visible>
						<visible>!Container.Content(movies)</visible>
					</control>
					<control type="image">   <!-- tv season Fanart clearart top right panel LVL2+3-->
						<left>405</left>
						<top>109</top>
						<width>190</width>
						<height>160</height>
						<texture background="true">$INFO[ListItem.Art(tvshow.clearart)]</texture>
						<fadetime>400</fadetime>
						<visible>StringCompare(Control.GetLabel(4420),fanart)</visible>
					</control>
					<control type="image">   <!-- tv season Fanart clearart top right panel LVL1 -->
						<left>398</left>
						<top>102</top>
						<width>204</width>
						<height>174</height>
						<texture background="true">$INFO[ListItem.Art(clearart)]</texture>
						<fadetime>400</fadetime>
						<bordersize>7</bordersize>
						<visible>StringCompare(Control.GetLabel(4420),fanart)</visible>
					</control>
				</control>
				<control type="group">   <!-- TV 4thumbs Center panel -->
					<left>580</left>
					<animation effect="fade" start="100" end="0" time="880" condition="Player.HasVideo + StringCompare(Control.GetLabel(4420),fourthumbs)">Conditional</animation>
					<control type="image">  <!-- tv 4thumbs center clearart top right center -->
						<left>367</left>
						<top>122</top>
						<width>391</width>
						<height>220</height>
						<aspectratio aligny="center">keep</aspectratio>
						<texture background="true">$INFO[ListItem.Art(clearart)]</texture>
						<fadetime>400</fadetime>
						<bordersize>7</bordersize>
						<visible>!StringCompare(Control.GetLabel(4420),fanart)</visible>
					</control>
					<control type="image" id="9005">  <!-- tv 4thumbs center banner bottom -->
						<left>1</left>
						<top>358</top>
						<width>750</width>
						<height>152</height>
						<texture background="true" diffuse="thumbs/banner_mask.png">$INFO[ListItem.Art(banner)]</texture>
						<bordertexture border="12">thumbs/banner_shadow_b.png</bordertexture>
						<bordersize>12</bordersize>
						<visible>!StringCompare(Control.GetLabel(4420),fanart)</visible>
					</control>
					<control type="image">    <!-- tv 4thumbs center character or logo top left center -->
						<left>10</left>
						<top>122</top>
						<width>350</width>
						<height>220</height>
						<aspectratio aligny="center">keep</aspectratio>
						<texture background="true">$VAR[InfoPanelCharacterArtVar]</texture>
						<fadetime>400</fadetime>
						<bordersize>7</bordersize>
						<visible>!StringCompare(Control.GetLabel(4420),fanart)</visible>
					</control>
				</control>
			</control>
			<control type="group">   <!--  trailer video center -->
				<left>588</left>
				<top>127</top>
				<animation effect="slide" end="0,0" reversible="false" condition="StringCompare(Control.GetLabel(4420),extrathumbs)">Conditional</animation>
				<animation effect="zoom" center="auto" start="100" end="100" time="480" tween="back" reversible="false" condition="StringCompare(Control.GetLabel(4420),extrathumbs)">Conditional</animation>
				<visible>Player.HasVideo</visible>
				<animation effect="fade" end="100" time="0" delay="880">Visible</animation>
				<control type="image">
					<width>730</width>
					<height>411</height>
					<texture>common/black.png</texture>
				</control>
				<control type="videowindow" id="2">
					<width>730</width>
					<height>411</height>
				</control>
			</control>
		</control>
		<!-- BEGIN Next Aired -->
		<control type="group">
			<visible>[!Stringcompare(Control.GetLabel(4421),infopanelon) + !Control.IsVisible(750) + [Container.Content(tvshows) | Container.Content(seasons)]] + Skin.HasSetting(hidenextdayaired)</visible>
			<animation effect="slide" end="0,-145" time="320" easing="inout" tween="cubic" condition="Control.IsVisible(7550)">Conditional</animation>
			<animation effect="slide" end="0,-145" time="320" easing="inout" tween="cubic" condition="Control.HasFocus(61)">Conditional</animation>
			<animation effect="slide" end="0,-145" time="320" easing="inout" tween="cubic" condition="IsEmpty(Window(Home).Property(NextAired.NextDate))">Conditional</animation>
			<animation effect="slide" end="0,-145" time="240" easing="in" tween="cubic">WindowClose</animation>
			<animation effect="slide" end="0,40" time="320" easing="inout" tween="cubic" condition="Skin.HasSetting(FadedTopBar) | !Skin.HasSetting(ClassicTopBar)">Conditional</animation>
			<control type="image">
				<left>580</left>
				<top>-80</top>
				<width>750</width>
				<height>210</height>
				<aspectratio scalediffuse="false">stretch</aspectratio>
				<texture>home/overlaynextaired.png</texture>
				<colordiffuse>$VAR[ColorDiffuseVar]</colordiffuse>
			</control>
			<control type="label">
				<left>550</left>
				<top>5</top>
				<width>800</width>
				<height>20</height>
				<aligny>center</aligny>
				<align>center</align>
				<label>$INFO[Window(Home).Property(NextAired.NextTitle)]</label>
				<font>Font_Bold19</font>
				<shadowcolor>black</shadowcolor>
			</control>
			<control type="label">
				<left>550</left>
				<top>45</top>
				<width>800</width>
				<height>20</height>
				<aligny>center</aligny>
				<align>center</align>
				<label>$INFO[Window(Home).Property(NextAired.NextDay)]$INFO[Window(Home).Property(NextAired.NextSeasonNumber), - S]$INFO[Window(Home).Property(NextAired.NextEpisodeNumber),E]</label>
				<font>Font_Bold19</font>
				<shadowcolor>black</shadowcolor>
			</control>
		</control>
		<!-- END Next Aired -->
	</include>
	<include name="ShowcaseInfoPaneMovies">
		<control type="group" id="7550">
			<top>39</top>
			<width>1920</width>
			<height>750</height>
			<visible>!Skin.HasSetting(infopane_panel2) + !Skin.HasSetting(infopanel_textonly)</visible>
			<visible>Window.IsActive(1112) | Control.IsVisible(197) | Control.HasFocus(7000) | Stringcompare(Control.GetLabel(4421),infopanelon)</visible>
			<visible>Control.IsVisible(9900)</visible>
			<visible>Control.IsVisible(508) | Control.IsVisible(503) | Control.IsVisible(509) | Control.IsVisible(501) | [Control.IsVisible(57) + Skin.HasSetting(smallshiftview)]</visible>
			<animation effect="slide" start="0,-1200" end="0,0" time="600" tween="cubic">VisibleChange</animation>
			<animation effect="slide" end="0,45" time="320" easing="inout" tween="cubic" condition="Control.IsVisible(503) | Control.IsVisible(508)">Conditional</animation>
			<animation effect="fade" time="200">WindowOpen</animation>
			<animation effect="slide" end="0,-1000" time="240" easing="in" tween="cubic">WindowClose</animation>
			<animation effect="slide" end="0,35" time="400" easing="in" tween="cubic" condition="!Skin.HasSetting(no_infopane_panel) + Control.IsVisible(503)">Conditional</animation>
			<animation effect="slide" end="0,60" time="400" easing="in" tween="cubic" condition="[Control.IsVisible(57) + Skin.HasSetting(smallshiftview)]">Conditional</animation>
			<animation effect="slide" end="0,65" time="400" easing="in" tween="cubic" condition="!Skin.HasSetting(no_infopane_panel) + Control.IsVisible(503) + [Skin.HasSetting(landscapelogo) | Skin.HasSetting(landscapeonelogo)] + [Container.Content(tvshows) | Container.Content(movies)]">Conditional</animation>
			<animation effect="zoom" end="113" center="960,500" time="320" tween="cubic" easing="inout" condition="Skin.HasSetting(no_infopane_panel)">Conditional</animation>
			<control type="group">
				<visible>!Skin.HasSetting(no_infopane_panel)</visible>
				<include>Animation_VisibleChange400</include>
				<control type="image">
					<left>112</left>
					<width>1695</width>
					<height>1050</height>
					<texture>wall/wall_bg_glow.png</texture>
					<visible>!Skin.HasSetting(DisableGlowbar)</visible>
					<colordiffuse>$VAR[ColorDiffuseVar]</colordiffuse>
					<include>PanelGlowFade</include>
				</control>
				<control type="image">
					<left>112</left>
					<width>1695</width>
					<height>1050</height>
					<texture>wall/wall_bg.png</texture>
					<colordiffuse>$VAR[DialogColorVar]</colordiffuse>
				</control>
			</control>
			<control type="image">
				<left>112</left>
				<top>8</top>
				<width>1695</width>
				<height>750</height>
				<texture>$VAR[InfoPanelLayoutVar]</texture>
				<fadetime>400</fadetime>
			</control>
			<control type="image">
				<left>165</left>
				<top>100</top>
				<width>1600</width>
				<height>280</height>
				<aspectratio>keep</aspectratio>
				<texture background="true">$VAR[LogoVar]</texture>
				<fadetime>300</fadetime>
				<animation effect="fade" start="100" end="17" time="40" condition="true">Conditional</animation>
				<visible>![[Container.Content(tvshows) | Container.Content(movies) | Container.Content(artists)] + Control.IsVisible(503) + [Skin.HasSetting(landscapelogo) | Skin.HasSetting(landscapeonelogo)]]</visible>
				<visible>!Control.isVisible(8822) + !Skin.HasSetting(LogoBehindPlot)</visible>
				<animation type="Conditional" condition="Stringcompare(Control.GetLabel(4420),fanart) | Container.Content(seasons) | Container.Content(episodes)">
					<effect type="slide" end="-480,160" time="0"/>
					<effect type="zoom" start="100" end="83" time="0" tween="cubic" easing="inout" center="auto"/>
				</animation>
				<include>Animation_VisibleChange400</include>
			</control>
			<control type="group">
				<visible>!Skin.HasSetting(no_infopane_panel) + Skin.HasSetting(enable_Watchedicontop)</visible>
				<include>Animation_VisibleChange400</include>
				<control type="image">
					<left>1747</left>
					<top>15</top>
					<width>45</width>
					<height>45</height>
					<texture>$VAR[WatchedIconVar]</texture>
					<colordiffuse>$VAR[ColorDiffuseVar]</colordiffuse>
				</control>
				<control type="label">
					<left>1745</left>
					<top>8</top>
					<width>50</width>
					<height>50</height>
					<label>$INFO[ListItem.Top250]</label>
					<textcolor>white6</textcolor>
					<align>center</align>
					<font>Font_Bold15_Caps</font>
					<visible>IntegerGreaterThan(ListItem.Top250,3)</visible>
				</control>
			</control>
			<control type="image">
				<left>136</left>
				<top>20</top>
				<width>32</width>
				<height>32</height>
				<texture background="true">$VAR[CountryFlagVar]</texture>
				<visible>!Skin.HasSetting(no_infopane_panel)</visible>
				<include>Animation_VisibleChange400</include>
			</control>
			<control type="group">
				<visible>Container.Content(movies) | [Container.Content(tvshows) + Control.isVisible(8858)]</visible>
				<visible>!Skin.HasSetting(no_infopane_panel)</visible>
				<include>Animation_VisibleChange400</include>
				<control type="label">
					<left>170</left>
					<top>12</top>
					<width>1580</width>
					<height>42</height>
					<align>center</align>
					<label>$VAR[LandscapeLogoPanelLabelVar]</label>
					<textcolor>grey2</textcolor>
					<scroll>true</scroll>
				</control>
			</control>
			<control type="image">
				<left>909</left>
				<top>69</top>
				<width>798</width>
				<height>454</height>
				<aspectratio align="center">scale</aspectratio>
				<texture background="true" fallback="special://skin/backgrounds/fallback_movies.jpg">$VAR[FanartTextureVar]</texture>
				<fadetime>FanartCrossfadeTime</fadetime>
				<bordertexture border="7">thumbs/thumbshadow.png</bordertexture>
				<bordersize>7</bordersize>
				<animation effect="zoom" end="108" center="1800,270" time="320" tween="cubic" easing="inout" condition="Skin.HasSetting(no_infopane_panel) + Control.IsVisible(503)">Conditional</animation>
				<visible>StringCompare(Control.GetLabel(4420),fanart) + !Skin.Hassetting(infopanel_extrafanart)</visible>
				<animation type="VisibleChange">
					<effect type="fade" end="100" delay="320" time="160"/>
				</animation>
			</control>
			<!-- BEGIN Extra Fanart by ShadowTek -->
            <control type="multiimage">
                <left>909</left>
                <posy>69</posy>
                <width>798</width>
                <height>454</height>
                <aspectratio>stretch</aspectratio>
                <fadetime>FanartCrossfadeTime</fadetime>
                <include condition="Window.IsActive(pictures)">Aspectratio_Keep</include>
                <include condition="!Window.IsActive(pictures)">Aspectratio_Scale</include>
                <timeperimage>3000</timeperimage>
                <imagepath background="true">$VAR[VideoExtraFanartVar]</imagepath>
                <visible>StringCompare(Control.GetLabel(4420),fanart) + Skin.Hassetting(infopanel_extrafanart)</visible>
                <include>Animation_VisibleChange200</include>
             </control>
			 <!-- END Extra Fanart by ShadowTek -->
			<control type="image">
				<left>909</left>
				<top>69</top>
				<width>798</width>
				<height>454</height>
				<aspectratio align="center">scale</aspectratio>
				<texture>$VAR[SeasonLandscape]</texture>
				<fadetime>FanartCrossfadeTime</fadetime>
				<bordertexture border="7">thumbs/thumbshadow.png</bordertexture>
				<bordersize>7</bordersize>
				<animation effect="zoom" end="108" center="1800,270" time="320" tween="cubic" easing="inout" condition="Skin.HasSetting(no_infopane_panel) + Control.IsVisible(503)">Conditional</animation>
				<visible>Container.Content(seasons) + Skin.HasSetting(TVLandscapeThumb)</visible>
				<animation type="VisibleChange">
					<effect type="fade" end="100" delay="340" time="160"/>
				</animation>
			</control>
			<control type="group">
				<left>158</left>
				<top>74</top>
				<visible>StringCompare(Control.GetLabel(4420),fanart) | StringCompare(Control.GetLabel(4420),fourthumbs)</visible>
				<animation effect="slide" end="472,0" time="0" easing="inout" tween="cubic" condition="StringCompare(Control.GetLabel(4420),fourthumbs)">Conditional</animation>
				<animation effect="fade" start="100" end="0" time="880" condition="Player.HasVideo + StringCompare(Control.GetLabel(4420),fourthumbs)">Conditional</animation>
				<animation type="VisibleChange">
					<effect type="fade" end="100" delay="320" time="160"/>
				</animation>
				<control type="grouplist">
					<orientation>vertical</orientation>
					<top>-4</top>
					<control type="label">
						<width>420</width>
						<height>22</height>
						<label>$VAR[FanartPanelDetail1Var]</label>
						<textcolor>$VAR[SubTitleColorVar]</textcolor>
					</control>
					<control type="label">
						<width>300</width>
						<height>47</height>
						<label fallback="31006">$VAR[FanartPanelValue1Var]</label>
						<scroll>true</scroll>
					</control>
					<control type="label">
						<width>420</width>
						<height>22</height>
						<label>$VAR[FanartPanelDetail3Var]</label>
						<textcolor>$VAR[SubTitleColorVar]</textcolor>
					</control>
					<control type="label">
						<width>300</width>
						<height>47</height>
						<label fallback="31006">$VAR[FanartPanelValue3Var]</label>
						<scroll>true</scroll>
					</control>
					<control type="label">
						<width>420</width>
						<height>22</height>
						<label>$VAR[FanartPanelDetail5Var]</label>
						<textcolor>$VAR[SubTitleColorVar]</textcolor>
					</control>
					<control type="label">
						<width>300</width>
						<height>47</height>
						<label fallback="31006">$VAR[FanartPanelValue5Var]</label>
						<scroll>true</scroll>
					</control>
				</control>
				<control type="grouplist">
					<orientation>vertical</orientation>
					<top>-4</top>
					<left>352</left>
					<control type="label">
						<width>420</width>
						<height>22</height>
						<label>$VAR[FanartPanelDetail2Var]</label>
						<textcolor>$VAR[SubTitleColorVar]</textcolor>
					</control>
					<control type="label">
						<width>300</width>
						<height>47</height>
						<label fallback="31006">$VAR[FanartPanelValue2Var]</label>
						<scroll>true</scroll>
					</control>
					<control type="label">
						<width>420</width>
						<height>22</height>
						<label>$VAR[FanartPanelDetail4Var]</label>
						<textcolor>$VAR[SubTitleColorVar]</textcolor>
					</control>
					<control type="fadelabel">
						<width>300</width>
						<height>47</height>
						<label>$LOCALIZE[13409] #$INFO[ListItem.Top250]</label>
						<label>$INFO[ListItem.RatingAndVotes]</label>
						<scrollspeed>200</scrollspeed>
						<pauseatend>3000</pauseatend>
						<visible>!IsEmpty(ListItem.Top250)</visible>
					</control>
					<control type="label">
						<width>300</width>
						<height>47</height>
						<label fallback="31006">$VAR[FanartPanelValue4Var]</label>
						<scroll>true</scroll>
						<visible>IsEmpty(ListItem.Top250)</visible>
					</control>
					<control type="label">
						<width>420</width>
						<height>22</height>
						<label>$VAR[FanartPanelDetail6Var]</label>
						<textcolor>$VAR[SubTitleColorVar]</textcolor>
					</control>
					<control type="label">
						<width>300</width>
						<height>47</height>
						<label fallback="31006">$VAR[FanartPanelValue6Var]</label>
						<scroll>true</scroll>
					</control>
				</control>
				<control type="textbox">
					<top>209</top>
					<width>652</width>
					<height>247</height>
					<label>$VAR[FanartPanelPlotVar]</label>
					<textcolor>white6</textcolor>
					<autoscroll delay="8000" time="AutoScrollTime" repeat="8000">Skin.HasSetting(AutoScroll)</autoscroll>
					<visible>StringCompare(Control.GetLabel(4420),fanart)</visible>
				</control>
				<control type="textbox">
					<top>209</top>
					<width>652</width>
					<height>218</height>
					<label>$VAR[FanartPanelPlotVar]</label>
					<textcolor>white6</textcolor>
					<autoscroll delay="8000" time="AutoScrollTime" repeat="8000">Skin.HasSetting(AutoScroll)</autoscroll>
					<visible>!StringCompare(Control.GetLabel(4420),fanart) + !Skin.HasSetting(NoFlow)</visible>
				</control>
				<control type="textbox">
					<top>209</top>
					<width>652</width>
					<height>188</height>
					<label>$VAR[FanartPanelPlotVar]</label>
					<textcolor>white6</textcolor>
					<autoscroll delay="8000" time="AutoScrollTime" repeat="8000">Skin.HasSetting(AutoScroll)</autoscroll>
					<visible>!StringCompare(Control.GetLabel(4420),fanart) + Skin.HasSetting(NoFlow)</visible>
				</control>
			</control>
			<control type="group">
				<visible>StringCompare(Control.GetLabel(4420),poster) | StringCompare(Control.GetLabel(4420),extrathumbs)</visible>
				<animation type="VisibleChange">
					<effect type="fade" end="100" delay="320" time="160"/>
				</animation>
				<control type="image">
					<left>1400</left>
					<top>63</top>
					<width>323</width>
					<height>470</height>
					<aspectratio scalediffuse="false" align="center">scale</aspectratio>
					<texture background="true" diffuse="thumbs/movieposter_mask.png">$VAR[ListPosterVar]</texture>
					<fadetime>200</fadetime>
					<bordertexture border="7">thumbs/thumbshadow.png</bordertexture>
					<bordersize>7</bordersize>
					<visible>StringCompare(Control.GetLabel(4420),poster)</visible>
				</control>
				<control type="image">
					<left>1387.5</left>
					<top>50.5</top>
					<width>348</width>
					<height>495</height>
					<texture diffuse="thumbs/movieposter_mask.png">thumbs/thumb_glass.png</texture>
					<bordertexture border="19.5">thumbs/poster_shadow.png</bordertexture>
					<bordersize>19.5</bordersize>
					<visible>StringCompare(Control.GetLabel(4420),poster)</visible>
				</control>
				<control type="group">
					<left>158</left>
					<top>71</top>
					<control type="grouplist">
						<orientation>vertical</orientation>
						<top>0</top>
						<control type="label">
							<width>420</width>
							<height>22</height>
							<font>Font_Reg28</font>
							<label>$VAR[FanartPanelDetail1Var]</label>
							<textcolor>$VAR[SubTitleColorVar]</textcolor>
						</control>
						<control type="label">
							<aligny>top</aligny>
							<width>420</width>
							<font>Font_Reg28</font>
							<height>44</height>
							<label fallback="31006">$VAR[FanartPanelValue1Var]</label>
							<scroll>true</scroll>
						</control>
						<control type="label">
							<width>420</width>
							<font>Font_Reg28</font>
							<height>22</height>
							<label>$VAR[FanartPanelDetail2Var]</label>
							<textcolor>$VAR[SubTitleColorVar]</textcolor>
						</control>
						<control type="label">
							<width>420</width>
							<height>44</height>
							<font>Font_Reg28</font>
							<aligny>top</aligny>
							<label fallback="31006">$VAR[FanartPanelValue2Var]</label>
							<scroll>true</scroll>
						</control>
						<control type="label">
							<width>420</width>
							<height>22</height>
							<font>Font_Reg28</font>
							<label>$VAR[PosterPanelDetail3Var]</label>
							<textcolor>$VAR[SubTitleColorVar]</textcolor>
						</control>
						<control type="label">
							<width>420</width>
							<height>44</height>
							<font>Font_Reg28</font>
							<aligny>top</aligny>
							<label fallback="31006">$VAR[PosterPanelValue3Var]</label>
							<scroll>true</scroll>
						</control>
						<control type="label">
							<width>420</width>
							<height>22</height>
							<font>Font_Reg28</font>
							<label>$VAR[FanartPanelDetail4Var]</label>
							<textcolor>$VAR[SubTitleColorVar]</textcolor>
						</control>
						<control type="fadelabel">
							<width>422</width>
							<height>44</height>
							<font>Font_Reg28</font>
							<aligny>top</aligny>
							<label fallback="31006">$VAR[PosterPanelValue4Var]</label>
							<pauseatend>3000</pauseatend>
						</control>
						<control type="label">
							<width>420</width>
							<height>22</height>
							<font>Font_Reg28</font>
							<label>$VAR[PosterPanelDetail5Var]</label>
							<textcolor>$VAR[SubTitleColorVar]</textcolor>
						</control>
						<control type="label">
							<width>300</width>
							<height>44</height>
							<font>Font_Reg28</font>
							<aligny>top</aligny>
							<label fallback="31006">$VAR[PosterPanelValue5Var]</label>
							<scroll>true</scroll>
						</control>
						<control type="label">
							<width>420</width>
							<height>22</height>
							<font>Font_Reg28</font>
							<label>$VAR[PosterPanelDetail6Var]</label>
							<textcolor>$VAR[SubTitleColorVar]</textcolor>
						</control>
						<control type="label">
							<width>420</width>
							<height>44</height>
							<font>Font_Reg28</font>
							<aligny>top</aligny>
							<label fallback="31006">$VAR[PosterPanelValue6Var]</label>
							<scroll>true</scroll>
						</control>
						<control type="label">
							<width>420</width>
							<height>22</height>
							<font>Font_Reg28</font>
							<label>$VAR[PosterPanelDetail7Var]</label>
							<textcolor>$VAR[SubTitleColorVar]</textcolor>
						</control>
						<control type="label">
							<width>420</width>
							<height>44</height>
							<aligny>top</aligny>
							<font>Font_Reg28</font>
							<label fallback="31452">$VAR[PosterPanelValue7Var]</label>
							<scroll>true</scroll>
						</control>
					</control>
					<control type="textbox" id="5777">
						<left>480</left>
						<top>-9</top>
						<width>657</width>
						<height>393</height>
						<label fallback="31006">$VAR[FanartPanelPlotVar]</label>
						<textcolor>white6</textcolor>
						<animation effect="fade" start="100" end="0" time="880" condition="Player.HasVideo">Conditional</animation>
						<autoscroll delay="8000" time="AutoScrollTime" repeat="8000">Skin.HasSetting(AutoScroll)</autoscroll>
						<visible>!Control.IsVisible(503)</visible>
						<visible>[[Skin.HasSetting(noflow) + ![Container.Content(tvshows) | Container.Content(seasons) | Container.Content(episodes)]] | [Skin.HasSetting(noflowtv) + [Container.Content(tvshows) | Container.Content(seasons) | Container.Content(episodes)]]]</visible>
					</control>
					<control type="textbox">
						<left>486</left>
						<top>-9</top>
						<width>657</width>
						<height>450</height>
						<label fallback="31006">$VAR[FanartPanelPlotVar]</label>
						<textcolor>white6</textcolor>
						<animation effect="fade" start="100" end="0" time="880" condition="Player.HasVideo">Conditional</animation>
						<autoscroll delay="8000" time="AutoScrollTime" repeat="8000">Skin.HasSetting(AutoScroll)</autoscroll>
						<visible>!Control.IsVisible(5777)</visible>
					</control>
				</control>
			</control>
			<control type="group">
				<visible>Container.Content(movies)</visible>
				<control type="group">
					<left>155</left>
					<visible>StringCompare(Control.GetLabel(4420),fourthumbs)</visible>
					<animation type="VisibleChange">
						<effect type="fade" end="100" delay="320" time="160"/>
					</animation>
					<control type="image">
						<top>62</top>
						<width>391</width>
						<height>220</height>
						<aspectratio>keep</aspectratio>
						<texture fallback="fallback.png" background="true">$VAR[ExtraThumb3Var]</texture>
						<fadetime>400</fadetime>
						<bordertexture border="7">thumbs/thumbshadow.png</bordertexture>
						<bordersize>7</bordersize>
					</control>
					<control type="image">
						<top>315</top>
						<width>391</width>
						<height>220</height>
						<aspectratio>keep</aspectratio>
						<texture fallback="fallback.png" background="true">$VAR[ExtraThumb4Var]</texture>
						<fadetime>400</fadetime>
						<bordertexture border="7">thumbs/thumbshadow.png</bordertexture>
						<bordersize>7</bordersize>
					</control>
				</control>
				<control type="group">
					<left>1363</left>
					<visible>SubString(Control.GetLabel(4420),thumbs)</visible>
					<animation type="VisibleChange">
						<effect type="fade" end="100" delay="320" time="160"/>
					</animation>
					<control type="image">
						<top>62</top>
						<width>391</width>
						<height>220</height>
						<aspectratio>keep</aspectratio>
						<texture fallback="fallback.png" background="true">$VAR[ExtraThumb1Var]</texture>
						<fadetime>400</fadetime>
						<bordertexture border="7">thumbs/thumbshadow.png</bordertexture>
						<bordersize>7</bordersize>
					</control>
					<control type="image">
						<top>315</top>
						<width>391</width>
						<height>220</height>
						<aspectratio>keep</aspectratio>
						<texture fallback="fallback.png" background="true">$VAR[ExtraThumb2Var]</texture>
						<fadetime>400</fadetime>
						<bordertexture border="7">thumbs/thumbshadow.png</bordertexture>
						<bordersize>7</bordersize>
					</control>
				</control>
			</control>
			<control type="group">
				<visible>Container.Content(tvshows) + StringCompare(Control.GetLabel(4420),fourthumbs)</visible>
				<animation type="VisibleChange">
					<effect type="fade" end="100" delay="320" time="160"/>
				</animation>
				<control type="group">
					<left>155</left>
					<control type="image">
						<top>62</top>
						<width>391</width>
						<height>220</height>
						<aspectratio align="center">keep</aspectratio>
						<texture>$VAR[InfoPanelCharacterArtVar]</texture>
						<fadetime>400</fadetime>
					</control>
					<control type="image">
						<top>315</top>
						<width>391</width>
						<height>220</height>
						<aspectratio aligny="top">scale</aspectratio>
						<texture fallback="fallback.png" background="true">$INFO[ListItem.Art(fanart)]</texture>
						<fadetime>400</fadetime>
						<bordertexture border="7">thumbs/thumbshadow.png</bordertexture>
						<bordersize>7</bordersize>
					</control>
				</control>
				<control type="group">
					<left>1363</left>
					<control type="image">
						<top>62</top>
						<width>391</width>
						<height>220</height>
						<aspectratio aligny="top">keep</aspectratio>
						<texture fallback="fallback.png" background="true">$INFO[ListItem.Art(clearart)]</texture>
						<fadetime>400</fadetime>
						<bordersize>7</bordersize>
					</control>
					<control type="image">
						<top>315</top>
						<width>391</width>
						<height>220</height>
						<aspectratio aligny="top">keep</aspectratio>
						<texture fallback="fallback.png" background="true">$INFO[ListItem.Art(landscape)]</texture>
						<fadetime>400</fadetime>
						<bordertexture border="7">thumbs/thumbshadow.png</bordertexture>
						<bordersize>7</bordersize>
					</control>
				</control>
			</control>
			<control type="group">
				<left>915</left>
				<top>75</top>
				<animation effect="slide" end="-348,-22" reversible="false" condition="StringCompare(Control.GetLabel(4420),poster) | StringCompare(Control.GetLabel(4420),extrathumbs)">Conditional</animation>
				<animation effect="zoom" center="auto" start="100" end="92" time="480" tween="back" reversible="false" condition="StringCompare(Control.GetLabel(4420),poster) | StringCompare(Control.GetLabel(4420),extrathumbs)">Conditional</animation>
				<animation effect="slide" end="-358,-38" reversible="false" condition="StringCompare(Control.GetLabel(4420),fourthumbs)">Conditional</animation>
				<animation effect="zoom" center="auto" start="100" end="88" time="480" tween="back" reversible="false" condition="StringCompare(Control.GetLabel(4420),fourthumbs)">Conditional</animation>
				<visible>Player.HasVideo</visible>
				<animation effect="fade" end="100" time="0" delay="880">Visible</animation>
				<control type="image">
					<width>786</width>
					<height>442</height>
					<texture>common/black.png</texture>
				</control>
				<control type="videowindow" id="2">
					<width>786</width>
					<height>442</height>
				</control>
			</control>
		</control>
		<!-- BEGIN Next Aired -->
		<control type="group">
			<visible>[!Stringcompare(Control.GetLabel(4421),infopanelon) + !Control.IsVisible(750) + [Container.Content(tvshows) | Container.Content(seasons)]] + Skin.HasSetting(hidenextdayaired)</visible>
			<animation effect="slide" end="0,-145" time="320" easing="inout" tween="cubic" condition="Control.IsVisible(7550)">Conditional</animation>
			<animation effect="slide" end="0,-145" time="320" easing="inout" tween="cubic" condition="Control.HasFocus(61)">Conditional</animation>
			<animation effect="slide" end="0,-145" time="320" easing="inout" tween="cubic" condition="IsEmpty(Window(Home).Property(NextAired.NextDate))">Conditional</animation>
			<animation effect="slide" end="0,-145" time="240" easing="in" tween="cubic">WindowClose</animation>
			<animation effect="slide" end="0,40" time="320" easing="inout" tween="cubic" condition="Skin.HasSetting(FadedTopBar) | !Skin.HasSetting(ClassicTopBar)">Conditional</animation>
			<control type="image">
				<left>580</left>
				<top>-80</top>
				<width>750</width>
				<height>210</height>
				<aspectratio scalediffuse="false">stretch</aspectratio>
				<texture>home/overlaynextaired.png</texture>
				<colordiffuse>$VAR[ColorDiffuseVar]</colordiffuse>
			</control>
			<control type="label">
				<left>550</left>
				<top>5</top>
				<width>800</width>
				<height>20</height>
				<aligny>center</aligny>
				<align>center</align>
				<label>$INFO[Window(Home).Property(NextAired.NextTitle)]</label>
				<font>Font_Bold19</font>
				<shadowcolor>black</shadowcolor>
			</control>
			<control type="label">
				<left>550</left>
				<top>45</top>
				<width>800</width>
				<height>20</height>
				<aligny>center</aligny>
				<align>center</align>
				<label>$INFO[Window(Home).Property(NextAired.NextDay)]$INFO[Window(Home).Property(NextAired.NextSeasonNumber), - S]$INFO[Window(Home).Property(NextAired.NextEpisodeNumber),E]</label>
				<font>Font_Bold19</font>
				<shadowcolor>black</shadowcolor>
			</control>
		</control>
		<!-- END Next Aired -->
	</include>

	<!--MAD - New Info / Text only Infopanel - Start -->
	<include name="ShowcaseInfoPaneTextOnly">
		<control type="group" id="7550">
			<top>329</top>
			<width>1920</width>
			<height>350</height>
			<visible>Skin.HasSetting(infopanel_textonly)</visible>
			<visible>Window.IsActive(1112) | Control.IsVisible(197) | Control.HasFocus(7000) | Stringcompare(Control.GetLabel(4421),infopanelon)</visible>
			<visible>Control.IsVisible(9900)</visible>
			<visible>Control.IsVisible(508) | Control.IsVisible(503) | Control.IsVisible(509) | Control.IsVisible(501) | [Control.IsVisible(57) + Skin.HasSetting(smallshiftview)]</visible>
			<animation effect="slide" start="0,-1200" end="0,0" time="600" tween="cubic">VisibleChange</animation>
			<animation effect="slide" end="0,45" time="320" easing="inout" tween="cubic" condition="Control.IsVisible(503) | Control.IsVisible(508)">Conditional</animation>
			<animation effect="fade" time="200">WindowOpen</animation>
			<animation effect="slide" end="0,-1000" time="240" easing="in" tween="cubic">WindowClose</animation>
			<animation effect="slide" end="0,35" time="400" easing="in" tween="cubic" condition="!Skin.HasSetting(no_infopane_panel) + Control.IsVisible(503)">Conditional</animation>
			<animation effect="slide" end="0,60" time="400" easing="in" tween="cubic" condition="[Control.IsVisible(57) + Skin.HasSetting(smallshiftview)]">Conditional</animation>
			<animation effect="slide" end="0,65" time="400" easing="in" tween="cubic" condition="!Skin.HasSetting(no_infopane_panel) + Control.IsVisible(503) + [Skin.HasSetting(landscapelogo) | Skin.HasSetting(landscapeonelogo)] + [Container.Content(tvshows) | Container.Content(movies)]">Conditional</animation>
			<animation effect="slide" start="0," end="0,-55" time="600" tween="cubic" condition="Skin.HasSetting(infopanel_textonly)">Conditional</animation>
			<animation effect="zoom" end="113" center="960,500" time="320" tween="cubic" easing="inout" condition="Skin.HasSetting(no_infopane_panel)">Conditional</animation>
			<control type="group">
				<visible>!Skin.HasSetting(no_infopane_panel)</visible>
				<include>Animation_VisibleChange400</include>
				<control type="image">
					<left>112</left>
					<width>1695</width>
					<height>760</height>
					<texture>wall/wall_bg_glow.png</texture>
					<visible>!Skin.HasSetting(DisableGlowbar)</visible>
					<colordiffuse>$VAR[ColorDiffuseVar]</colordiffuse>
					<include>PanelGlowFade</include>
				</control>
				<control type="image">
					<left>112</left>
					<width>1695</width>
					<height>760</height>
					<texture>wall/wall_bg.png</texture>
					<colordiffuse>$VAR[DialogColorVar]</colordiffuse>
				</control>
			</control>
			<control type="image">
				<left>112</left>
				<top>-6</top>
				<width>1695</width>
				<height>750</height>
				<texture>$VAR[InfoPanelLayoutTextVar]</texture>
				<fadetime>400</fadetime>
				<visible>!Skin.HasSetting(no_infopane_panel)</visible>
			</control>
			<control type="group">
				<visible>!Skin.HasSetting(no_infopane_panel) + Skin.HasSetting(enable_Watchedicontop)</visible>
				<include>Animation_VisibleChange400</include>
				<control type="image">
					<left>1747</left>
					<top>15</top>
					<width>45</width>
					<height>45</height>
					<texture>$VAR[WatchedIconVar]</texture>
					<colordiffuse>$VAR[ColorDiffuseVar]</colordiffuse>
				</control>
				<control type="label">
					<left>1745</left>
					<top>8</top>
					<width>50</width>
					<height>50</height>
					<label>$INFO[ListItem.Top250]</label>
					<textcolor>white6</textcolor>
					<align>center</align>
					<font>Font_Bold15_Caps</font>
					<visible>IntegerGreaterThan(ListItem.Top250,3)</visible>
				</control>
			</control>
			<control type="image">
				<left>136</left>
				<top>10</top>
				<width>32</width>
				<height>32</height>
				<texture background="true">$VAR[CountryFlagVar]</texture>
				<visible>!Skin.HasSetting(no_infopane_panel)</visible>
				<include>Animation_VisibleChange400</include>
			</control>
			<control type="group">
				<visible>Container.Content(movies) | [Container.Content(tvshows) + Control.isVisible(8858)]</visible>
				<visible>!Skin.HasSetting(no_infopane_panel)</visible>
				<include>Animation_VisibleChange400</include>
				<control type="label">
					<left>170</left>
					<top>1</top>
					<width>1580</width>
					<height>42</height>
					<align>center</align>
					<label>$VAR[LandscapeLogoPanelLabelVar]</label>
					<textcolor>grey2</textcolor>
					<scroll>true</scroll>
				</control>
			</control>
			<control type="group">
				<left>158</left>
				<top>74</top>
				<animation effect="slide" end="472,0" time="0" easing="inout" tween="cubic" condition="StringCompare(Control.GetLabel(4420),fourthumbs)">Conditional</animation>
				<animation effect="fade" start="100" end="0" time="880" condition="Player.HasVideo + StringCompare(Control.GetLabel(4420),fourthumbs)">Conditional</animation>
				<animation type="VisibleChange">
					<effect type="fade" end="100" delay="320" time="160"/>
				</animation>
				<control type="grouplist">
					<orientation>vertical</orientation>
					<top>-18</top>
					<control type="label">
						<width>420</width>
						<height>22</height>
						<label>$VAR[FanartPanelDetail1Var]</label>
						<textcolor>$VAR[SubTitleColorVar]</textcolor>
					</control>
					<control type="label">
						<width>300</width>
						<height>47</height>
						<label fallback="31006">$VAR[FanartPanelValue1Var]</label>
						<scroll>true</scroll>
					</control>
					<control type="label">
						<width>420</width>
						<height>22</height>
						<label>$VAR[FanartPanelDetail3Var]</label>
						<textcolor>$VAR[SubTitleColorVar]</textcolor>
					</control>
					<control type="label">
						<width>300</width>
						<height>47</height>
						<label fallback="31006">$VAR[FanartPanelValue3Var]</label>
						<scroll>true</scroll>
					</control>
					<control type="label">
						<width>420</width>
						<height>22</height>
						<label>$VAR[FanartPanelDetail5Var]</label>
						<textcolor>$VAR[SubTitleColorVar]</textcolor>
					</control>
					<control type="label">
						<width>300</width>
						<height>47</height>
						<label fallback="31006">$VAR[FanartPanelValue5Var]</label>
						<scroll>true</scroll>
					</control>
				</control>
				<control type="grouplist">
					<orientation>vertical</orientation>
					<top>-18</top>
					<left>352</left>
					<control type="label">
						<width>420</width>
						<height>22</height>
						<label>$VAR[FanartPanelDetail2Var]</label>
						<textcolor>$VAR[SubTitleColorVar]</textcolor>
					</control>
					<control type="label">
						<width>300</width>
						<height>47</height>
						<label fallback="31006">$VAR[FanartPanelValue2Var]</label>
						<scroll>true</scroll>
					</control>
					<control type="label">
						<width>420</width>
						<height>22</height>
						<label>$VAR[FanartPanelDetail4Var]</label>
						<textcolor>$VAR[SubTitleColorVar]</textcolor>
					</control>
					<control type="fadelabel">
						<width>300</width>
						<height>47</height>
						<label>$LOCALIZE[13409] #$INFO[ListItem.Top250]</label>
						<label>$INFO[ListItem.RatingAndVotes]</label>
						<scrollspeed>200</scrollspeed>
						<pauseatend>3000</pauseatend>
						<visible>!IsEmpty(ListItem.Top250)</visible>
					</control>
					<control type="label">
						<width>300</width>
						<height>47</height>
						<label fallback="31006">$VAR[FanartPanelValue4Var]</label>
						<scroll>true</scroll>
						<visible>IsEmpty(ListItem.Top250)</visible>
					</control>
					<control type="label">
						<width>420</width>
						<height>22</height>
						<label>$VAR[FanartPanelDetail6Var]</label>
						<textcolor>$VAR[SubTitleColorVar]</textcolor>
					</control>
					<control type="label">
						<width>300</width>
						<height>47</height>
						<label fallback="31006">$VAR[FanartPanelValue6Var]</label>
						<scroll>true</scroll>
					</control>
				</control>
				<control type="textbox">
					<left>709</left>
					<top>-18</top>
					<width>882</width>
					<height>177</height>
					<label>$VAR[FanartPanelPlotVar]</label>
					<textcolor>white6</textcolor>
					<autoscroll delay="8000" time="AutoScrollTime" repeat="8000">Skin.HasSetting(AutoScroll)</autoscroll>
					<visible>StringCompare(Control.GetLabel(4420),fanart)</visible>
				</control>
			</control>
			<control type="group">
				<left>915</left>
				<top>75</top>
				<animation effect="slide" end="-348,-22" reversible="false" condition="StringCompare(Control.GetLabel(4420),poster) | StringCompare(Control.GetLabel(4420),extrathumbs)">Conditional</animation>
				<animation effect="zoom" center="auto" start="100" end="92" time="480" tween="back" reversible="false" condition="StringCompare(Control.GetLabel(4420),poster) | StringCompare(Control.GetLabel(4420),extrathumbs)">Conditional</animation>
				<animation effect="slide" end="-358,-38" reversible="false" condition="StringCompare(Control.GetLabel(4420),fourthumbs)">Conditional</animation>
				<animation effect="zoom" center="auto" start="100" end="88" time="480" tween="back" reversible="false" condition="StringCompare(Control.GetLabel(4420),fourthumbs)">Conditional</animation>
				<visible>Player.HasVideo</visible>
				<animation effect="fade" end="100" time="0" delay="880">Visible</animation>
				<control type="image">
					<width>786</width>
					<height>442</height>
					<texture>common/black.png</texture>
				</control>
				<control type="videowindow" id="2">
					<width>786</width>
					<height>442</height>
				</control>
			</control>
		</control>
		<!-- BEGIN Next Aired -->
		<control type="group">
			<visible>[!Stringcompare(Control.GetLabel(4421),infopanelon) + !Control.IsVisible(750) + [Container.Content(tvshows) | Container.Content(seasons)]] + Skin.HasSetting(hidenextdayaired)</visible>
			<animation effect="slide" end="0,-145" time="320" easing="inout" tween="cubic" condition="Control.IsVisible(7550)">Conditional</animation>
			<animation effect="slide" end="0,-145" time="320" easing="inout" tween="cubic" condition="Control.HasFocus(61)">Conditional</animation>
			<animation effect="slide" end="0,-145" time="320" easing="inout" tween="cubic" condition="IsEmpty(Window(Home).Property(NextAired.NextDate))">Conditional</animation>
			<animation effect="slide" end="0,-145" time="240" easing="in" tween="cubic">WindowClose</animation>
			<animation effect="slide" end="0,40" time="320" easing="inout" tween="cubic" condition="Skin.HasSetting(FadedTopBar) | !Skin.HasSetting(ClassicTopBar)">Conditional</animation>
			<control type="image">
				<left>580</left>
				<top>-80</top>
				<width>750</width>
				<height>210</height>
				<aspectratio scalediffuse="false">stretch</aspectratio>
				<texture>home/overlaynextaired.png</texture>
				<colordiffuse>$VAR[ColorDiffuseVar]</colordiffuse>
			</control>
			<control type="label">
				<left>550</left>
				<top>5</top>
				<width>800</width>
				<height>20</height>
				<aligny>center</aligny>
				<align>center</align>
				<label>$INFO[Window(Home).Property(NextAired.NextTitle)]</label>
				<font>Font_Bold19</font>
				<shadowcolor>black</shadowcolor>
			</control>
			<control type="label">
				<left>550</left>
				<top>45</top>
				<width>800</width>
				<height>20</height>
				<aligny>center</aligny>
				<align>center</align>
				<label>$INFO[Window(Home).Property(NextAired.NextDay)]$INFO[Window(Home).Property(NextAired.NextSeasonNumber), - S]$INFO[Window(Home).Property(NextAired.NextEpisodeNumber),E]</label>
				<font>Font_Bold19</font>
				<shadowcolor>black</shadowcolor>
			</control>
		</control>
		<!-- END Next Aired -->
	</include>
	<!--End-->

	<include name="FloorSetDiscArt">
		<control type="group">
			<animation type="WindowClose" reversible="false">
				<effect type="fade" start="100" end="0" time="240"/>
				<effect type="zoom" start="100" end="130" center="960,540" time="240" tween="cubic" easing="in"/>
			</animation>
			<animation effect="zoom" start="100" end="195" time="640" easing="inout" tween="circle" center="960,970" condition="Control.IsVisible(501) + Skin.HasSetting(showcasezoom)">Conditional</animation>
			<visible>[Control.IsVisible(501) + !Skin.HasSetting(OpenCase)] + Skin.HasSetting(showcasecdart)</visible>
			<visible>![Skin.HasSetting(OpenBoxSet) + SubString(ListItem.Path,videodb://movies/sets)]</visible>
			<include>Animation_VisibleChange200</include>
			<control type="group">
				<control type="group">
					<control type="image">
						<left>2750</left>
						<top>504</top>
						<width>280</width>
						<height>280</height>
						<aspectratio>keep</aspectratio>
						<texture background="true">$INFO[Window(home).Property(Set.Movie.7.Art(discart))]</texture>
						<fadetime>4000</fadetime>
						<animation type="Conditional" condition="Control.IsVisible(1970) + !IsEmpty(Window(home).Property(Set.Movie.7.Art(discart)))" reversible="true">
							<effect type="slide" start="0,0" end="-1600,0" delay="1500" time="1120" tween="quadratic" easing="out"/>
							<effect type="rotate" start="0" center="auto" end="720" delay="1500" time="1120" tween="quadratic" easing="out"/>
						</animation>
					</control>
					<control type="image">
						<left>3000</left>
						<top>504</top>
						<width>280</width>
						<height>280</height>
						<aspectratio>keep</aspectratio>
						<texture background="true">$INFO[Window(home).Property(Set.Movie.8.Art(discart))]</texture>
						<fadetime>4000</fadetime>
						<animation type="Conditional" condition="Control.IsVisible(1970) + !IsEmpty(Window(home).Property(Set.Movie.8.Art(discart)))" reversible="true">
							<effect type="slide" start="0,0" end="-1600,0" delay="1600" time="1120" tween="quadratic" easing="out"/>
							<effect type="rotate" start="0" center="auto" end="720" delay="1600" time="1120" tween="quadratic" easing="out"/>
						</animation>
					</control>
					<control type="image">
						<left>-1110</left>
						<top>504</top>
						<width>280</width>
						<height>280</height>
						<aspectratio>keep</aspectratio>
						<texture background="true">$INFO[Window(home).Property(Set.Movie.9.Art(discart))]</texture>
						<fadetime>4000</fadetime>
						<animation type="Conditional" condition="Control.IsVisible(1970) + !IsEmpty(Window(home).Property(Set.Movie.9.Art(discart)))" reversible="true">
							<effect type="slide" start="0,0" end="1600,0" delay="1700" time="1120" tween="quadratic" easing="out"/>
							<effect type="rotate" start="0" center="auto" end="-720" delay="1700" time="1120" tween="quadratic" easing="out"/>
						</animation>
					</control>
					<control type="image">
						<left>-1360</left>
						<top>504</top>
						<width>280</width>
						<height>280</height>
						<aspectratio>keep</aspectratio>
						<texture background="true">$INFO[Window(home).Property(Set.Movie.10.Art(discart))]</texture>
						<fadetime>4000</fadetime>
						<animation type="Conditional" condition="Control.IsVisible(1970) + !IsEmpty(Window(home).Property(Set.Movie.10.Art(discart)))" reversible="true">
							<effect type="slide" start="0,0" end="1600,0" delay="1700" time="1120" tween="quadratic" easing="out"/>
							<effect type="rotate" start="0" center="auto" end="-720" delay="1700" time="1120" tween="quadratic" easing="out"/>
						</animation>
					</control>
				</control>
				<control type="group">
					<control type="image">
						<left>2630</left>
						<top>704</top>
						<width>280</width>
						<height>280</height>
						<aspectratio>keep</aspectratio>
						<texture background="true">$INFO[Window(home).Property(Set.Movie.1.Art(discart))]</texture>
						<fadetime>4000</fadetime>
						<animation type="Conditional" condition="Control.IsVisible(1970) + !IsEmpty(Window(home).Property(Set.Movie.1.Art(discart)))" reversible="true">
							<effect type="slide" start="0,0" end="-1600,0" delay="1200" time="1120" tween="quadratic" easing="out"/>
							<effect type="rotate" start="0" center="2770,844" end="720" delay="1200" time="1120" tween="quadratic" easing="out"/>
						</animation>
					</control>
					<control type="image">
						<left>2630</left>
						<top>984</top>
						<width>280</width>
						<height>280</height>
						<aspectratio>keep</aspectratio>
						<texture background="true" flipy="true">$INFO[Window(home).Property(Set.Movie.1.Art(discart))]</texture>
						<fadetime>4000</fadetime>
						<colordiffuse>22FFFFFF</colordiffuse>
						<animation type="Conditional" condition="Control.IsVisible(1970) + !IsEmpty(Window(home).Property(Set.Movie.1.Art(discart)))" reversible="true">
							<effect type="slide" start="0,0" end="-1600,0" delay="1200" time="1120" tween="quadratic" easing="out"/>
							<effect type="rotate" start="0" center="2770,1124" end="-720" delay="1200" time="1120" tween="quadratic" easing="out"/>
						</animation>
					</control>
				</control>
				<control type="group">
					<control type="image">
						<left>2880</left>
						<top>704</top>
						<width>280</width>
						<height>280</height>
						<aspectratio>keep</aspectratio>
						<texture background="true">$INFO[Window(home).Property(Set.Movie.2.Art(discart))]</texture>
						<fadetime>4000</fadetime>
						<animation type="Conditional" condition="Control.IsVisible(1970) + !IsEmpty(Window(home).Property(Set.Movie.2.Art(discart)))" reversible="true">
							<effect type="slide" start="0,0" end="-1600,0" delay="1300" time="1120" tween="quadratic" easing="out"/>
							<effect type="rotate" start="0" center="3020,844" end="720" delay="1300" time="1120" tween="quadratic" easing="out"/>
						</animation>
					</control>
					<control type="image">
						<left>2880</left>
						<top>984</top>
						<width>280</width>
						<height>280</height>
						<aspectratio>keep</aspectratio>
						<texture background="true" flipy="true">$INFO[Window(home).Property(Set.Movie.2.Art(discart))]</texture>
						<fadetime>4000</fadetime>
						<colordiffuse>22FFFFFF</colordiffuse>
						<animation type="Conditional" condition="Control.IsVisible(1970) + !IsEmpty(Window(home).Property(Set.Movie.2.Art(discart)))" reversible="true">
							<effect type="slide" start="0,0" end="-1600,0" delay="1300" time="1120" tween="quadratic" easing="out"/>
							<effect type="rotate" start="0" center="3020,1124" end="-720" delay="1300" time="1120" tween="quadratic" easing="out"/>
						</animation>
					</control>
				</control>
				<control type="group">
					<control type="image">
						<left>3130</left>
						<top>704</top>
						<width>280</width>
						<height>280</height>
						<aspectratio>keep</aspectratio>
						<texture background="true">$INFO[Window(home).Property(Set.Movie.3.Art(discart))]</texture>
						<fadetime>4000</fadetime>
						<animation type="Conditional" condition="Control.IsVisible(1970) + !IsEmpty(Window(home).Property(Set.Movie.3.Art(discart)))" reversible="true">
							<effect type="slide" start="0,0" end="-1600,0" delay="1400" time="1120" tween="quadratic" easing="out"/>
							<effect type="rotate" start="0" center="3270,844" end="720" delay="1400" time="1120" tween="quadratic" easing="out"/>
						</animation>
					</control>
					<control type="image">
						<left>3130</left>
						<top>984</top>
						<width>280</width>
						<height>280</height>
						<aspectratio>keep</aspectratio>
						<texture background="true" flipy="true">$INFO[Window(home).Property(Set.Movie.3.Art(discart))]</texture>
						<fadetime>4000</fadetime>
						<colordiffuse>22FFFFFF</colordiffuse>
						<animation type="Conditional" condition="Control.IsVisible(1970) + !IsEmpty(Window(home).Property(Set.Movie.3.Art(discart)))" reversible="true">
							<effect type="slide" start="0,0" end="-1600,0" delay="1400" time="1120" tween="quadratic" easing="out"/>
							<effect type="rotate" start="0" center="3270,1124" end="-720" delay="1400" time="1120" tween="quadratic" easing="out"/>
						</animation>
					</control>
				</control>
			</control>
			<control type="group">
				<control type="group">
					<control type="image">
						<left>-990</left>
						<top>704</top>
						<width>280</width>
						<height>280</height>
						<aspectratio>keep</aspectratio>
						<texture background="true">$INFO[Window(home).Property(Set.Movie.4.Art(discart))]</texture>
						<fadetime>4000</fadetime>
						<animation type="Conditional" condition="Control.IsVisible(1970) + !IsEmpty(Window(home).Property(Set.Movie.4.Art(discart)))" reversible="true">
							<effect type="slide" start="0,0" end="1600,0" delay="1200" time="1120" tween="quadratic" easing="out"/>
							<effect type="rotate" start="0" center="-850,844" end="-720" delay="1200" time="1120" tween="quadratic" easing="out"/>
						</animation>
					</control>
					<control type="image">
						<left>-990</left>
						<top>984</top>
						<width>280</width>
						<height>280</height>
						<aspectratio>keep</aspectratio>
						<texture background="true" flipy="true">$INFO[Window(home).Property(Set.Movie.4.Art(discart))]</texture>
						<fadetime>4000</fadetime>
						<colordiffuse>22FFFFFF</colordiffuse>
						<animation type="Conditional" condition="Control.IsVisible(1970) + !IsEmpty(Window(home).Property(Set.Movie.4.Art(discart)))" reversible="true">
							<effect type="slide" start="0,0" end="1600,0" delay="1200" time="1120" tween="quadratic" easing="out"/>
							<effect type="rotate" start="0" center="-850,1124" end="720" delay="1200" time="1120" tween="quadratic" easing="out"/>
						</animation>
					</control>
				</control>
				<control type="group">
					<control type="image">
						<left>-1240</left>
						<top>704</top>
						<width>280</width>
						<height>280</height>
						<aspectratio>keep</aspectratio>
						<texture background="true">$INFO[Window(home).Property(Set.Movie.5.Art(discart))]</texture>
						<fadetime>4000</fadetime>
						<animation type="Conditional" condition="Control.IsVisible(1970) + !IsEmpty(Window(home).Property(Set.Movie.5.Art(discart)))" reversible="true">
							<effect type="slide" start="0,0" end="1600,0" delay="1300" time="1120" tween="quadratic" easing="out"/>
							<effect type="rotate" start="0" center="-1100,844" end="-720" delay="1300" time="1120" tween="quadratic" easing="out"/>
						</animation>
					</control>
					<control type="image">
						<left>-1240</left>
						<top>984</top>
						<width>280</width>
						<height>280</height>
						<aspectratio>keep</aspectratio>
						<texture background="true" flipy="true">$INFO[Window(home).Property(Set.Movie.5.Art(discart))]</texture>
						<fadetime>4000</fadetime>
						<colordiffuse>22FFFFFF</colordiffuse>
						<animation type="Conditional" condition="Control.IsVisible(1970) + !IsEmpty(Window(home).Property(Set.Movie.5.Art(discart)))" reversible="true">
							<effect type="slide" start="0,0" end="1600,0" delay="1300" time="1120" tween="quadratic" easing="out"/>
							<effect type="rotate" start="0" center="-1100,1124" end="720" delay="1300" time="1120" tween="quadratic" easing="out"/>
						</animation>
					</control>
				</control>
				<control type="group">
					<control type="image">
						<left>-1490</left>
						<top>704</top>
						<width>280</width>
						<height>280</height>
						<aspectratio>keep</aspectratio>
						<texture background="true">$INFO[Window(home).Property(Set.Movie.6.Art(discart))]</texture>
						<fadetime>4000</fadetime>
						<animation type="Conditional" condition="Control.IsVisible(1970) + !IsEmpty(Window(home).Property(Set.Movie.6.Art(discart)))" reversible="true">
							<effect type="slide" start="0,0" end="1600,0" delay="1400" time="1120" tween="quadratic" easing="out"/>
							<effect type="rotate" start="0" center="-1350,844" end="-720" delay="1400" time="1120" tween="quadratic" easing="out"/>
						</animation>
					</control>
					<control type="image">
						<left>-1490</left>
						<top>984</top>
						<width>280</width>
						<height>280</height>
						<aspectratio>keep</aspectratio>
						<texture background="true" flipy="true">$INFO[Window(home).Property(Set.Movie.6.Art(discart))]</texture>
						<fadetime>4000</fadetime>
						<colordiffuse>22FFFFFF</colordiffuse>
						<animation type="Conditional" condition="Control.IsVisible(1970) + !IsEmpty(Window(home).Property(Set.Movie.6.Art(discart)))" reversible="true">
							<effect type="slide" start="0,0" end="1600,0" delay="1400" time="1120" tween="quadratic" easing="out"/>
							<effect type="rotate" start="0" center="-1350,1124" end="720" delay="1400" time="1120" tween="quadratic" easing="out"/>
						</animation>
					</control>
				</control>
			</control>
		</control>
		<!-- test label             <control type="image">                <left>0</left>                <top>50</top>                <width>1920</width>                <height>47</height>                <texture background="true">pvr/border.png</texture>            </control>            <control type="label">				<left>10</left>				<top>50</top>									<width>1900</width>				<height>47</height>				<label>$INFO[ListItem.path]season0$INFO[ListItem.season]-fanart.jpg</label>				<scroll>true</scroll>            </control>		test label -->
		<!-- end test label -->
		<!-- end test label -->
	</include>
	<include name="Topbar">
		<width>1920</width>
		<height>40</height>
		<colordiffuse>$VAR[ColorDiffuseVar]</colordiffuse>
	</include>
	<include name="Neon_Topbar">
		<control type="group">
			<visible>!Skin.HasSetting(DisableGlowbar)</visible>
			<include>Animation_VisibleChange400</include>
			<control type="image">
				<top>22</top>
				<texture>common/topbar_left.png</texture>
				<include>Topbar</include>
				<include>TopbarPulseAnimationLeft</include>
			</control>
			<control type="image">
				<top>22</top>
				<texture>common/topbar_right.png</texture>
				<include>Topbar</include>
				<include>TopbarPulseAnimationRight</include>
			</control>
		</control>
	</include>
	<include name="Neon_VerticalBar">
		<control type="group">
			<visible>!Skin.HasSetting(DisableGlowbar)</visible>
			<include>Animation_VisibleChange400</include>
			<control type="image">
				<width>40</width>
				<height>1080</height>
				<texture>common/topbar_top.png</texture>
				<colordiffuse>$VAR[ColorDiffuseVar]</colordiffuse>
				<include>TopbarPulseAnimationLeft</include>
			</control>
			<control type="image">
				<width>40</width>
				<height>1080</height>
				<texture>common/topbar_down.png</texture>
				<colordiffuse>$VAR[ColorDiffuseVar]</colordiffuse>
				<include>TopbarPulseAnimationRight</include>
			</control>
		</control>
	</include>
	<include name="Neon_Floor">
		<control type="group">
			<visible>!Skin.HasSetting(DisableGlowbar) | [Skin.HasSetting(DisableGlowbar) + Skin.HasSetting(ExtendedGlowMode)]</visible>
			<control type="image">
				<top>854</top>
				<texture>common/topbar_left.png</texture>
				<include>Topbar</include>
				<include>TopbarPulseAnimationLeft</include>
			</control>
			<control type="image">
				<top>854</top>
				<texture>common/topbar_right.png</texture>
				<include>Topbar</include>
				<include>TopbarPulseAnimationRight</include>
			</control>
		</control>
	</include>
	<include name="Neon_LowList">
		<control type="group">
			<visible>!Skin.HasSetting(DisableGlowbar)</visible>
			<control type="image">
				<top>735</top>
				<texture>common/topbar_left.png</texture>
				<include>Topbar</include>
				<include>TopbarPulseAnimationLeft</include>
			</control>
			<control type="image">
				<top>735</top>
				<texture>common/topbar_right.png</texture>
				<include>Topbar</include>
				<include>TopbarPulseAnimationRight</include>
			</control>
		</control>
	</include>
	<include name="Neon_Home">
		<control type="group">
			<visible>!Skin.HasSetting(DisableGlowbar)</visible>
			<include>Animation_VisibleChange400</include>
			<control type="image">
				<top>494</top>
				<texture>common/topbar_left.png</texture>
				<include>Topbar</include>
				<include>TopbarPulseAnimationLeft</include>
			</control>
			<control type="image">
				<top>494</top>
				<texture>common/topbar_right.png</texture>
				<include>Topbar</include>
				<include>TopbarPulseAnimationRight</include>
			</control>
			<control type="image">
				<top>590</top>
				<texture>common/topbar_left.png</texture>
				<include>Topbar</include>
				<include>TopbarPulseAnimationLeft</include>
			</control>
			<control type="image">
				<top>590</top>
				<texture>common/topbar_right.png</texture>
				<include>Topbar</include>
				<include>TopbarPulseAnimationRight</include>
			</control>
		</control>
	</include>
</includes>
