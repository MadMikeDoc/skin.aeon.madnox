<?xml version="1.0" encoding="utf-8"?>
<includes>
	<include name="contents501list">
		<left>-69</left>
		<top>540</top>
		<width>2058</width>
		<height>525</height>
		<visible>[!Container.Content(episodes) | SubString(Container.FolderPath,videodb://recentlyaddedepisodes/)] + !Container.Content(addons)</visible>
		<visible>![!IsEmpty(Skin.String(DisableShowcaseVL)) + Window.IsActive(videos)]</visible>
		<onleft>501</onleft>
		<onright>501</onright>
		<onup>7000</onup>
		<ondown condition="Control.IsVisible(61)">61</ondown>
		<ondown condition="!Control.IsVisible(61)">109</ondown>
		<viewtype label="31028">bigwrap</viewtype>
		<pagecontrol>61</pagecontrol>
		<scrolltime tween="quadratic">300</scrolltime>
		<focusposition>3</focusposition>
		<orientation>horizontal</orientation>
		<preloaditems>2</preloaditems>
		<include>Animation_OpenCloseZoom_New</include>
		<itemlayout height="600" width="294" condition="Control.IsVisible(961) + !Control.IsVisible(6000)">
			<control type="group">
				<top>30</top>
				<animation effect="zoom" start="100" end="90" center="147,345" time="240" reversible="false" tween="cubic" condition="Skin.HasSetting(usecases) + [container.content(movies) | Container.Content(musicvideos)]">Conditional</animation>
				<animation effect="fade" time="0" delay="640">Visible</animation>
				<include>MovieShowCaseGlow</include>
				<control type="image">
					<texture background="true" diffuse="thumbs/thumb_mask.png" fallback="thumbs/fallback_poster_tp_solid.jpg">$VAR[ShowcaseItem0Var]</texture>
					<include>MovieShowcaseThumb</include>
					<!-- MikeBZH44 start : No case for movieset -->
					<visible>![Skin.HasSetting(NoCaseForMovieset) + SubString(ListItem(0).Path,videodb://movies/sets)] | [!Skin.HasSetting(usecases)]</visible>
					<visible>!Skin.HasSetting(genrethumbs)</visible>
					<!-- MikeBZH44 end -->
				</control>
				<control type="image">
					<texture background="true" diffuse="thumbs/thumb_mask.png" fallback="thumbs/fallback_poster_tp_solid.jpg">$VAR[ShowcaseItem0Var1]</texture>
					<include>MovieShowcaseThumb</include>
					<!-- MikeBZH44 start : No case for movieset -->
					<visible>![Skin.HasSetting(NoCaseForMovieset) + SubString(ListItem(0).Path,videodb://movies/sets)] | [!Skin.HasSetting(usecases)]</visible>
					<visible>Skin.HasSetting(genrethumbs)</visible>
					<!-- MikeBZH44 end -->
				</control>
				<!-- MikeBZH44 start : If no case for movieset then larger thumbnail -->
				<control type="image">
					<include>MovieShowcaseDVDCoverVarsSets</include>
					<texture background="true" fallback="thumbs/fallback_poster_tp_solid.jpg">$VAR[ShowcaseItem0Var]</texture>
					<visible>[Skin.HasSetting(usecases) + Container.Content(movies) + Skin.HasSetting(NoCaseForMovieset) + SubString(ListItem.Path,videodb://movies/sets)]</visible>
					<visible>!Skin.HasSetting(genrethumbs)</visible>
				</control>
				<control type="image">
					<include>MovieShowcaseDVDCoverVarsSets</include>
					<texture background="true" fallback="thumbs/fallback_poster_tp_solid.jpg">$VAR[ShowcaseItem0Var1]</texture>
					<visible>[Skin.HasSetting(usecases) + Container.Content(movies) + Skin.HasSetting(NoCaseForMovieset) + SubString(ListItem.Path,videodb://movies/sets)]</visible>
					<visible>Skin.HasSetting(genrethumbs)</visible>
				</control>
				<!-- MikeBZH44 end -->
				<!-- Movie Showcase Variables: Thumb glass overlays -->
				<!-- MikeBZH44 start : No case for movieset -->
				<control type="image">
					<include>MovieShowcaseThumbDimensions</include>
					<texture diffuse="thumbs/thumb_mask.png">thumbs/thumb_glass.png</texture>
					<visible>![Skin.HasSetting(NoCaseForMovieset) + SubString(ListItem(0).Path,videodb://movies/sets) + Skin.HasSetting(usecases) + [container.content(movies) | Container.Content(musicvideos)]]</visible>
				</control>
				<control type="image">
					<include>MovieShowcaseDVDCoverVars</include>
					<texture background="true">thumbs/boxes/$VAR[ShowcaseCasePathVar]/$VAR[GlobalCaseVar]</texture>
					<visible>![Skin.HasSetting(NoCaseForMovieset) + SubString(ListItem(0).Path,videodb://movies/sets)]</visible>
				</control>
				<!-- MikeBZH44 end -->
				<control type="image">
					<texture background="true" flipy="true" diffuse="thumbs/movieposter_mask_reflect.png" fallback="thumbs/fallback_poster_tp_solid.jpg">$VAR[ShowcaseItem0Var]</texture>
					<include>MovieShowcaseThumbReflection</include>
					<!-- MikeBZH44 start : No case for movieset -->
					<visible>![Skin.HasSetting(NoCaseForMovieset) + SubString(ListItem(0).Path,videodb://movies/sets)]</visible>
					<visible>!Skin.HasSetting(genrethumbs)</visible>
					<!-- MikeBZH44 end -->
				</control>
				<control type="image">
					<texture background="true" flipy="true" diffuse="thumbs/movieposter_mask_reflect.png" fallback="thumbs/fallback_poster_tp_solid.jpg">$VAR[ShowcaseItem0Var1]</texture>
					<include>MovieShowcaseThumbReflection</include>
					<!-- MikeBZH44 start : No case for movieset -->
					<visible>![Skin.HasSetting(NoCaseForMovieset) + SubString(ListItem(0).Path,videodb://movies/sets)]</visible>
					<visible>Skin.HasSetting(genrethumbs)</visible>
					<!-- MikeBZH44 end -->
				</control>
				<!-- MikeBZH44 start : If no case for movieset then larger thumbnail -->
				<control type="image">
					<include>MovieShowcaseThumbReflectionMovieset</include>
					<texture background="true" flipy="true" diffuse="thumbs/movieposter_mask_reflect.png" fallback="thumbs/fallback_poster_tp_solid.jpg">$VAR[ShowcaseItem0Var]</texture>
					<visible>[Skin.HasSetting(usecases) + Container.Content(movies) + Skin.HasSetting(NoCaseForMovieset) + SubString(ListItem(0).Path,videodb://movies/sets)]</visible>
					<visible>!Skin.HasSetting(genrethumbs)</visible>
				</control>
				<control type="image">
					<include>MovieShowcaseThumbReflectionMovieset</include>
					<texture background="true" flipy="true" diffuse="thumbs/movieposter_mask_reflect.png" fallback="thumbs/fallback_poster_tp_solid.jpg">$VAR[ShowcaseItem0Var1]</texture>
					<visible>[Skin.HasSetting(usecases) + Container.Content(movies) + Skin.HasSetting(NoCaseForMovieset) + SubString(ListItem(0).Path,videodb://movies/sets)]</visible>
					<visible>Skin.HasSetting(genrethumbs)</visible>
				</control>
				<!-- MikeBZH44 end -->
				<control type="image">
					<include>MovieShowcaseThumb</include>
					<texture background="true" diffuse="thumbs/thumb_mask.png" fallback="thumbs/fallback_poster_tp_solid.jpg">$VAR[ShowcaseItem0Var]</texture>
					<visible>Skin.HasSetting(NoCaseForMovieset) + Container.Content(sets)</visible>
					<visible>!Skin.HasSetting(genrethumbs)</visible>
				</control>
				<control type="image">
					<include>MovieShowcaseThumb</include>
					<texture background="true" diffuse="thumbs/thumb_mask.png" fallback="thumbs/fallback_poster_tp_solid.jpg">$VAR[ShowcaseItem0Var1]</texture>
					<visible>Skin.HasSetting(NoCaseForMovieset) + Container.Content(sets)</visible>
					<visible>Skin.HasSetting(genrethumbs)</visible>
				</control>
				<control type="image">
					<texture background="true">wall/boxes/wall_movie_overlay.png</texture>
					<include>TvShowShowcaseThumb</include>
				</control>
				<!-- MikeBZH44 start : No case for movieset -->
				<control type="image">
					<include>MovieShowcaseThumbReflectionDVD</include>
					<visible>![Skin.HasSetting(NoCaseForMovieset) + SubString(ListItem(0).Path,videodb://movies/sets)]</visible>
				</control>
				<!-- MikeBZH44 end -->
				<control type="image">
					<include>WatchedOverlayShowCase</include>
					<include>OverlayVisibility0</include>
					<!-- MikeBZH44 start : No case for movieset -->
					<visible>![Skin.HasSetting(NoCaseForMovieset) + SubString(ListItem(0).Path,videodb://movies/sets)]</visible>
					<!-- MikeBZH44 end -->
				</control>
				<control type="image">
					<include>WatchedOverlayShowCase</include>
					<texture background="true" diffuse="thumbs/ExtraOverlayWatched.png">$VAR[VideoextrasOverlay]</texture>
					<visible>System.HasAddon(script.videoextras)</visible>
				</control>
				<control type="image">
					<include>WatchedOverlayShowCase</include>
					<texture>overlayprogress.png</texture>
					<visible>Container.ListItem.IsResumable + Skin.HasSetting(InProgressFlag)</visible>
				</control>
				<control type="image">
					<include>WatchedOverlayShowCase</include>
					<texture background="true" diffuse="thumbs/ExtraOverlayWatched.png">$VAR[VideoextrasOverlay]</texture>
				</control>
			</control>
		</itemlayout>
		<focusedlayout height="525" width="294" condition="Control.IsVisible(961) + !Control.IsVisible(6000)">
			<control type="group">
				<top>30</top>
				<animation effect="fade" time="0" delay="640">Visible</animation>
				<animation effect="zoom" start="100" end="120" center="147,345" time="240" reversible="false" tween="cubic">Focus</animation>
				<animation effect="zoom" start="100" end="90" center="147,345" time="240" reversible="false" tween="cubic" condition="Skin.HasSetting(usecases) + [container.content(movies) | Container.Content(musicvideos)]">Conditional</animation>
				<include>MovieShowCaseGlow</include>
				<!-- MikeBZH44 start : Display background case -->
				<!-- Case background -->
				<control type="image">
					<include>MovieShowcaseDVDCoverVars</include>
					<texture background="true" fallback="thumbs/boxes/default_case.png">thumbs/boxes/$VAR[ShowcaseCasePathVar]/back_$VAR[GlobalCaseVar]</texture>
					<visible>Skin.HasSetting(usecases) + [Container.Content(movies) | Container.Content(sets)] + ![Skin.HasSetting(NoCaseForMovieset) + SubString(ListItem.Path,videodb://movies/sets)]</visible>
				</control>
				<!-- Display Movie disc -->
				<include>MovieShowcaseDisc</include>
				<!-- MikeBZH44 end -->
				<!-- Movie thumbnail -->
				<control type="image">
					<include>MovieShowcaseThumb</include>
					<texture background="true" diffuse="thumbs/thumb_mask.png" fallback="thumbs/fallback_poster_tp_solid.jpg">$VAR[ShowcaseItem0Var]</texture>
					<!-- MikeBZH44 start : Open case + No case for movieset -->
					<include>ShowcaseOpenCase</include>
					<visible>![Skin.HasSetting(NoCaseForMovieset) + SubString(ListItem.Path,videodb://movies/sets)] | [!Skin.HasSetting(usecases)]</visible>
					<visible>!Skin.HasSetting(genrethumbs)</visible>
					<!-- MikeBZH44 end -->
				</control>
				<control type="image">
					<include>MovieShowcaseThumb</include>
					<texture background="true" diffuse="thumbs/thumb_mask.png" fallback="thumbs/fallback_poster_tp_solid.jpg">$VAR[ShowcaseItem0Var1]</texture>
					<!-- MikeBZH44 start : Open case + No case for movieset -->
					<include>ShowcaseOpenCase</include>
					<visible>![Skin.HasSetting(NoCaseForMovieset) + SubString(ListItem.Path,videodb://movies/sets)] | [!Skin.HasSetting(usecases)]</visible>
					<visible>Skin.HasSetting(genrethumbs)</visible>
					<!-- MikeBZH44 end -->
				</control>
				<control type="image">
					<include>MovieShowcaseThumb</include>
					<texture background="true" diffuse="thumbs/thumb_mask.png" fallback="thumbs/fallback_poster_tp_solid.jpg">$VAR[ShowcaseItem0Var]</texture>
					<visible>Skin.HasSetting(NoCaseForMovieset) + Container.Content(sets)</visible>
					<visible>!Skin.HasSetting(genrethumbs)</visible>
				</control>
				<control type="image">
					<include>MovieShowcaseThumb</include>
					<texture background="true" diffuse="thumbs/thumb_mask.png" fallback="thumbs/fallback_poster_tp_solid.jpg">$VAR[ShowcaseItem0Var1]</texture>
					<visible>Skin.HasSetting(NoCaseForMovieset) + Container.Content(sets)</visible>
					<visible>Skin.HasSetting(genrethumbs)</visible>
				</control>
				<!-- MikeBZH44 start : If no case for movieset then larger thumbnail -->
				<control type="image">
					<include>MovieShowcaseDVDCoverVarsSets</include>
					<texture background="true" fallback="thumbs/fallback_poster_tp_solid.jpg">$VAR[ShowcaseItem0Var]</texture>
					<visible>[Skin.HasSetting(usecases) + [Container.Content(movies) | Container.Content(sets)] + Skin.HasSetting(NoCaseForMovieset) + SubString(ListItem.Path,videodb://movies/sets)]</visible>
					<visible>!Skin.HasSetting(genrethumbs)</visible>
					<animation effect="fade" start="100" end="0" time="100" delay="150" condition="[Control.IsVisible(1970) + Skin.HasSetting(OpenCase)] + Skin.HasSetting(noflow)">Conditional</animation>
				</control>
				<control type="image">
					<include>MovieShowcaseDVDCoverVarsSets</include>
					<texture background="true" fallback="thumbs/fallback_poster_tp_solid.jpg">$VAR[ShowcaseItem0Var1]</texture>
					<visible>[Skin.HasSetting(usecases) + [Container.Content(movies) | Container.Content(sets)] + Skin.HasSetting(NoCaseForMovieset) + SubString(ListItem.Path,videodb://movies/sets)]</visible>
					<visible>Skin.HasSetting(genrethumbs)</visible>
					<animation effect="fade" start="100" end="0" time="100" delay="150" condition="[Control.IsVisible(1970) + Skin.HasSetting(OpenCase)] + Skin.HasSetting(noflow)">Conditional</animation>
				</control>
				<!-- MikeBZH44 end -->
				<!-- Movie Showcase Variables: Thumb glass overlays -->
				<control type="image">
					<include>MovieShowcaseThumbDimensions</include>
					<texture diffuse="thumbs/thumb_mask.png">thumbs/thumb_glass.png</texture>
					<include>ShowcaseOpenCase</include>
					<visible>![Skin.HasSetting(NoCaseForMovieset) + SubString(ListItem.Path,videodb://movies/sets)]</visible>
				</control>
				<!-- Front case -->
				<control type="image">
					<include>MovieShowcaseThumbReflectionMain</include>
					<texture background="true" flipy="true" diffuse="thumbs/movieposter_mask_reflect.png" fallback="thumbs/fallback_poster_tp_solid.jpg">$VAR[ShowcaseItem0Var]</texture>
					<!-- MikeBZH44 start : Open case + No case for movieset -->
					<include>ShowcaseOpenCase</include>
					<visible>![Skin.HasSetting(NoCaseForMovieset) + SubString(ListItem.Path,videodb://movies/sets)]</visible>
					<visible>!Skin.HasSetting(genrethumbs)</visible>
					<!-- MikeBZH44 end -->
				</control>
				<control type="image">
					<include>MovieShowcaseThumbReflectionMain</include>
					<texture background="true" flipy="true" diffuse="thumbs/movieposter_mask_reflect.png" fallback="thumbs/fallback_poster_tp_solid.jpg">$VAR[ShowcaseItem0Var1]</texture>
					<!-- MikeBZH44 start : Open case + No case for movieset -->
					<include>ShowcaseOpenCase</include>
					<visible>![Skin.HasSetting(NoCaseForMovieset) + SubString(ListItem.Path,videodb://movies/sets)]</visible>
					<visible>Skin.HasSetting(genrethumbs)</visible>
					<!-- MikeBZH44 end -->
				</control>
				<!-- Movie thumbnail reflection -->
				<control type="image">
					<include>MovieShowcaseThumbReflectionMain</include>
					<texture background="true" flipy="true" diffuse="thumbs/movieposter_mask_reflect.png" fallback="thumbs/fallback_poster_tp_solid.jpg">$VAR[ShowcaseItem0Var]</texture>
					<!-- MikeBZH44 start : Open case + No case for movieset -->
					<include>ShowcaseOpenCase</include>
					<visible>![Skin.HasSetting(NoCaseForMovieset) + SubString(ListItem.Path,videodb://movies/sets)]</visible>
					<visible>!Skin.HasSetting(genrethumbs)</visible>
					<!-- MikeBZH44 end -->
				</control>
				<control type="image">
					<include>MovieShowcaseThumbReflectionMain</include>
					<texture background="true" flipy="true" diffuse="thumbs/movieposter_mask_reflect.png" fallback="thumbs/fallback_poster_tp_solid.jpg">$VAR[ShowcaseItem0Var1]</texture>
					<!-- MikeBZH44 start : Open case + No case for movieset -->
					<include>ShowcaseOpenCase</include>
					<visible>![Skin.HasSetting(NoCaseForMovieset) + SubString(ListItem.Path,videodb://movies/sets)]</visible>
					<visible>Skin.HasSetting(genrethumbs)</visible>
					<!-- MikeBZH44 end -->
				</control>
				<!-- MikeBZH44 start : If no case for movieset then larger thumbnail -->
				<control type="image">
					<include>MovieShowcaseThumbReflectionMovieset</include>
					<texture background="true" flipy="true" diffuse="thumbs/movieposter_mask_reflect.png" fallback="thumbs/fallback_poster_tp_solid.jpg">$VAR[ShowcaseItem0Var]</texture>
					<visible>[Skin.HasSetting(usecases) + Container.Content(movies) + Skin.HasSetting(NoCaseForMovieset) + SubString(ListItem(0).Path,videodb://movies/sets)]</visible>
					<visible>!Skin.HasSetting(genrethumbs)</visible>
				</control>
				<control type="image">
					<include>MovieShowcaseThumbReflectionMovieset</include>
					<texture background="true" flipy="true" diffuse="thumbs/movieposter_mask_reflect.png" fallback="thumbs/fallback_poster_tp_solid.jpg">$VAR[ShowcaseItem0Var1]</texture>
					<visible>[Skin.HasSetting(usecases) + Container.Content(movies) + Skin.HasSetting(NoCaseForMovieset) + SubString(ListItem(0).Path,videodb://movies/sets)]</visible>
					<visible>Skin.HasSetting(genrethumbs)</visible>
				</control>
				<!-- MikeBZH44 end -->
				<control type="image">
					<texture background="true">wall/boxes/wall_movie_overlay.png</texture>
					<include>TvShowShowcaseThumb</include>
				</control>
				<control type="image">
					<include>MovieShowcaseThumbReflectionDVD</include>
					<!-- MikeBZH44 start : Open case + No case for movieset -->
					<include>ShowcaseOpenCase</include>
					<visible>![Skin.HasSetting(NoCaseForMovieset) + SubString(ListItem.Path,videodb://movies/sets)]</visible>
					<!-- MikeBZH44 end -->
				</control>
				<!-- Front case -->
				<control type="image">
					<include>MovieShowcaseDVDCoverVars</include>
					<texture background="true">thumbs/boxes/$VAR[ShowcaseCasePathVar]/$VAR[GlobalCaseVar]</texture>
					<!-- MikeBZH44 start : Open case + No case for movieset -->
					<include>ShowcaseOpenCase</include>
					<visible>![Skin.HasSetting(NoCaseForMovieset) + SubString(ListItem.Path,videodb://movies/sets)]</visible>
					<!-- MikeBZH44 end -->
				</control>
				<control type="image">
					<include>WatchedOverlayShowCase</include>
					<include>OverlayVisibility0</include>
					<!-- MikeBZH44 start : Open case + No case for movieset -->
					<include>ShowcaseOpenCaseWatched</include>
					<visible>![Skin.HasSetting(NoCaseForMovieset) + SubString(ListItem.Path,videodb://movies/sets)]</visible>
					<!-- MikeBZH44 end -->
				</control>
				<control type="image">
					<include>WatchedOverlayShowCase</include>
					<include>ShowcaseOpenCaseWatched</include>
					<texture>overlayprogress.png</texture>
					<visible>Container.ListItem.IsResumable + Skin.HasSetting(InProgressFlag)</visible>
				</control>
				<control type="image">
					<include>WatchedOverlayShowCase</include>
					<include>ShowcaseOpenCaseWatched</include>
					<texture background="true" diffuse="thumbs/ExtraOverlayWatched.png">$VAR[VideoextrasOverlay]</texture>
				</control>
			</control>
		</focusedlayout>
		<itemlayout height="600" width="100" condition="![Control.IsVisible(961) + !Control.IsVisible(6000)] + !Skin.HasSetting(showcasezoom)"/>
		<focusedlayout height="525" width="858" condition="![Control.IsVisible(961) + !Control.IsVisible(6000)] + !Skin.HasSetting(showcasezoom)"/>
		<itemlayout height="600" width="200" condition="![Control.IsVisible(961) + !Control.IsVisible(6000)] + Skin.HasSetting(showcasezoom)"/>
		<focusedlayout height="525" width="858" condition="![Control.IsVisible(961) + !Control.IsVisible(6000)] + Skin.HasSetting(showcasezoom)"/>
	</include>
	<include name="scmfixed">
		<control type="fixedlist" id="501">
			<include>contents501list</include>
		</control>
	</include>
	<include name="scmwrap">
		<control type="wraplist" id="501">
			<include>contents501list</include>
		</control>
	</include>
	<include name="Showcase">
		<control type="group">
			<visible>Control.IsVisible(501)</visible>
			<animation effect="zoom" start="100" end="195" time="640" easing="inout" tween="circle" center="960,970" condition="Skin.HasSetting(showcasezoom)">Conditional</animation>
			<animation effect="slide" tween="cubic" time="720" start="0,806" end="0,0">VisibleChange</animation>
			<control type="group">
				<camera x="960" y="810"/>
				<control type="group" id="6001">
					<left>55</left>
					<top>570</top>
					<visible>Container.OnNext + !Control.IsVisible(961)</visible>
					<animation effect="slide" end="-135,0" time="200" reversible="false">Hidden</animation>
					<control type="group">
						<left>15</left>
						<visible>!IsEmpty(Container(501).ListItemNoWrap(-7).FolderPath) | Skin.HasSetting(showcasewrap)</visible>
						<visible>Container.OnNext</visible>
						<animation effect="fade" start="100" end="0" time="200" reversible="false">Hidden</animation>
						<animation effect="rotatey" center="-135" start="-55" end="-55" time="0" condition="true">Conditional</animation>
						<include>MovieShowCaseItem-7</include>
					</control>
					<control type="group">
						<left>150</left>
						<visible>!IsEmpty(Container(501).ListItemNoWrap(-6).FolderPath) | Skin.HasSetting(showcasewrap)</visible>
						<animation effect="rotatey" center="0" start="-55" end="-55" time="0" condition="true">Conditional</animation>
						<include>MovieShowCaseItem-6</include>
					</control>
					<control type="group">
						<left>285</left>
						<visible>!IsEmpty(Container(501).ListItemNoWrap(-5).FolderPath) | Skin.HasSetting(showcasewrap)</visible>
						<animation effect="rotatey" center="135" start="-55" end="-55" time="0" condition="true">Conditional</animation>
						<include>MovieShowCaseItem-5</include>
					</control>
					<control type="group">
						<left>420</left>
						<visible>!IsEmpty(Container(501).ListItemNoWrap(-4).FolderPath) | Skin.HasSetting(showcasewrap)</visible>
						<animation effect="rotatey" center="270" start="-55" end="-55" time="0" condition="true">Conditional</animation>
						<include>MovieShowCaseItem-4</include>
					</control>
					<control type="group">
						<left>555</left>
						<visible>!IsEmpty(Container(501).ListItemNoWrap(-3).FolderPath) | Skin.HasSetting(showcasewrap)</visible>
						<animation effect="rotatey" center="405" start="-55" end="-55" time="0" condition="true">Conditional</animation>
						<include>MovieShowCaseItem-3</include>
					</control>
					<control type="group">
						<left>690</left>
						<visible>!IsEmpty(Container(501).ListItemNoWrap(-2).FolderPath) | Skin.HasSetting(showcasewrap)</visible>
						<animation effect="rotatey" center="540" start="-55" end="-55" time="0" condition="true">Conditional</animation>
						<include>MovieShowCaseItem-2</include>
					</control>
					<control type="group">
						<left>1635</left>
						<visible>!IsEmpty(Container(501).ListItemNoWrap(6).FolderPath) | Skin.HasSetting(showcasewrap)</visible>
						<visible>!Container.OnNext</visible>
						<animation effect="fade" end="100" time="200" reversible="false">Visible</animation>
						<animation effect="rotatey" center="2100" start="55" end="55" time="0" condition="true">Conditional</animation>
						<include>MovieShowCaseItem6</include>
					</control>
					<control type="group">
						<left>1500</left>
						<visible>!IsEmpty(Container(501).ListItemNoWrap(5).FolderPath) | Skin.HasSetting(showcasewrap)</visible>
						<animation effect="rotatey" center="1965" start="55" end="55" time="0" condition="true">Conditional</animation>
						<include>MovieShowCaseItem5</include>
					</control>
					<control type="group">
						<left>1365</left>
						<visible>!IsEmpty(Container(501).ListItemNoWrap(4).FolderPath) | Skin.HasSetting(showcasewrap)</visible>
						<animation effect="rotatey" center="1830" start="55" end="55" time="0" condition="true">Conditional</animation>
						<include>MovieShowCaseItem4</include>
					</control>
					<control type="group">
						<left>1230</left>
						<visible>!IsEmpty(Container(501).ListItemNoWrap(3).FolderPath) | Skin.HasSetting(showcasewrap)</visible>
						<animation effect="rotatey" center="1695" start="55" end="55" time="0" condition="true">Conditional</animation>
						<include>MovieShowCaseItem3</include>
					</control>
					<control type="group">
						<left>1095</left>
						<visible>!IsEmpty(Container(501).ListItemNoWrap(2).FolderPath) | Skin.HasSetting(showcasewrap)</visible>
						<animation effect="rotatey" center="1560" start="55" end="55" time="0" condition="true">Conditional</animation>
						<include>MovieShowCaseItem2</include>
					</control>
					<control type="group">
						<left>960</left>
						<visible>!IsEmpty(Container(501).ListItemNoWrap(1).FolderPath) | Skin.HasSetting(showcasewrap)</visible>
						<animation effect="rotatey" center="1425" start="55" end="55" time="0" condition="true">Conditional</animation>
						<include>MovieShowCaseItem1</include>
					</control>
					<control type="group">
						<visible>Container.OnNext</visible>
						<animation effect="slide" end="75,0" time="200" reversible="false">Hidden</animation>
						<control type="group">
							<left>825</left>
							<visible>Container.OnNext</visible>
							<visible>!IsEmpty(Container(501).ListItemNoWrap(0).FolderPath) | Skin.HasSetting(showcasewrap)</visible>
							<animation effect="rotatey" center="1290" end="-55" time="200" reversible="false" tween="quadratic" easing="in">Hidden</animation>
							<animation effect="rotatey" center="1290" start="55" end="55" time="0" condition="true">Conditional</animation>
							<include>MovieShowCaseItem0</include>
						</control>
						<control type="group">
							<left>758</left>
							<visible>!IsEmpty(Container(501).ListItemNoWrap(-1).FolderPath) | Skin.HasSetting(showcasewrap)</visible>
							<visible>Container.OnNext</visible>
							<animation effect="rotatey" center="608" end="-55" time="200" reversible="false" tween="quadratic">Hidden</animation>
							<include>MovieShowCaseItem-1</include>
						</control>
					</control>
				</control>
				<control type="group" id="6002">
					<left>55</left>
					<top>570</top>
					<visible>Container.OnPrevious + !Control.IsVisible(961)</visible>
					<animation effect="slide" end="135,0" time="200" reversible="false">Hidden</animation>
					<control type="group">
						<left>1500</left>
						<visible>!IsEmpty(Container(501).ListItemNoWrap(7).FolderPath) | Skin.HasSetting(showcasewrap)</visible>
						<visible>Container.OnPrevious</visible>
						<animation effect="fade" start="100" end="0" time="200" reversible="false">Hidden</animation>
						<animation effect="rotatey" center="1965" start="55" end="55" time="0" condition="true">Conditional</animation>
						<include>MovieShowCaseItem7</include>
					</control>
					<control type="group">
						<left>1365</left>
						<visible>!IsEmpty(Container(501).ListItemNoWrap(6).FolderPath) | Skin.HasSetting(showcasewrap)</visible>
						<animation effect="rotatey" center="1830" start="55" end="55" time="0" condition="true">Conditional</animation>
						<include>MovieShowCaseItem6</include>
					</control>
					<control type="group">
						<left>1230</left>
						<visible>!IsEmpty(Container(501).ListItemNoWrap(5).FolderPath) | Skin.HasSetting(showcasewrap)</visible>
						<animation effect="rotatey" center="1695" start="55" end="55" time="0" condition="true">Conditional</animation>
						<include>MovieShowCaseItem5</include>
					</control>
					<control type="group">
						<left>1095</left>
						<visible>!IsEmpty(Container(501).ListItemNoWrap(4).FolderPath) | Skin.HasSetting(showcasewrap)</visible>
						<animation effect="rotatey" center="1560" start="55" end="55" time="0" condition="true">Conditional</animation>
						<include>MovieShowCaseItem4</include>
					</control>
					<control type="group">
						<left>960</left>
						<visible>!IsEmpty(Container(501).ListItemNoWrap(3).FolderPath) | Skin.HasSetting(showcasewrap)</visible>
						<animation effect="rotatey" center="1425" start="55" end="55" time="0" condition="true">Conditional</animation>
						<include>MovieShowCaseItem3</include>
					</control>
					<control type="group">
						<left>825</left>
						<visible>!IsEmpty(Container(501).ListItemNoWrap(2).FolderPath) | Skin.HasSetting(showcasewrap)</visible>
						<animation effect="rotatey" center="1290" start="55" end="55" time="0" condition="true">Conditional</animation>
						<include>MovieShowCaseItem2</include>
					</control>
					<control type="group">
						<left>-120</left>
						<visible>!IsEmpty(Container(501).ListItemNoWrap(-6).FolderPath) | Skin.HasSetting(showcasewrap)</visible>
						<visible>!Container.OnPrevious</visible>
						<animation effect="fade" end="100" time="200" reversible="false">Visible</animation>
						<animation effect="rotatey" center="-270" start="-55" end="-55" time="0" condition="true">Conditional</animation>
						<include>MovieShowCaseItem-6</include>
					</control>
					<control type="group">
						<left>15</left>
						<visible>!IsEmpty(Container(501).ListItemNoWrap(-5).FolderPath) | Skin.HasSetting(showcasewrap)</visible>
						<animation effect="rotatey" center="-135" start="-55" end="-55" time="0" condition="true">Conditional</animation>
						<include>MovieShowCaseItem-5</include>
					</control>
					<control type="group">
						<left>150</left>
						<visible>!IsEmpty(Container(501).ListItemNoWrap(-4).FolderPath) | Skin.HasSetting(showcasewrap)</visible>
						<animation effect="rotatey" center="0" start="-55" end="-55" time="0" condition="true">Conditional</animation>
						<include>MovieShowCaseItem-4</include>
					</control>
					<control type="group">
						<left>285</left>
						<visible>!IsEmpty(Container(501).ListItemNoWrap(-3).FolderPath) | Skin.HasSetting(showcasewrap)</visible>
						<animation effect="rotatey" center="135" start="-55" end="-55" time="0" condition="true">Conditional</animation>
						<include>MovieShowCaseItem-3</include>
					</control>
					<control type="group">
						<left>420</left>
						<visible>!IsEmpty(Container(501).ListItemNoWrap(-2).FolderPath) | Skin.HasSetting(showcasewrap)</visible>
						<animation effect="rotatey" center="270" start="-55" end="-55" time="0" condition="true">Conditional</animation>
						<include>MovieShowCaseItem-2</include>
					</control>
					<control type="group">
						<left>555</left>
						<visible>!IsEmpty(Container(501).ListItemNoWrap(-1).FolderPath) | Skin.HasSetting(showcasewrap)</visible>
						<animation effect="rotatey" center="405" start="-55" end="-55" time="0" condition="true">Conditional</animation>
						<include>MovieShowCaseItem-1</include>
					</control>
					<control type="group">
						<visible>Container.OnPrevious</visible>
						<animation effect="slide" end="-75,0" time="200" reversible="false">Hidden</animation>
						<control type="group">
							<left>690</left>
							<visible>Container.OnPrevious</visible>
							<visible>!IsEmpty(Container(501).ListItemNoWrap(0).FolderPath) | Skin.HasSetting(showcasewrap)</visible>
							<animation effect="rotatey" center="540" end="55" time="200" reversible="false" tween="quadratic" easing="in">Hidden</animation>
							<animation effect="rotatey" center="540" start="-55" end="-55" time="0" condition="true">Conditional</animation>
							<include>MovieShowCaseItem0</include>
						</control>
						<control type="group">
							<left>758</left>
							<visible>!IsEmpty(Container(501).ListItemNoWrap(1).FolderPath) | Skin.HasSetting(showcasewrap)</visible>
							<visible>Container.OnPrevious</visible>
							<animation effect="rotatey" center="1223" end="55" time="200" reversible="false" tween="quadratic">Hidden</animation>
							<include>MovieShowCaseItem1</include>
						</control>
					</control>
				</control>
				<control type="button" id="960">
					<texturefocus>-</texturefocus>
					<texturenofocus>-</texturenofocus>
					<visible>!Control.IsVisible(961)</visible>
					<animation effect="fade" start="100" end="0" time="640">Hidden</animation>
				</control>
				<control type="button" id="961">
					<texturefocus>-</texturefocus>
					<texturenofocus>-</texturenofocus>
					<visible>[Skin.HasSetting(noflow) + ![Container.Content(tvshows) | Container.Content(seasons) | Container.Content(episodes)]] | [Skin.HasSetting(noflowtv) + [Container.Content(tvshows) | Container.Content(seasons) | Container.Content(episodes)]]</visible>
				</control>
				<control type="group" id="6000">
					<left>55</left>
					<top>570</top>
					<animation type="WindowOpen" reversible="false">
						<effect type="zoom" start="150" end="100" center="960,540" time="240" tween="cubic"/>
						<effect type="fade" end="100" time="240"/>
					</animation>
					<animation type="WindowClose" reversible="false">
						<effect type="zoom" start="100" end="130" center="960,540" time="240" tween="cubic" easing="in"/>
						<effect type="fade" start="100" end="0" time="240" delay="240"/>
					</animation>
					<visible>!Control.IsVisible(6001) + !Control.IsVisible(6002) + Control.IsVisible(960)</visible>
					<control type="group">
						<left>15</left>
						<visible>!IsEmpty(Container(501).ListItemNoWrap(-6).FolderPath) | Skin.HasSetting(showcasewrap)</visible>
						<animation effect="slide" time="240" end="818" tween="cubic" easing="in">WindowClose</animation>
						<animation effect="slide" time="640" delay="240" end="0" start="818" tween="cubic">WindowOpen</animation>
						<animation effect="rotatey" center="-135" start="-55" end="-55" time="0" condition="true">Conditional</animation>
						<animation type="Conditional" condition="Control.IsVisible(961)">
							<effect type="rotatey" center="-135" end="55" time="640" tween="cubic" easing="inout"/>
							<effect type="slide" end="-1028" time="640" tween="cubic" easing="inout"/>
						</animation>
						<include>MovieShowCaseItem-6</include>
					</control>
					<control type="group">
						<left>150</left>
						<visible>!IsEmpty(Container(501).ListItemNoWrap(-5).FolderPath) | Skin.HasSetting(showcasewrap)</visible>
						<animation effect="slide" time="240" end="682" tween="cubic" easing="in">WindowClose</animation>
						<animation effect="slide" time="640" delay="240" end="0" start="682" tween="cubic">WindowOpen</animation>
						<animation effect="rotatey" center="0" start="-55" end="-55" time="0" condition="true">Conditional</animation>
						<animation type="Conditional" condition="Control.IsVisible(961)">
							<effect type="rotatey" center="0" end="55" time="640" tween="cubic" easing="inout"/>
							<effect type="slide" end="-866" time="640" tween="cubic" easing="inout"/>
						</animation>
						<include>MovieShowCaseItem-5</include>
					</control>
					<control type="group">
						<left>285</left>
						<visible>!IsEmpty(Container(501).ListItemNoWrap(-4).FolderPath) | Skin.HasSetting(showcasewrap)</visible>
						<animation effect="slide" time="240" end="548" tween="cubic" easing="in">WindowClose</animation>
						<animation effect="slide" time="640" delay="240" end="0" start="548" tween="cubic">WindowOpen</animation>
						<animation effect="rotatey" center="135" start="-55" end="-55" time="0" condition="true">Conditional</animation>
						<animation type="Conditional" condition="Control.IsVisible(961)">
							<effect type="rotatey" center="135" end="55" time="640" tween="cubic" easing="inout"/>
							<effect type="slide" end="-704" time="640" tween="cubic" easing="inout"/>
						</animation>
						<include>MovieShowCaseItem-4</include>
					</control>
					<control type="group">
						<left>420</left>
						<visible>!IsEmpty(Container(501).ListItemNoWrap(-3).FolderPath) | Skin.HasSetting(showcasewrap)</visible>
						<animation effect="slide" time="240" end="412" tween="cubic" easing="in">WindowClose</animation>
						<animation effect="slide" time="640" delay="240" end="0" start="412" tween="cubic">WindowOpen</animation>
						<animation effect="rotatey" center="270" start="-55" end="-55" time="0" condition="true">Conditional</animation>
						<animation type="Conditional" condition="Control.IsVisible(961)">
							<effect type="rotatey" center="270" end="55" time="640" tween="cubic" easing="inout"/>
							<effect type="slide" end="-543" time="640" tween="cubic" easing="inout"/>
						</animation>
						<include>MovieShowCaseItem-3</include>
					</control>
					<control type="group">
						<left>555</left>
						<visible>!IsEmpty(Container(501).ListItemNoWrap(-2).FolderPath) | Skin.HasSetting(showcasewrap)</visible>
						<animation effect="slide" time="240" end="278" tween="cubic" easing="in">WindowClose</animation>
						<animation effect="slide" time="640" delay="240" end="0" start="278" tween="cubic">WindowOpen</animation>
						<animation effect="rotatey" center="405" start="-55" end="-55" time="0" condition="true">Conditional</animation>
						<animation type="Conditional" condition="Control.IsVisible(961)">
							<effect type="rotatey" center="405" end="55" time="640" tween="cubic" easing="inout"/>
							<effect type="slide" end="-384" time="640" tween="cubic" easing="inout"/>
						</animation>
						<include>MovieShowCaseItem-2</include>
					</control>
					<control type="group">
						<left>690</left>
						<visible>!IsEmpty(Container(501).ListItemNoWrap(-1).FolderPath) | Skin.HasSetting(showcasewrap)</visible>
						<animation effect="slide" time="240" end="142" tween="cubic" easing="in">WindowClose</animation>
						<animation effect="slide" time="640" delay="240" end="0" start="142" tween="cubic">WindowOpen</animation>
						<animation effect="rotatey" center="540" start="-55" end="-55" time="0" condition="true">Conditional</animation>
						<animation type="Conditional" condition="Control.IsVisible(961)">
							<effect type="rotatey" center="540" end="55" time="640" tween="cubic" easing="inout"/>
							<effect type="slide" end="-226" time="640" tween="cubic" easing="inout"/>
						</animation>
						<include>MovieShowCaseItem-1</include>
					</control>
					<control type="group">
						<left>1500</left>
						<visible>!IsEmpty(Container(501).ListItemNoWrap(6).FolderPath) | Skin.HasSetting(showcasewrap)</visible>
						<animation effect="slide" time="240" end="-818" tween="cubic" easing="in">WindowClose</animation>
						<animation effect="slide" time="640" delay="240" end="0" start="-818" tween="cubic">WindowOpen</animation>
						<animation effect="rotatey" center="1965" start="55" end="55" time="0" condition="true">Conditional</animation>
						<animation type="Conditional" condition="Control.IsVisible(961)">
							<effect type="rotatey" center="1965" end="-55" time="640" tween="cubic" easing="inout"/>
							<effect type="slide" end="1028" time="640" tween="cubic" easing="inout"/>
						</animation>
						<include>MovieShowCaseItem6</include>
					</control>
					<control type="group">
						<left>1365</left>
						<visible>!IsEmpty(Container(501).ListItemNoWrap(5).FolderPath) | Skin.HasSetting(showcasewrap)</visible>
						<animation effect="slide" time="240" end="-682" tween="cubic" easing="in">WindowClose</animation>
						<animation effect="slide" time="640" delay="240" end="0" start="-682" tween="cubic">WindowOpen</animation>
						<animation effect="rotatey" center="1830" start="55" end="55" time="0" condition="true">Conditional</animation>
						<animation type="Conditional" condition="Control.IsVisible(961)">
							<effect type="rotatey" center="1830" end="-55" time="640" tween="cubic" easing="inout"/>
							<effect type="slide" end="866" time="640" tween="cubic" easing="inout"/>
						</animation>
						<include>MovieShowCaseItem5</include>
					</control>
					<control type="group">
						<left>1230</left>
						<visible>!IsEmpty(Container(501).ListItemNoWrap(4).FolderPath) | Skin.HasSetting(showcasewrap)</visible>
						<animation effect="slide" time="240" end="-548" tween="cubic" easing="in">WindowClose</animation>
						<animation effect="slide" time="640" delay="240" end="0" start="-548" tween="cubic">WindowOpen</animation>
						<animation effect="rotatey" center="1695" start="55" end="55" time="0" condition="true">Conditional</animation>
						<animation type="Conditional" condition="Control.IsVisible(961)">
							<effect type="rotatey" center="1695" end="-55" time="640" tween="cubic" easing="inout"/>
							<effect type="slide" end="704" time="640" tween="cubic" easing="inout"/>
						</animation>
						<include>MovieShowCaseItem4</include>
					</control>
					<control type="group">
						<left>1095</left>
						<visible>!IsEmpty(Container(501).ListItemNoWrap(3).FolderPath) | Skin.HasSetting(showcasewrap)</visible>
						<animation effect="slide" time="240" end="-412" tween="cubic" easing="in">WindowClose</animation>
						<animation effect="slide" time="640" delay="240" end="0" start="-412" tween="cubic">WindowOpen</animation>
						<animation effect="rotatey" center="1560" start="55" end="55" time="0" condition="true">Conditional</animation>
						<animation type="Conditional" condition="Control.IsVisible(961)">
							<effect type="rotatey" center="1560" end="-55" time="640" tween="cubic" easing="inout"/>
							<effect type="slide" end="543" time="640" tween="cubic" easing="inout"/>
						</animation>
						<include>MovieShowCaseItem3</include>
					</control>
					<control type="group">
						<left>960</left>
						<visible>!IsEmpty(Container(501).ListItemNoWrap(2).FolderPath) | Skin.HasSetting(showcasewrap)</visible>
						<animation effect="slide" time="240" end="-278" tween="cubic" easing="in">WindowClose</animation>
						<animation effect="slide" time="640" delay="240" end="0" start="-278" tween="cubic">WindowOpen</animation>
						<animation effect="rotatey" center="1425" start="55" end="55" time="0" condition="true">Conditional</animation>
						<animation type="Conditional" condition="Control.IsVisible(961)">
							<effect type="rotatey" center="1425" end="-55" time="640" tween="cubic" easing="inout"/>
							<effect type="slide" end="384" time="640" tween="cubic" easing="inout"/>
						</animation>
						<include>MovieShowCaseItem2</include>
					</control>
					<control type="group">
						<left>825</left>
						<visible>!IsEmpty(Container(501).ListItemNoWrap(1).FolderPath) | Skin.HasSetting(showcasewrap)</visible>
						<animation effect="slide" time="240" end="-142" tween="cubic" easing="in">WindowClose</animation>
						<animation effect="slide" time="640" delay="240" end="0" start="-142" tween="cubic">WindowOpen</animation>
						<animation effect="rotatey" center="1290" start="55" end="55" time="0" condition="true">Conditional</animation>
						<animation type="Conditional" condition="Control.IsVisible(961)">
							<effect type="rotatey" center="1290" end="-55" time="640" tween="cubic" easing="inout"/>
							<effect type="slide" end="226" time="640" tween="cubic" easing="inout"/>
						</animation>
						<include>MovieShowCaseItem1</include>
					</control>
					<control type="group">
						<left>758</left>
						<control type="group">
							<visible>!IsEmpty(Container(501).ListItemNoWrap(0).FolderPath) | Skin.HasSetting(showcasewrap)</visible>
							<include>MovieShowCaseGlow</include>
							<!-- MikeBZH44 start : Display background case -->
							<!-- Case background -->
							<control type="image">
								<include>MovieShowcaseDVDCoverVars</include>
								<texture background="true" fallback="thumbs/boxes/default_case.png">thumbs/boxes/$VAR[ShowcaseCasePathVar]/back_$VAR[ShowcaseCase0Var]</texture>
								<visible>Skin.HasSetting(usecases) + [Container.Content(movies) | Container.Content(sets)] + ![Skin.HasSetting(NoCaseForMovieset) + SubString(ListItem.Path,videodb://movies/sets)]</visible>
							</control>
							<!-- Display Movie disc -->
							<include>MovieShowcaseDisc</include>
							<!-- MikeBZH44 end -->
							<!-- Movie thumbnail -->
							<control type="image">
								<include>MovieShowcaseThumb</include>
								<texture background="true" diffuse="thumbs/thumb_mask.png" fallback="thumbs/fallback_poster_tp_solid.jpg">$VAR[ShowcaseItem0Var]</texture>
								<!-- MikeBZH44 start : Open case + No case for movieset -->
								<include>ShowcaseOpenCase</include>
								<visible>![Skin.HasSetting(NoCaseForMovieset) + SubString(ListItem.Path,videodb://movies/sets)] | [!Skin.HasSetting(usecases)]</visible>
								<visible>!Skin.HasSetting(genrethumbs)</visible>
								<!-- MikeBZH44 end -->
							</control>
							<control type="image">
								<include>MovieShowcaseThumb</include>
								<texture background="true" diffuse="thumbs/thumb_mask.png" fallback="thumbs/fallback_poster_tp_solid.jpg">$VAR[ShowcaseItem0Var1]</texture>
								<!-- MikeBZH44 start : Open case + No case for movieset -->
								<include>ShowcaseOpenCase</include>
								<visible>![Skin.HasSetting(NoCaseForMovieset) + SubString(ListItem.Path,videodb://movies/sets)] | [!Skin.HasSetting(usecases)]</visible>
								<visible>Skin.HasSetting(genrethumbs)</visible>
								<!-- MikeBZH44 end -->
							</control>
							<control type="image">
								<include>MovieShowcaseThumb</include>
								<texture background="true" diffuse="thumbs/thumb_mask.png" fallback="thumbs/fallback_poster_tp_solid.jpg">$VAR[ShowcaseItem0Var]</texture>
								<visible>Container.Content(sets) + Skin.HasSetting(NoCaseForMovieset)</visible>
								<visible>!Skin.HasSetting(genrethumbs)</visible>
							</control>
							<control type="image">
								<include>MovieShowcaseThumb</include>
								<texture background="true" diffuse="thumbs/thumb_mask.png" fallback="thumbs/fallback_poster_tp_solid.jpg">$VAR[ShowcaseItem0Var1]</texture>
								<visible>Container.Content(sets) + Skin.HasSetting(NoCaseForMovieset)</visible>
								<visible>Skin.HasSetting(genrethumbs)</visible>
							</control>
							<!-- MikeBZH44 start : If no case for movieset then larger thumbnail -->
							<control type="image">
								<include>MovieShowcaseDVDCoverVarsSets</include>
								<texture background="true" fallback="thumbs/fallback_poster_tp_solid.jpg">$VAR[ShowcaseItem0Var]</texture>
								<visible>[Skin.HasSetting(usecases) + Container.Content(movies) + Skin.HasSetting(NoCaseForMovieset) + SubString(ListItem.Path,videodb://movies/sets)] + !Skin.HasSetting(OpenBoxSet)</visible>
								<visible>!Skin.HasSetting(genrethumbs)</visible>
							</control>
							<control type="image">
								<include>MovieShowcaseDVDCoverVarsSets</include>
								<texture background="true" fallback="thumbs/fallback_poster_tp_solid.jpg">$VAR[ShowcaseItem0Var1]</texture>
								<visible>[Skin.HasSetting(usecases) + Container.Content(movies) + Skin.HasSetting(NoCaseForMovieset) + SubString(ListItem.Path,videodb://movies/sets)] + !Skin.HasSetting(OpenBoxSet)</visible>
								<visible>Skin.HasSetting(genrethumbs)</visible>
							</control>
							<!-- MikeBZH44 end -->
							<include>Boxset_warlion</include>
							<!-- Movie Showcase Variables: Thumb glass overlays -->
							<control type="image">
								<include>MovieShowcaseThumbDimensions</include>
								<texture diffuse="thumbs/thumb_mask.png">thumbs/thumb_glass.png</texture>
								<include>ShowcaseOpenCase</include>
								<visible>![Skin.HasSetting(NoCaseForMovieset) + SubString(ListItem.Path,videodb://movies/sets)]</visible>
							</control>
							<!-- Front case -->
							<control type="image">
								<include>MovieShowcaseDVDCoverVars</include>
								<texture background="true">thumbs/boxes/$VAR[ShowcaseCasePathVar]/$VAR[ShowcaseCase0Var]</texture>
								<!-- MikeBZH44 start : Open case + No case for movieset -->
								<include>ShowcaseOpenCase</include>
								<visible>![Skin.HasSetting(NoCaseForMovieset) + SubString(ListItem.Path,videodb://movies/sets)]</visible>
								<!-- MikeBZH44 end -->
							</control>
							<!-- Movie thumbnail reflection -->
							<control type="image">
								<include>MovieShowcaseThumbReflectionMain</include>
								<texture background="true" flipy="true" diffuse="thumbs/movieposter_mask_reflect.png" fallback="thumbs/fallback_poster_tp_solid.jpg">$VAR[ShowcaseItem0Var]</texture>
								<!-- MikeBZH44 start : Open case + No case for movieset -->
								<include>ShowcaseOpenCase</include>
								<visible>![Skin.HasSetting(NoCaseForMovieset) + SubString(ListItem.Path,videodb://movies/sets)]</visible>
								<visible>!Skin.HasSetting(genrethumbs)</visible>
								<!-- MikeBZH44 end -->
							</control>
							<control type="image">
								<include>MovieShowcaseThumbReflectionMain</include>
								<texture background="true" flipy="true" diffuse="thumbs/movieposter_mask_reflect.png" fallback="thumbs/fallback_poster_tp_solid.jpg">$VAR[ShowcaseItem0Var1]</texture>
								<!-- MikeBZH44 start : Open case + No case for movieset -->
								<include>ShowcaseOpenCase</include>
								<visible>![Skin.HasSetting(NoCaseForMovieset) + SubString(ListItem.Path,videodb://movies/sets)]</visible>
								<visible>Skin.HasSetting(genrethumbs)</visible>
								<!-- MikeBZH44 end -->
							</control>
							<control type="image">
								<texture background="true">wall/boxes/wall_movie_overlay.png</texture>
								<include>TvShowShowcaseThumb</include>
							</control>
							<!-- MikeBZH44 end -->
							<control type="image">
								<include>MovieShowcaseThumbReflectionDVD</include>
								<!-- MikeBZH44 start : Open case + No case for movieset -->
								<include>ShowcaseOpenCase</include>
								<visible>![Skin.HasSetting(NoCaseForMovieset) + SubString(ListItem.Path,videodb://movies/sets)]</visible>
								<!-- MikeBZH44 end -->
							</control>
							<control type="image">
								<include>WatchedOverlayShowCase</include>
								<include>OverlayVisibility0</include>
								<!-- MikeBZH44 start : Open case + No case for movieset -->
								<include>ShowcaseOpenCaseWatched</include>
								<visible>![Skin.HasSetting(NoCaseForMovieset) + SubString(ListItem.Path,videodb://movies/sets)]</visible>
								<!-- MikeBZH44 end -->
							</control>
							<control type="image">
								<include>WatchedOverlayShowCase</include>
								<include>ShowcaseOpenCaseWatched</include>
								<texture>overlayprogress.png</texture>
								<visible>Container.ListItem(0).IsResumable + Skin.HasSetting(InProgressFlag)</visible>
							</control>
							<control type="image">
								<include>WatchedOverlayShowCase</include>
								<include>ShowcaseOpenCaseWatched</include>
								<texture background="true" diffuse="thumbs/ExtraOverlayWatched.png">$VAR[VideoextrasOverlay]</texture>
							</control>
						</control>
					</control>
				</control>
			</control>
			<include condition="!Skin.HasSetting(showcasewrap)">scmfixed</include>
			<include condition="Skin.HasSetting(showcasewrap)">scmwrap</include>
		</control>
	</include>
	<!-- MikeZBH44 Start remove <control> from <include> -->
	<include name="MovieShowcaseThumbReflectionDVD">
		<left>-27</left>
		<top>397</top>
		<width>300</width>
		<height>180</height>
		<aspectratio scalediffuse="false">scale</aspectratio>
		<texture background="true">thumbs/boxes/poster_glass_reflect.png</texture>
		<fadetime>0</fadetime>
		<colordiffuse>d1FFFFFF</colordiffuse>
		<animation effect="fade" start="70" end="70" time="0" condition="true">Conditional</animation>
		<visible>Skin.HasSetting(usecases) + Skin.HasSetting(clearcases) + [container.content(movies) | Container.Content(musicvideos)]</visible>
	</include>
	<include name="TvShowShowcaseThumb">
		<left>-12</left>
		<top>-15</top>
		<width>320</width>
		<height>440</height>
		<align>center</align>
		<fadetime>0</fadetime>
		<bordertexture border="18">thumbs/poster_shadow.png</bordertexture>
		<bordersize>18</bordersize>
		<visible>Skin.HasSetting(ClearCaseTvshow) + [Container.Content(TvShows) | Container.Content(seasons)]</visible>
	</include>
	<!-- MikeZBH44 End -->
	<include name="MovieShowcaseDVDCoverVars">
		<left>-28</left>
		<top>-22</top>
		<width>324</width>
		<height>437</height>
		<fadetime>0</fadetime>
		<visible>Skin.HasSetting(usecases) + [container.content(sets) | container.content(movies) | Container.Content(musicvideos)]</visible>
	</include>
	<include name="MovieShowcaseDVDCoverVarsSets">
		<left>-16</left>
		<top>-22</top>
		<width>324</width>
		<height>437</height>
		<fadetime>0</fadetime>
		<!-- <visible>Skin.HasSetting(usecases) + [container.content(sets) | container.content(movies) | Container.Content(musicvideos)]</visible> -->
	</include>
	<!-- Movie Showcase Variables: Main thumbs -->
	<include name="MovieShowcaseThumbDimensions">
		<left>17</left>
		<top>10</top>
		<width>262</width>
		<height>384</height>
	</include>
	<include name="MovieShowcaseThumbReflectionDimensions">
		<left>19</left>
		<top>397</top>
		<width>262</width>
		<height>304</height>
		<animation effect="slide" start="0,00" end="0,2" time="0" condition="Skin.HasSetting(usecases) + [container.content(movies) | Container.Content(musicvideos)]">Conditional</animation>
		<animation effect="slide" start="0,00" end="0,7" time="0" condition="Skin.HasSetting(usecases) + !Skin.HasSetting(clearcases) + [container.content(movies) | Container.Content(musicvideos)]">Conditional</animation>
	</include>
	<include name="MovieShowCaseGlow">
		<control type="image">
			<left>-12</left>
			<top>-25</top>
			<width>320</width>
			<height>454</height>
			<align>center</align>
			<texture background="true">thumbs/thumb_glass_shadow.png</texture>
			<bordersize>18</bordersize>
			<include>Animation_VisibleChange400</include>
			<include>PanelGlowFade</include>
			<visible>![Skin.HasSetting(usecases) + [container.content(movies) | Container.Content(musicvideos)]]</visible>
			<visible>Skin.HasSetting(ExtendedGlowMode) + !Skin.HasSetting(DisableGlowbar)</visible>
			<colordiffuse>$VAR[ColorDiffuseVar]</colordiffuse>
		</control>
	</include>
	<include name="MovieShowcaseThumb">
		<left>-1</left>
		<top>-8</top>
		<width>298</width>
		<height>420</height>
		<align>center</align>
		<!-- MikeBZH44 : scale -> stretch aspect -->
		<aspectratio scalediffuse="false">stretch</aspectratio>
		<fadetime>0</fadetime>
		<bordertexture border="18">thumbs/poster_shadow.png</bordertexture>
		<bordersize>18</bordersize>
	</include>
	<include name="TvShowShowcaseThumb">
		<left>-12</left>
		<top>-15</top>
		<width>320</width>
		<height>440</height>
		<align>center</align>
		<fadetime>0</fadetime>
		<bordertexture border="18">thumbs/poster_shadow.png</bordertexture>
		<bordersize>18</bordersize>
		<visible>Skin.HasSetting(ClearCaseTvshow) + [Container.Content(TvShows) | Container.Content(seasons)]</visible>
	</include>
	<include name="MovieShowcaseThumbReflectionMain">
		<!-- MikeBZH44 : scale -> stretch aspect -->
		<aspectratio scalediffuse="false" aligny="top">stretch</aspectratio>
		<fadetime>0</fadetime>
		<include>MovieShowcaseThumbReflectionDimensions</include>
		<colordiffuse>52FFFFFF</colordiffuse>
	</include>
	<include name="MovieShowcaseThumbReflection">
		<!-- MikeBZH44 : scale -> stretch aspect -->
		<aspectratio scalediffuse="false" aligny="top">stretch</aspectratio>
		<fadetime>0</fadetime>
		<include>MovieShowcaseThumbReflectionDimensions</include>
		<colordiffuse>d1FFFFFF</colordiffuse>
		<animation effect="fade" start="70" end="70" time="0" condition="true">Conditional</animation>
	</include>
	<!-- MikeBZH44 Start : Reflection for movieset without case -->
	<include name="MovieShowcaseThumbReflectionMovieset">
		<left>-27</left>
		<top>397</top>
		<width>325</width>
		<height>180</height>
		<colordiffuse>d1FFFFFF</colordiffuse>
		<fadetime>0</fadetime>
		<animation effect="fade" start="70" end="70" time="0" condition="true">Conditional</animation>
	</include>
	<!-- MikeBZH44 End -->
	<include name="WatchedOverlayShowCase">
		<left>189</left>
		<top>9</top>
		<width>90</width>
		<height>90</height>
		<fadetime>0</fadetime>
		<animation effect="slide" start="0,0" end="6,-3" time="0" condition="Skin.HasSetting(usecases) + [container.content(movies) | Container.Content(sets) | Container.Content(musicvideos)]">Conditional</animation>
		<animation effect="slide" start="0,0" end="-10,11" time="0" condition="[container.content(movies) | Container.Content(sets) | Container.Content(musicvideos)] + Skin.HasSetting(usecases) + !Skin.HasSetting(clearcases)">Conditional</animation>
	</include>
	<!-- Movie Showcase Variables: Thumb glass overlays -->
	<include name="MovieShowcaseGlassOverlay">
		<control type="image">
			<texture diffuse="thumbs/thumb_mask.png">thumbs/thumb_glass.png</texture>
			<include>MovieShowcaseThumbDimensions</include>
			<visible>![Skin.HasSetting(usecases) + [container.content(movies) | Container.Content(musicvideos)]]</visible>
		</control>
	</include>
	<!-- Movie Showcase Items-->
	<include name="MovieShowCaseItem-7">
		<include>MovieShowCaseGlow</include>
		<control type="image">
			<include>MovieShowcaseThumb</include>
			<texture background="true" diffuse="thumbs/thumb_mask.png" fallback="thumbs/fallback_poster_tp_solid.jpg">$VAR[ShowcaseItem-7Var]</texture>
			<!-- MikeBZH44 start : No case for movieset -->
			<visible>![Skin.HasSetting(NoCaseForMovieset) + SubString(ListItem(-7).Path,videodb://movies/sets)] | [!Skin.HasSetting(usecases)]</visible>
			<visible>!Skin.HasSetting(genrethumbs)</visible>
			<!-- MikeBZH44 end -->
		</control>
		<control type="image">
			<include>MovieShowcaseThumb</include>
			<texture background="true" diffuse="thumbs/thumb_mask.png" fallback="thumbs/fallback_poster_tp_solid.jpg">$VAR[ShowcaseItem-7Var1]</texture>
			<!-- MikeBZH44 start : No case for movieset -->
			<visible>![Skin.HasSetting(NoCaseForMovieset) + SubString(ListItem(-7).Path,videodb://movies/sets)] | [!Skin.HasSetting(usecases)]</visible>
			<visible>Skin.HasSetting(genrethumbs)</visible>
			<!-- MikeBZH44 end -->
		</control>
		<control type="image">
			<include>MovieShowcaseThumb</include>
			<texture background="true" diffuse="thumbs/thumb_mask.png" fallback="thumbs/fallback_poster_tp_solid.jpg">$VAR[ShowcaseItem-7Var]</texture>
			<visible>Container.Content(sets) + Skin.HasSetting(NoCaseForMovieset)</visible>
			<visible>!Skin.HasSetting(genrethumbs)</visible>
		</control>
		<control type="image">
			<include>MovieShowcaseThumb</include>
			<texture background="true" diffuse="thumbs/thumb_mask.png" fallback="thumbs/fallback_poster_tp_solid.jpg">$VAR[ShowcaseItem-7Var1]</texture>
			<visible>Container.Content(sets) + Skin.HasSetting(NoCaseForMovieset)</visible>
			<visible>Skin.HasSetting(genrethumbs)</visible>
		</control>
		<!-- MikeBZH44 start : If no case for movieset then larger thumbnail -->
		<control type="image">
			<include>MovieShowcaseDVDCoverVarsSets</include>
			<texture background="true" fallback="thumbs/fallback_poster_tp_solid.jpg">$VAR[ShowcaseItem-7Var]</texture>
			<visible>[Skin.HasSetting(usecases) + Container.Content(movies) + Skin.HasSetting(NoCaseForMovieset) + SubString(ListItem(-7).Path,videodb://movies/sets)]</visible>
			<visible>!Skin.HasSetting(genrethumbs)</visible>
		</control>
		<control type="image">
			<include>MovieShowcaseDVDCoverVarsSets</include>
			<texture background="true" fallback="thumbs/fallback_poster_tp_solid.jpg">$VAR[ShowcaseItem-7Var1]</texture>
			<visible>[Skin.HasSetting(usecases) + Container.Content(movies) + Skin.HasSetting(NoCaseForMovieset) + SubString(ListItem(-7).Path,videodb://movies/sets)]</visible>
			<visible>Skin.HasSetting(genrethumbs)</visible>
		</control>
		<!-- MikeBZH44 end -->
		<control type="image">
			<texture background="true">wall/boxes/wall_movie_overlay.png</texture>
			<include>TvShowShowcaseThumb</include>
		</control>
		<!-- Movie Showcase Variables: Thumb glass overlays -->
		<control type="image">
			<include>MovieShowcaseThumbDimensions</include>
			<texture diffuse="thumbs/thumb_mask.png">thumbs/thumb_glass.png</texture>
			<!-- MikeBZH44 start : No case for movieset -->
			<visible>![Skin.HasSetting(NoCaseForMovieset) + SubString(ListItem(-7).Path,videodb://movies/sets)]</visible>
			<!-- MikeBZH44 end -->
		</control>
		<control type="image">
			<include>MovieShowcaseDVDCoverVars</include>
			<texture background="true">thumbs/boxes/$VAR[ShowcaseCasePathVar]/$VAR[ShowcaseCase-7Var]</texture>
			<!-- MikeBZH44 start : No case for movieset -->
			<visible>![Skin.HasSetting(NoCaseForMovieset) + SubString(ListItem(-7).Path,videodb://movies/sets)]</visible>
			<!-- MikeBZH44 end -->
		</control>
		<control type="image">
			<include>MovieShowcaseThumbReflection</include>
			<texture background="true" flipy="true" diffuse="thumbs/movieposter_mask_reflect.png" fallback="thumbs/fallback_poster_tp_solid.jpg">$VAR[ShowcaseItem-7Var]</texture>
			<!-- MikeBZH44 start : No case for movieset -->
			<visible>![Skin.HasSetting(NoCaseForMovieset) + SubString(ListItem(-7).Path,videodb://movies/sets)]</visible>
			<visible>!Skin.HasSetting(genrethumbs)</visible>
			<!-- MikeBZH44 end -->
		</control>
		<control type="image">
			<include>MovieShowcaseThumbReflection</include>
			<texture background="true" flipy="true" diffuse="thumbs/movieposter_mask_reflect.png" fallback="thumbs/fallback_poster_tp_solid.jpg">$VAR[ShowcaseItem-7Var1]</texture>
			<!-- MikeBZH44 start : No case for movieset -->
			<visible>![Skin.HasSetting(NoCaseForMovieset) + SubString(ListItem(-7).Path,videodb://movies/sets)]</visible>
			<visible>Skin.HasSetting(genrethumbs)</visible>
			<!-- MikeBZH44 end -->
		</control>
		<!-- MikeBZH44 start : If no case for movieset then larger thumbnail -->
		<control type="image">
			<include>MovieShowcaseThumbReflectionMovieset</include>
			<texture background="true" flipy="true" diffuse="thumbs/movieposter_mask_reflect.png" fallback="thumbs/fallback_poster_tp_solid.jpg">$VAR[ShowcaseItem-7Var]</texture>
			<visible>[Skin.HasSetting(usecases) + Container.Content(movies) + Skin.HasSetting(NoCaseForMovieset) + SubString(ListItem(-7).Path,videodb://movies/sets)]</visible>
			<visible>!Skin.HasSetting(genrethumbs)</visible>
		</control>
		<control type="image">
			<include>MovieShowcaseThumbReflectionMovieset</include>
			<texture background="true" flipy="true" diffuse="thumbs/movieposter_mask_reflect.png" fallback="thumbs/fallback_poster_tp_solid.jpg">$VAR[ShowcaseItem-7Var1]</texture>
			<visible>[Skin.HasSetting(usecases) + Container.Content(movies) + Skin.HasSetting(NoCaseForMovieset) + SubString(ListItem(-7).Path,videodb://movies/sets)]</visible>
			<visible>Skin.HasSetting(genrethumbs)</visible>
		</control>
		<!-- MikeBZH44 end -->
		<control type="image">
			<include>MovieShowcaseThumbReflectionDVD</include>
			<!-- MikeBZH44 start : No case for movieset -->
			<visible>![Skin.HasSetting(NoCaseForMovieset) + SubString(ListItem(-7).Path,videodb://movies/sets)]</visible>
			<!-- MikeBZH44 end -->
		</control>
		<control type="image">
			<include>WatchedOverlayShowCase</include>
			<include>OverlayVisibility-7</include>
			<!-- MikeBZH44 start : No case for movieset -->
			<visible>![Skin.HasSetting(NoCaseForMovieset) + SubString(ListItem(-7).Path,videodb://movies/sets)]</visible>
			<!-- MikeBZH44 end -->
		</control>
	</include>
	<include name="MovieShowCaseItem-6">
		<include>MovieShowCaseGlow</include>
		<control type="image">
			<include>MovieShowcaseThumb</include>
			<texture background="true" diffuse="thumbs/thumb_mask.png" fallback="thumbs/fallback_poster_tp_solid.jpg">$VAR[ShowcaseItem-6Var]</texture>
			<!-- MikeBZH44 start : No case for movieset -->
			<visible>![Skin.HasSetting(NoCaseForMovieset) + SubString(ListItem(-6).Path,videodb://movies/sets)] | [!Skin.HasSetting(usecases)]</visible>
			<visible>!Skin.HasSetting(genrethumbs)</visible>
			<!-- MikeBZH44 end -->
		</control>
		<control type="image">
			<include>MovieShowcaseThumb</include>
			<texture background="true" diffuse="thumbs/thumb_mask.png" fallback="thumbs/fallback_poster_tp_solid.jpg">$VAR[ShowcaseItem-6Var1]</texture>
			<!-- MikeBZH44 start : No case for movieset -->
			<visible>![Skin.HasSetting(NoCaseForMovieset) + SubString(ListItem(-6).Path,videodb://movies/sets)] | [!Skin.HasSetting(usecases)]</visible>
			<visible>Skin.HasSetting(genrethumbs)</visible>
			<!-- MikeBZH44 end -->
		</control>
		<control type="image">
			<texture background="true">wall/boxes/wall_movie_overlay.png</texture>
			<include>TvShowShowcaseThumb</include>
		</control>
		<control type="image">
			<include>MovieShowcaseThumb</include>
			<texture background="true" diffuse="thumbs/thumb_mask.png" fallback="thumbs/fallback_poster_tp_solid.jpg">$VAR[ShowcaseItem-6Var]</texture>
			<visible>Container.Content(sets) + Skin.HasSetting(NoCaseForMovieset)</visible>
			<visible>!Skin.HasSetting(genrethumbs)</visible>
		</control>
		<control type="image">
			<include>MovieShowcaseThumb</include>
			<texture background="true" diffuse="thumbs/thumb_mask.png" fallback="thumbs/fallback_poster_tp_solid.jpg">$VAR[ShowcaseItem-6Var1]</texture>
			<visible>Container.Content(sets) + Skin.HasSetting(NoCaseForMovieset)</visible>
			<visible>Skin.HasSetting(genrethumbs)</visible>
		</control>
		<!-- MikeBZH44 start : If no case for movieset then larger thumbnail -->
		<control type="image">
			<include>MovieShowcaseDVDCoverVarsSets</include>
			<texture background="true" fallback="thumbs/fallback_poster_tp_solid.jpg">$VAR[ShowcaseItem-6Var]</texture>
			<visible>[Skin.HasSetting(usecases) + Container.Content(movies) + Skin.HasSetting(NoCaseForMovieset) + SubString(ListItem(-6).Path,videodb://movies/sets)]</visible>
			<visible>!Skin.HasSetting(genrethumbs)</visible>
		</control>
		<control type="image">
			<include>MovieShowcaseDVDCoverVarsSets</include>
			<texture background="true" fallback="thumbs/fallback_poster_tp_solid.jpg">$VAR[ShowcaseItem-6Var1]</texture>
			<visible>[Skin.HasSetting(usecases) + Container.Content(movies) + Skin.HasSetting(NoCaseForMovieset) + SubString(ListItem(-6).Path,videodb://movies/sets)]</visible>
			<visible>Skin.HasSetting(genrethumbs)</visible>
		</control>
		<!-- MikeBZH44 end -->
		<!-- Movie Showcase Variables: Thumb glass overlays -->
		<control type="image">
			<include>MovieShowcaseThumbDimensions</include>
			<texture diffuse="thumbs/thumb_mask.png">thumbs/thumb_glass.png</texture>
			<!-- MikeBZH44 start : No case for movieset -->
			<visible>![Skin.HasSetting(NoCaseForMovieset) + SubString(ListItem(-6).Path,videodb://movies/sets)]</visible>
			<!-- MikeBZH44 end -->
		</control>
		<control type="image">
			<include>MovieShowcaseDVDCoverVars</include>
			<texture background="true">thumbs/boxes/$VAR[ShowcaseCasePathVar]/$VAR[ShowcaseCase-6Var]</texture>
			<!-- MikeBZH44 start : No case for movieset -->
			<visible>![Skin.HasSetting(NoCaseForMovieset) + SubString(ListItem(-6).Path,videodb://movies/sets)]</visible>
			<!-- MikeBZH44 end -->
		</control>
		<control type="image">
			<include>MovieShowcaseThumbReflection</include>
			<texture background="true" flipy="true" diffuse="thumbs/movieposter_mask_reflect.png" fallback="thumbs/fallback_poster_tp_solid.jpg">$VAR[ShowcaseItem-6Var]</texture>
			<!-- MikeBZH44 start : No case for movieset -->
			<visible>![Skin.HasSetting(NoCaseForMovieset) + SubString(ListItem(-6).Path,videodb://movies/sets)]</visible>
			<visible>!Skin.HasSetting(genrethumbs)</visible>
			<!-- MikeBZH44 end -->
		</control>
		<control type="image">
			<include>MovieShowcaseThumbReflection</include>
			<texture background="true" flipy="true" diffuse="thumbs/movieposter_mask_reflect.png" fallback="thumbs/fallback_poster_tp_solid.jpg">$VAR[ShowcaseItem-6Var1]</texture>
			<!-- MikeBZH44 start : No case for movieset -->
			<visible>![Skin.HasSetting(NoCaseForMovieset) + SubString(ListItem(-6).Path,videodb://movies/sets)]</visible>
			<visible>Skin.HasSetting(genrethumbs)</visible>
			<!-- MikeBZH44 end -->
		</control>
		<!-- MikeBZH44 start : If no case for movieset then larger thumbnail -->
		<control type="image">
			<include>MovieShowcaseThumbReflectionMovieset</include>
			<texture background="true" flipy="true" diffuse="thumbs/movieposter_mask_reflect.png" fallback="thumbs/fallback_poster_tp_solid.jpg">$VAR[ShowcaseItem-6Var]</texture>
			<visible>[Skin.HasSetting(usecases) + Container.Content(movies) + Skin.HasSetting(NoCaseForMovieset) + SubString(ListItem(-6).Path,videodb://movies/sets)]</visible>
			<visible>!Skin.HasSetting(genrethumbs)</visible>
		</control>
		<control type="image">
			<include>MovieShowcaseThumbReflectionMovieset</include>
			<texture background="true" flipy="true" diffuse="thumbs/movieposter_mask_reflect.png" fallback="thumbs/fallback_poster_tp_solid.jpg">$VAR[ShowcaseItem-6Var1]</texture>
			<visible>[Skin.HasSetting(usecases) + Container.Content(movies) + Skin.HasSetting(NoCaseForMovieset) + SubString(ListItem(-6).Path,videodb://movies/sets)]</visible>
			<visible>Skin.HasSetting(genrethumbs)</visible>
		</control>
		<!-- MikeBZH44 end -->
		<control type="image">
			<include>MovieShowcaseThumbReflectionDVD</include>
			<!-- MikeBZH44 start : No case for movieset -->
			<visible>![Skin.HasSetting(NoCaseForMovieset) + SubString(ListItem(-6).Path,videodb://movies/sets)]</visible>
			<!-- MikeBZH44 end -->
		</control>
		<control type="image">
			<include>WatchedOverlayShowCase</include>
			<include>OverlayVisibility-6</include>
			<!-- MikeBZH44 start : No case for movieset -->
			<visible>![Skin.HasSetting(NoCaseForMovieset) + SubString(ListItem(-6).Path,videodb://movies/sets)]</visible>
			<!-- MikeBZH44 end -->
		</control>
	</include>
	<include name="MovieShowCaseItem-5">
		<include>MovieShowCaseGlow</include>
		<control type="image">
			<include>MovieShowcaseThumb</include>
			<texture background="true" diffuse="thumbs/thumb_mask.png" fallback="thumbs/fallback_poster_tp_solid.jpg">$VAR[ShowcaseItem-5Var]</texture>
			<!-- MikeBZH44 start : No case for movieset -->
			<visible>![Skin.HasSetting(NoCaseForMovieset) + SubString(ListItem(-5).Path,videodb://movies/sets)] | [!Skin.HasSetting(usecases)]</visible>
			<visible>!Skin.HasSetting(genrethumbs)</visible>
			<!-- MikeBZH44 end -->
		</control>
		<control type="image">
			<include>MovieShowcaseThumb</include>
			<texture background="true" diffuse="thumbs/thumb_mask.png" fallback="thumbs/fallback_poster_tp_solid.jpg">$VAR[ShowcaseItem-5Var1]</texture>
			<!-- MikeBZH44 start : No case for movieset -->
			<visible>![Skin.HasSetting(NoCaseForMovieset) + SubString(ListItem(-5).Path,videodb://movies/sets)] | [!Skin.HasSetting(usecases)]</visible>
			<visible>Skin.HasSetting(genrethumbs)</visible>
			<!-- MikeBZH44 end -->
		</control>
		<control type="image">
			<texture background="true">wall/boxes/wall_movie_overlay.png</texture>
			<include>TvShowShowcaseThumb</include>
		</control>
		<control type="image">
			<include>MovieShowcaseThumb</include>
			<texture background="true" diffuse="thumbs/thumb_mask.png" fallback="thumbs/fallback_poster_tp_solid.jpg">$VAR[ShowcaseItem-5Var]</texture>
			<visible>Container.Content(sets) + Skin.HasSetting(NoCaseForMovieset)</visible>
			<visible>!Skin.HasSetting(genrethumbs)</visible>
		</control>
		<control type="image">
			<include>MovieShowcaseThumb</include>
			<texture background="true" diffuse="thumbs/thumb_mask.png" fallback="thumbs/fallback_poster_tp_solid.jpg">$VAR[ShowcaseItem-5Var1]</texture>
			<visible>Container.Content(sets) + Skin.HasSetting(NoCaseForMovieset)</visible>
			<visible>Skin.HasSetting(genrethumbs)</visible>
		</control>
		<!-- MikeBZH44 start : If no case for movieset then larger thumbnail -->
		<control type="image">
			<include>MovieShowcaseDVDCoverVarsSets</include>
			<texture background="true" fallback="thumbs/fallback_poster_tp_solid.jpg">$VAR[ShowcaseItem-5Var]</texture>
			<visible>[Skin.HasSetting(usecases) + Container.Content(movies) + Skin.HasSetting(NoCaseForMovieset) + SubString(ListItem(-5).Path,videodb://movies/sets)]</visible>
			<visible>!Skin.HasSetting(genrethumbs)</visible>
		</control>
		>
		<control type="image">
			<include>MovieShowcaseDVDCoverVarsSets</include>
			<texture background="true" fallback="thumbs/fallback_poster_tp_solid.jpg">$VAR[ShowcaseItem-5Var1]</texture>
			<visible>[Skin.HasSetting(usecases) + Container.Content(movies) + Skin.HasSetting(NoCaseForMovieset) + SubString(ListItem(-5).Path,videodb://movies/sets)]</visible>
			<visible>Skin.HasSetting(genrethumbs)</visible>
		</control>
		>
		<!-- MikeBZH44 end -->
		<!-- Movie Showcase Variables: Thumb glass overlays -->
		<control type="image">
			<include>MovieShowcaseThumbDimensions</include>
			<texture diffuse="thumbs/thumb_mask.png">thumbs/thumb_glass.png</texture>
			<!-- MikeBZH44 start : No case for movieset -->
			<visible>![Skin.HasSetting(NoCaseForMovieset) + SubString(ListItem(-5).Path,videodb://movies/sets)]</visible>
			<!-- MikeBZH44 end -->
		</control>
		<control type="image">
			<include>MovieShowcaseDVDCoverVars</include>
			<texture background="true">thumbs/boxes/$VAR[ShowcaseCasePathVar]/$VAR[ShowcaseCase-5Var]</texture>
			<!-- MikeBZH44 start : No case for movieset -->
			<visible>![Skin.HasSetting(NoCaseForMovieset) + SubString(ListItem(-5).Path,videodb://movies/sets)]</visible>
			<!-- MikeBZH44 end -->
		</control>
		<control type="image">
			<include>MovieShowcaseThumbReflection</include>
			<texture background="true" flipy="true" diffuse="thumbs/movieposter_mask_reflect.png" fallback="thumbs/fallback_poster_tp_solid.jpg">$VAR[ShowcaseItem-5Var]</texture>
			<!-- MikeBZH44 start : No case for movieset -->
			<visible>![Skin.HasSetting(NoCaseForMovieset) + SubString(ListItem(-5).Path,videodb://movies/sets)]</visible>
			<visible>!Skin.HasSetting(genrethumbs)</visible>
			<!-- MikeBZH44 end -->
		</control>
		<control type="image">
			<include>MovieShowcaseThumbReflection</include>
			<texture background="true" flipy="true" diffuse="thumbs/movieposter_mask_reflect.png" fallback="thumbs/fallback_poster_tp_solid.jpg">$VAR[ShowcaseItem-5Var1]</texture>
			<!-- MikeBZH44 start : No case for movieset -->
			<visible>![Skin.HasSetting(NoCaseForMovieset) + SubString(ListItem(-5).Path,videodb://movies/sets)]</visible>
			<visible>Skin.HasSetting(genrethumbs)</visible>
			<!-- MikeBZH44 end -->
		</control>
		<!-- MikeBZH44 start : If no case for movieset then larger thumbnail -->
		<control type="image">
			<include>MovieShowcaseThumbReflectionMovieset</include>
			<texture background="true" flipy="true" diffuse="thumbs/movieposter_mask_reflect.png" fallback="thumbs/fallback_poster_tp_solid.jpg">$VAR[ShowcaseItem5Var]</texture>
			<visible>[Skin.HasSetting(usecases) + Container.Content(movies) + Skin.HasSetting(NoCaseForMovieset) + SubString(ListItem(-5).Path,videodb://movies/sets)]</visible>
			<visible>!Skin.HasSetting(genrethumbs)</visible>
		</control>
		<control type="image">
			<include>MovieShowcaseThumbReflectionMovieset</include>
			<texture background="true" flipy="true" diffuse="thumbs/movieposter_mask_reflect.png" fallback="thumbs/fallback_poster_tp_solid.jpg">$VAR[ShowcaseItem5Var1]</texture>
			<visible>[Skin.HasSetting(usecases) + Container.Content(movies) + Skin.HasSetting(NoCaseForMovieset) + SubString(ListItem(-5).Path,videodb://movies/sets)]</visible>
			<visible>Skin.HasSetting(genrethumbs)</visible>
		</control>
		<!-- MikeBZH44 end -->
		<control type="image">
			<include>MovieShowcaseThumbReflectionDVD</include>
			<!-- MikeBZH44 start : No case for movieset -->
			<visible>![Skin.HasSetting(NoCaseForMovieset) + SubString(ListItem(-5).Path,videodb://movies/sets)]</visible>
			<!-- MikeBZH44 end -->
		</control>
		<control type="image">
			<include>WatchedOverlayShowCase</include>
			<include>OverlayVisibility-5</include>
			<!-- MikeBZH44 start : No case for movieset -->
			<visible>![Skin.HasSetting(NoCaseForMovieset) + SubString(ListItem(-5).Path,videodb://movies/sets)]</visible>
			<!-- MikeBZH44 end -->
		</control>
	</include>
	<include name="MovieShowCaseItem-4">
		<include>MovieShowCaseGlow</include>
		<control type="image">
			<include>MovieShowcaseThumb</include>
			<texture background="true" diffuse="thumbs/thumb_mask.png" fallback="thumbs/fallback_poster_tp_solid.jpg">$VAR[ShowcaseItem-4Var]</texture>
			<!-- MikeBZH44 start : No case for movieset -->
			<visible>![Skin.HasSetting(NoCaseForMovieset) + SubString(ListItem(-4).Path,videodb://movies/sets)] | [!Skin.HasSetting(usecases)]</visible>
			<visible>!Skin.HasSetting(genrethumbs)</visible>
			<!-- MikeBZH44 end -->
		</control>
		<control type="image">
			<include>MovieShowcaseThumb</include>
			<texture background="true" diffuse="thumbs/thumb_mask.png" fallback="thumbs/fallback_poster_tp_solid.jpg">$VAR[ShowcaseItem-4Var1]</texture>
			<!-- MikeBZH44 start : No case for movieset -->
			<visible>![Skin.HasSetting(NoCaseForMovieset) + SubString(ListItem(-4).Path,videodb://movies/sets)] | [!Skin.HasSetting(usecases)]</visible>
			<visible>Skin.HasSetting(genrethumbs)</visible>
			<!-- MikeBZH44 end -->
		</control>
		<control type="image">
			<texture background="true">wall/boxes/wall_movie_overlay.png</texture>
			<include>TvShowShowcaseThumb</include>
		</control>
		<control type="image">
			<include>MovieShowcaseThumb</include>
			<texture background="true" diffuse="thumbs/thumb_mask.png" fallback="thumbs/fallback_poster_tp_solid.jpg">$VAR[ShowcaseItem-4Var]</texture>
			<visible>Container.Content(sets) + Skin.HasSetting(NoCaseForMovieset)</visible>
			<visible>!Skin.HasSetting(genrethumbs)</visible>
		</control>
		<control type="image">
			<include>MovieShowcaseThumb</include>
			<texture background="true" diffuse="thumbs/thumb_mask.png" fallback="thumbs/fallback_poster_tp_solid.jpg">$VAR[ShowcaseItem-4Var1]</texture>
			<visible>Container.Content(sets) + Skin.HasSetting(NoCaseForMovieset)</visible>
			<visible>Skin.HasSetting(genrethumbs)</visible>
		</control>
		<!-- MikeBZH44 start : If no case for movieset then larger thumbnail -->
		<control type="image">
			<include>MovieShowcaseDVDCoverVarsSets</include>
			<texture background="true" fallback="thumbs/fallback_poster_tp_solid.jpg">$VAR[ShowcaseItem-4Var]</texture>
			<visible>[Skin.HasSetting(usecases) + Container.Content(movies) + Skin.HasSetting(NoCaseForMovieset) + SubString(ListItem(-4).Path,videodb://movies/sets)]</visible>
			<visible>!Skin.HasSetting(genrethumbs)</visible>
		</control>
		<control type="image">
			<include>MovieShowcaseDVDCoverVarsSets</include>
			<texture background="true" fallback="thumbs/fallback_poster_tp_solid.jpg">$VAR[ShowcaseItem-4Var1]</texture>
			<visible>[Skin.HasSetting(usecases) + Container.Content(movies) + Skin.HasSetting(NoCaseForMovieset) + SubString(ListItem(-4).Path,videodb://movies/sets)]</visible>
			<visible>Skin.HasSetting(genrethumbs)</visible>
		</control>
		<!-- MikeBZH44 end -->
		<!-- Movie Showcase Variables: Thumb glass overlays -->
		<control type="image">
			<include>MovieShowcaseThumbDimensions</include>
			<texture diffuse="thumbs/thumb_mask.png">thumbs/thumb_glass.png</texture>
			<!-- MikeBZH44 start : No case for movieset -->
			<visible>![Skin.HasSetting(NoCaseForMovieset) + SubString(ListItem(-4).Path,videodb://movies/sets)]</visible>
			<!-- MikeBZH44 end -->
		</control>
		<control type="image">
			<include>MovieShowcaseDVDCoverVars</include>
			<texture background="true">thumbs/boxes/$VAR[ShowcaseCasePathVar]/$VAR[ShowcaseCase-4Var]</texture>
			<!-- MikeBZH44 start : No case for movieset -->
			<visible>![Skin.HasSetting(NoCaseForMovieset) + SubString(ListItem(-4).Path,videodb://movies/sets)]</visible>
			<!-- MikeBZH44 end -->
		</control>
		<control type="image">
			<include>MovieShowcaseThumbReflection</include>
			<texture background="true" flipy="true" diffuse="thumbs/movieposter_mask_reflect.png" fallback="thumbs/fallback_poster_tp_solid.jpg">$VAR[ShowcaseItem-4Var]</texture>
			<!-- MikeBZH44 start : No case for movieset -->
			<visible>![Skin.HasSetting(NoCaseForMovieset) + SubString(ListItem(-4).Path,videodb://movies/sets)]</visible>
			<visible>!Skin.HasSetting(genrethumbs)</visible>
			<!-- MikeBZH44 end -->
		</control>
		<control type="image">
			<include>MovieShowcaseThumbReflection</include>
			<texture background="true" flipy="true" diffuse="thumbs/movieposter_mask_reflect.png" fallback="thumbs/fallback_poster_tp_solid.jpg">$VAR[ShowcaseItem-4Var1]</texture>
			<!-- MikeBZH44 start : No case for movieset -->
			<visible>![Skin.HasSetting(NoCaseForMovieset) + SubString(ListItem(-4).Path,videodb://movies/sets)]</visible>
			<visible>Skin.HasSetting(genrethumbs)</visible>
			<!-- MikeBZH44 end -->
		</control>
		<!-- MikeBZH44 start : If no case for movieset then larger thumbnail -->
		<control type="image">
			<include>MovieShowcaseThumbReflectionMovieset</include>
			<texture background="true" flipy="true" diffuse="thumbs/movieposter_mask_reflect.png" fallback="thumbs/fallback_poster_tp_solid.jpg">$VAR[ShowcaseItem-4Var]</texture>
			<visible>[Skin.HasSetting(usecases) + Container.Content(movies) + Skin.HasSetting(NoCaseForMovieset) + SubString(ListItem(-4).Path,videodb://movies/sets)]</visible>
			<visible>!Skin.HasSetting(genrethumbs)</visible>
		</control>
		<control type="image">
			<include>MovieShowcaseThumbReflectionMovieset</include>
			<texture background="true" flipy="true" diffuse="thumbs/movieposter_mask_reflect.png" fallback="thumbs/fallback_poster_tp_solid.jpg">$VAR[ShowcaseItem-4Var1]</texture>
			<visible>[Skin.HasSetting(usecases) + Container.Content(movies) + Skin.HasSetting(NoCaseForMovieset) + SubString(ListItem(-4).Path,videodb://movies/sets)]</visible>
			<visible>Skin.HasSetting(genrethumbs)</visible>
		</control>
		<!-- MikeBZH44 end -->
		<control type="image">
			<include>MovieShowcaseThumbReflectionDVD</include>
			<!-- MikeBZH44 start : No case for movieset -->
			<visible>![Skin.HasSetting(NoCaseForMovieset) + SubString(ListItem(-4).Path,videodb://movies/sets)]</visible>
			<!-- MikeBZH44 end -->
		</control>
		<control type="image">
			<include>WatchedOverlayShowCase</include>
			<include>OverlayVisibility-4</include>
			<!-- MikeBZH44 start : No case for movieset -->
			<visible>![Skin.HasSetting(NoCaseForMovieset) + SubString(ListItem(-4).Path,videodb://movies/sets)]</visible>
			<!-- MikeBZH44 end -->
		</control>
	</include>
	<include name="MovieShowCaseItem-3">
		<include>MovieShowCaseGlow</include>
		<control type="image">
			<include>MovieShowcaseThumb</include>
			<texture background="true" diffuse="thumbs/thumb_mask.png" fallback="thumbs/fallback_poster_tp_solid.jpg">$VAR[ShowcaseItem-3Var]</texture>
			<!-- MikeBZH44 start : No case for movieset -->
			<visible>![Skin.HasSetting(NoCaseForMovieset) + SubString(ListItem(-3).Path,videodb://movies/sets)] | [!Skin.HasSetting(usecases)]</visible>
			<visible>!Skin.HasSetting(genrethumbs)</visible>
			<!-- MikeBZH44 end -->
		</control>
		<control type="image">
			<include>MovieShowcaseThumb</include>
			<texture background="true" diffuse="thumbs/thumb_mask.png" fallback="thumbs/fallback_poster_tp_solid.jpg">$VAR[ShowcaseItem-3Var1]</texture>
			<!-- MikeBZH44 start : No case for movieset -->
			<visible>![Skin.HasSetting(NoCaseForMovieset) + SubString(ListItem(-3).Path,videodb://movies/sets)] | [!Skin.HasSetting(usecases)]</visible>
			<visible>Skin.HasSetting(genrethumbs)</visible>
			<!-- MikeBZH44 end -->
		</control>
		<control type="image">
			<texture background="true">wall/boxes/wall_movie_overlay.png</texture>
			<include>TvShowShowcaseThumb</include>
		</control>
		<control type="image">
			<include>MovieShowcaseThumb</include>
			<texture background="true" diffuse="thumbs/thumb_mask.png" fallback="thumbs/fallback_poster_tp_solid.jpg">$VAR[ShowcaseItem-3Var]</texture>
			<visible>Container.Content(sets) + Skin.HasSetting(NoCaseForMovieset)</visible>
			<visible>!Skin.HasSetting(genrethumbs)</visible>
		</control>
		<control type="image">
			<include>MovieShowcaseThumb</include>
			<texture background="true" diffuse="thumbs/thumb_mask.png" fallback="thumbs/fallback_poster_tp_solid.jpg">$VAR[ShowcaseItem-3Var1]</texture>
			<visible>Container.Content(sets) + Skin.HasSetting(NoCaseForMovieset)</visible>
			<visible>Skin.HasSetting(genrethumbs)</visible>
		</control>
		<!-- MikeBZH44 start : If no case for movieset then larger thumbnail -->
		<control type="image">
			<include>MovieShowcaseDVDCoverVarsSets</include>
			<texture background="true" fallback="thumbs/fallback_poster_tp_solid.jpg">$VAR[ShowcaseItem-3Var]</texture>
			<visible>[Skin.HasSetting(usecases) + Container.Content(movies) + Skin.HasSetting(NoCaseForMovieset) + SubString(ListItem(-3).Path,videodb://movies/sets)]</visible>
			<visible>!Skin.HasSetting(genrethumbs)</visible>
		</control>
		<control type="image">
			<include>MovieShowcaseDVDCoverVarsSets</include>
			<texture background="true" fallback="thumbs/fallback_poster_tp_solid.jpg">$VAR[ShowcaseItem-3Var1]</texture>
			<visible>[Skin.HasSetting(usecases) + Container.Content(movies) + Skin.HasSetting(NoCaseForMovieset) + SubString(ListItem(-3).Path,videodb://movies/sets)]</visible>
			<visible>Skin.HasSetting(genrethumbs)</visible>
		</control>
		<!-- MikeBZH44 end -->
		<!-- Movie Showcase Variables: Thumb glass overlays -->
		<control type="image">
			<include>MovieShowcaseThumbDimensions</include>
			<texture diffuse="thumbs/thumb_mask.png">thumbs/thumb_glass.png</texture>
			<!-- MikeBZH44 start : No case for movieset -->
			<visible>![Skin.HasSetting(NoCaseForMovieset) + SubString(ListItem(-3).Path,videodb://movies/sets)]</visible>
			<!-- MikeBZH44 end -->
		</control>
		<control type="image">
			<include>MovieShowcaseDVDCoverVars</include>
			<texture background="true">thumbs/boxes/$VAR[ShowcaseCasePathVar]/$VAR[ShowcaseCase-3Var]</texture>
			<!-- MikeBZH44 start : No case for movieset -->
			<visible>![Skin.HasSetting(NoCaseForMovieset) + SubString(ListItem(-3).Path,videodb://movies/sets)]</visible>
			<!-- MikeBZH44 end -->
		</control>
		<control type="image">
			<include>MovieShowcaseThumbReflection</include>
			<texture background="true" flipy="true" diffuse="thumbs/movieposter_mask_reflect.png" fallback="thumbs/fallback_poster_tp_solid.jpg">$VAR[ShowcaseItem-3Var]</texture>
			<!-- MikeBZH44 start : No case for movieset -->
			<visible>![Skin.HasSetting(NoCaseForMovieset) + SubString(ListItem(-3).Path,videodb://movies/sets)]</visible>
			<visible>!Skin.HasSetting(genrethumbs)</visible>
			<!-- MikeBZH44 end -->
		</control>
		<control type="image">
			<include>MovieShowcaseThumbReflection</include>
			<texture background="true" flipy="true" diffuse="thumbs/movieposter_mask_reflect.png" fallback="thumbs/fallback_poster_tp_solid.jpg">$VAR[ShowcaseItem-3Var1]</texture>
			<!-- MikeBZH44 start : No case for movieset -->
			<visible>![Skin.HasSetting(NoCaseForMovieset) + SubString(ListItem(-3).Path,videodb://movies/sets)]</visible>
			<visible>Skin.HasSetting(genrethumbs)</visible>
			<!-- MikeBZH44 end -->
		</control>
		<!-- MikeBZH44 start : If no case for movieset then larger thumbnail -->
		<control type="image">
			<include>MovieShowcaseThumbReflectionMovieset</include>
			<texture background="true" flipy="true" diffuse="thumbs/movieposter_mask_reflect.png" fallback="thumbs/fallback_poster_tp_solid.jpg">$VAR[ShowcaseItem-3Var]</texture>
			<visible>[Skin.HasSetting(usecases) + Container.Content(movies) + Skin.HasSetting(NoCaseForMovieset) + SubString(ListItem(-3).Path,videodb://movies/sets)]</visible>
			<visible>!Skin.HasSetting(genrethumbs)</visible>
		</control>
		<control type="image">
			<include>MovieShowcaseThumbReflectionMovieset</include>
			<texture background="true" flipy="true" diffuse="thumbs/movieposter_mask_reflect.png" fallback="thumbs/fallback_poster_tp_solid.jpg">$VAR[ShowcaseItem-3Var1]</texture>
			<visible>[Skin.HasSetting(usecases) + Container.Content(movies) + Skin.HasSetting(NoCaseForMovieset) + SubString(ListItem(-3).Path,videodb://movies/sets)]</visible>
			<visible>Skin.HasSetting(genrethumbs)</visible>
		</control>
		<!-- MikeBZH44 end -->
		<control type="image">
			<include>MovieShowcaseThumbReflectionDVD</include>
			<!-- MikeBZH44 start : No case for movieset -->
			<visible>![Skin.HasSetting(NoCaseForMovieset) + SubString(ListItem(-3).Path,videodb://movies/sets)]</visible>
			<!-- MikeBZH44 end -->
		</control>
		<control type="image">
			<include>WatchedOverlayShowCase</include>
			<include>OverlayVisibility-3</include>
			<!-- MikeBZH44 start : No case for movieset -->
			<visible>![Skin.HasSetting(NoCaseForMovieset) + SubString(ListItem(-3).Path,videodb://movies/sets)]</visible>
			<!-- MikeBZH44 end -->
		</control>
	</include>
	<include name="MovieShowCaseItem-2">
		<include>MovieShowCaseGlow</include>
		<control type="image">
			<include>MovieShowcaseThumb</include>
			<texture background="true" diffuse="thumbs/thumb_mask.png" fallback="thumbs/fallback_poster_tp_solid.jpg">$VAR[ShowcaseItem-2Var]</texture>
			<!-- MikeBZH44 start : No case for movieset -->
			<visible>![Skin.HasSetting(NoCaseForMovieset) + SubString(ListItem(-2).Path,videodb://movies/sets)] | [!Skin.HasSetting(usecases)]</visible>
			<visible>!Skin.HasSetting(genrethumbs)</visible>
			<!-- MikeBZH44 end -->
		</control>
		<control type="image">
			<include>MovieShowcaseThumb</include>
			<texture background="true" diffuse="thumbs/thumb_mask.png" fallback="thumbs/fallback_poster_tp_solid.jpg">$VAR[ShowcaseItem-2Var1]</texture>
			<!-- MikeBZH44 start : No case for movieset -->
			<visible>![Skin.HasSetting(NoCaseForMovieset) + SubString(ListItem(-2).Path,videodb://movies/sets)] | [!Skin.HasSetting(usecases)]</visible>
			<visible>Skin.HasSetting(genrethumbs)</visible>
			<!-- MikeBZH44 end -->
		</control>
		<control type="image">
			<texture background="true">wall/boxes/wall_movie_overlay.png</texture>
			<include>TvShowShowcaseThumb</include>
		</control>
		<control type="image">
			<include>MovieShowcaseThumb</include>
			<texture background="true" diffuse="thumbs/thumb_mask.png" fallback="thumbs/fallback_poster_tp_solid.jpg">$VAR[ShowcaseItem-2Var]</texture>
			<visible>Container.Content(sets) + Skin.HasSetting(NoCaseForMovieset)</visible>
			<visible>!Skin.HasSetting(genrethumbs)</visible>
		</control>
		<control type="image">
			<include>MovieShowcaseThumb</include>
			<texture background="true" diffuse="thumbs/thumb_mask.png" fallback="thumbs/fallback_poster_tp_solid.jpg">$VAR[ShowcaseItem-2Var1]</texture>
			<visible>Container.Content(sets) + Skin.HasSetting(NoCaseForMovieset)</visible>
			<visible>Skin.HasSetting(genrethumbs)</visible>
		</control>
		<!-- MikeBZH44 start : If no case for movieset then larger thumbnail -->
		<control type="image">
			<include>MovieShowcaseDVDCoverVarsSets</include>
			<texture background="true" fallback="thumbs/fallback_poster_tp_solid.jpg">$VAR[ShowcaseItem-2Var]</texture>
			<visible>[Skin.HasSetting(usecases) + Container.Content(movies) + Skin.HasSetting(NoCaseForMovieset) + SubString(ListItem(-2).Path,videodb://movies/sets)]</visible>
			<visible>!Skin.HasSetting(genrethumbs)</visible>
		</control>
		<control type="image">
			<include>MovieShowcaseDVDCoverVarsSets</include>
			<texture background="true" fallback="thumbs/fallback_poster_tp_solid.jpg">$VAR[ShowcaseItem-2Var1]</texture>
			<visible>[Skin.HasSetting(usecases) + Container.Content(movies) + Skin.HasSetting(NoCaseForMovieset) + SubString(ListItem(-2).Path,videodb://movies/sets)]</visible>
			<visible>Skin.HasSetting(genrethumbs)</visible>
		</control>
		<!-- MikeBZH44 end -->
		<!-- Movie Showcase Variables: Thumb glass overlays -->
		<control type="image">
			<include>MovieShowcaseThumbDimensions</include>
			<texture diffuse="thumbs/thumb_mask.png">thumbs/thumb_glass.png</texture>
			<!-- MikeBZH44 start : No case for movieset -->
			<visible>![Skin.HasSetting(NoCaseForMovieset) + SubString(ListItem(-2).Path,videodb://movies/sets)]</visible>
			<!-- MikeBZH44 end -->
		</control>
		<control type="image">
			<include>MovieShowcaseDVDCoverVars</include>
			<texture background="true">thumbs/boxes/$VAR[ShowcaseCasePathVar]/$VAR[ShowcaseCase-2Var]</texture>
			<!-- MikeBZH44 start : No case for movieset -->
			<visible>![Skin.HasSetting(NoCaseForMovieset) + SubString(ListItem(-2).Path,videodb://movies/sets)]</visible>
			<!-- MikeBZH44 end -->
		</control>
		<control type="image">
			<include>MovieShowcaseThumbReflection</include>
			<texture background="true" flipy="true" diffuse="thumbs/movieposter_mask_reflect.png" fallback="thumbs/fallback_poster_tp_solid.jpg">$VAR[ShowcaseItem-2Var]</texture>
			<!-- MikeBZH44 start : No case for movieset -->
			<visible>![Skin.HasSetting(NoCaseForMovieset) + SubString(ListItem(-2).Path,videodb://movies/sets)]</visible>
			<visible>!Skin.HasSetting(genrethumbs)</visible>
			<!-- MikeBZH44 end -->
		</control>
		<control type="image">
			<include>MovieShowcaseThumbReflection</include>
			<texture background="true" flipy="true" diffuse="thumbs/movieposter_mask_reflect.png" fallback="thumbs/fallback_poster_tp_solid.jpg">$VAR[ShowcaseItem-2Var1]</texture>
			<!-- MikeBZH44 start : No case for movieset -->
			<visible>![Skin.HasSetting(NoCaseForMovieset) + SubString(ListItem(-2).Path,videodb://movies/sets)]</visible>
			<visible>Skin.HasSetting(genrethumbs)</visible>
			<!-- MikeBZH44 end -->
		</control>
		<!-- MikeBZH44 start : If no case for movieset then larger thumbnail -->
		<control type="image">
			<include>MovieShowcaseThumbReflectionMovieset</include>
			<texture background="true" flipy="true" diffuse="thumbs/movieposter_mask_reflect.png" fallback="thumbs/fallback_poster_tp_solid.jpg">$VAR[ShowcaseItem-2Var]</texture>
			<visible>[Skin.HasSetting(usecases) + Container.Content(movies) + Skin.HasSetting(NoCaseForMovieset) + SubString(ListItem(-2).Path,videodb://movies/sets)]</visible>
			<visible>!Skin.HasSetting(genrethumbs)</visible>
		</control>
		<control type="image">
			<include>MovieShowcaseThumbReflectionMovieset</include>
			<texture background="true" flipy="true" diffuse="thumbs/movieposter_mask_reflect.png" fallback="thumbs/fallback_poster_tp_solid.jpg">$VAR[ShowcaseItem-2Var1]</texture>
			<visible>[Skin.HasSetting(usecases) + Container.Content(movies) + Skin.HasSetting(NoCaseForMovieset) + SubString(ListItem(-2).Path,videodb://movies/sets)]</visible>
			<visible>Skin.HasSetting(genrethumbs)</visible>
		</control>
		<!-- MikeBZH44 end -->
		<control type="image">
			<include>MovieShowcaseThumbReflectionDVD</include>
			<!-- MikeBZH44 start : No case for movieset -->
			<visible>![Skin.HasSetting(NoCaseForMovieset) + SubString(ListItem(-2).Path,videodb://movies/sets)]</visible>
			<!-- MikeBZH44 end -->
		</control>
		<control type="image">
			<include>WatchedOverlayShowCase</include>
			<include>OverlayVisibility-2</include>
			<!-- MikeBZH44 start : No case for movieset -->
			<visible>![Skin.HasSetting(NoCaseForMovieset) + SubString(ListItem(-2).Path,videodb://movies/sets)]</visible>
			<!-- MikeBZH44 end -->
		</control>
		<control type="image">
			<include>WatchedOverlayShowCase</include>
			<texture>overlayprogress.png</texture>
			<visible>Container.ListItem(-2).IsResumable + Skin.HasSetting(InProgressFlag)</visible>
		</control>
	</include>
	<include name="MovieShowCaseItem-1">
		<include>MovieShowCaseGlow</include>
		<control type="image">
			<include>MovieShowcaseThumb</include>
			<texture background="true" diffuse="thumbs/thumb_mask.png" fallback="thumbs/fallback_poster_tp_solid.jpg">$VAR[ShowcaseItem-1Var]</texture>
			<!-- MikeBZH44 start : No case for movieset -->
			<visible>![Skin.HasSetting(NoCaseForMovieset) + SubString(ListItem(-1).Path,videodb://movies/sets)] | [!Skin.HasSetting(usecases)]</visible>
			<visible>!Skin.HasSetting(genrethumbs)</visible>
			<!-- MikeBZH44 end -->
		</control>
		<control type="image">
			<include>MovieShowcaseThumb</include>
			<texture background="true" diffuse="thumbs/thumb_mask.png" fallback="thumbs/fallback_poster_tp_solid.jpg">$VAR[ShowcaseItem-1Var1]</texture>
			<!-- MikeBZH44 start : No case for movieset -->
			<visible>![Skin.HasSetting(NoCaseForMovieset) + SubString(ListItem(-1).Path,videodb://movies/sets)] | [!Skin.HasSetting(usecases)]</visible>
			<visible>Skin.HasSetting(genrethumbs)</visible>
			<!-- MikeBZH44 end -->
		</control>
		<control type="image">
			<texture background="true">wall/boxes/wall_movie_overlay.png</texture>
			<include>TvShowShowcaseThumb</include>
		</control>
		<control type="image">
			<include>MovieShowcaseThumb</include>
			<texture background="true" diffuse="thumbs/thumb_mask.png" fallback="thumbs/fallback_poster_tp_solid.jpg">$VAR[ShowcaseItem-1Var]</texture>
			<visible>Container.Content(sets) + Skin.HasSetting(NoCaseForMovieset)</visible>
			<visible>!Skin.HasSetting(genrethumbs)</visible>
		</control>
		<control type="image">
			<include>MovieShowcaseThumb</include>
			<texture background="true" diffuse="thumbs/thumb_mask.png" fallback="thumbs/fallback_poster_tp_solid.jpg">$VAR[ShowcaseItem-1Var1]</texture>
			<visible>Container.Content(sets) + Skin.HasSetting(NoCaseForMovieset)</visible>
			<visible>Skin.HasSetting(genrethumbs)</visible>
		</control>
		<!-- MikeBZH44 start : If no case for movieset then larger thumbnail -->
		<control type="image">
			<include>MovieShowcaseDVDCoverVarsSets</include>
			<texture background="true" fallback="thumbs/fallback_poster_tp_solid.jpg">$VAR[ShowcaseItem-1Var]</texture>
			<visible>[Skin.HasSetting(usecases) + Container.Content(movies) + Skin.HasSetting(NoCaseForMovieset) + SubString(ListItem(-1).Path,videodb://movies/sets)]</visible>
			<visible>!Skin.HasSetting(genrethumbs)</visible>
		</control>
		<control type="image">
			<include>MovieShowcaseDVDCoverVarsSets</include>
			<texture background="true" fallback="thumbs/fallback_poster_tp_solid.jpg">$VAR[ShowcaseItem-1Var1]</texture>
			<visible>[Skin.HasSetting(usecases) + Container.Content(movies) + Skin.HasSetting(NoCaseForMovieset) + SubString(ListItem(-1).Path,videodb://movies/sets)]</visible>
			<visible>Skin.HasSetting(genrethumbs)</visible>
		</control>
		<!-- MikeBZH44 end -->
		<!-- Movie Showcase Variables: Thumb glass overlays -->
		<control type="image">
			<include>MovieShowcaseThumbDimensions</include>
			<texture diffuse="thumbs/thumb_mask.png">thumbs/thumb_glass.png</texture>
			<!-- MikeBZH44 start : No case for movieset -->
			<visible>![Skin.HasSetting(NoCaseForMovieset) + SubString(ListItem(-1).Path,videodb://movies/sets)]</visible>
			<!-- MikeBZH44 end -->
		</control>
		<control type="image">
			<include>MovieShowcaseDVDCoverVars</include>
			<texture background="true">thumbs/boxes/$VAR[ShowcaseCasePathVar]/$VAR[ShowcaseCase-1Var]</texture>
			<!-- MikeBZH44 start : No case for movieset -->
			<visible>![Skin.HasSetting(NoCaseForMovieset) + SubString(ListItem(-1).Path,videodb://movies/sets)]</visible>
			<!-- MikeBZH44 end -->
		</control>
		<control type="image">
			<include>MovieShowcaseThumbReflection</include>
			<texture background="true" flipy="true" diffuse="thumbs/movieposter_mask_reflect.png" fallback="thumbs/fallback_poster_tp_solid.jpg">$VAR[ShowcaseItem-1Var]</texture>
			<!-- MikeBZH44 start : No case for movieset -->
			<visible>![Skin.HasSetting(NoCaseForMovieset) + SubString(ListItem(-1).Path,videodb://movies/sets)]</visible>
			<visible>!Skin.HasSetting(genrethumbs)</visible>
			<!-- MikeBZH44 end -->
		</control>
		<control type="image">
			<include>MovieShowcaseThumbReflection</include>
			<texture background="true" flipy="true" diffuse="thumbs/movieposter_mask_reflect.png" fallback="thumbs/fallback_poster_tp_solid.jpg">$VAR[ShowcaseItem-1Var1]</texture>
			<!-- MikeBZH44 start : No case for movieset -->
			<visible>![Skin.HasSetting(NoCaseForMovieset) + SubString(ListItem(-1).Path,videodb://movies/sets)]</visible>
			<visible>Skin.HasSetting(genrethumbs)</visible>
			<!-- MikeBZH44 end -->
		</control>
		<!-- MikeBZH44 start : If no case for movieset then larger thumbnail -->
		<control type="image">
			<include>MovieShowcaseThumbReflectionMovieset</include>
			<texture background="true" flipy="true" diffuse="thumbs/movieposter_mask_reflect.png" fallback="thumbs/fallback_poster_tp_solid.jpg">$VAR[ShowcaseItem-1Var]</texture>
			<visible>[Skin.HasSetting(usecases) + Container.Content(movies) + Skin.HasSetting(NoCaseForMovieset) + SubString(ListItem(-1).Path,videodb://movies/sets)]</visible>
			<visible>!Skin.HasSetting(genrethumbs)</visible>
		</control>
		<control type="image">
			<include>MovieShowcaseThumbReflectionMovieset</include>
			<texture background="true" flipy="true" diffuse="thumbs/movieposter_mask_reflect.png" fallback="thumbs/fallback_poster_tp_solid.jpg">$VAR[ShowcaseItem-1Var1]</texture>
			<visible>[Skin.HasSetting(usecases) + Container.Content(movies) + Skin.HasSetting(NoCaseForMovieset) + SubString(ListItem(-1).Path,videodb://movies/sets)]</visible>
			<visible>Skin.HasSetting(genrethumbs)</visible>
		</control>
		<!-- MikeBZH44 end -->
		<control type="image">
			<include>MovieShowcaseThumbReflectionDVD</include>
			<!-- MikeBZH44 start : No case for movieset -->
			<visible>![Skin.HasSetting(NoCaseForMovieset) + SubString(ListItem(-1).Path,videodb://movies/sets)]</visible>
			<!-- MikeBZH44 end -->
		</control>
		<control type="image">
			<include>WatchedOverlayShowCase</include>
			<include>OverlayVisibility-1</include>
			<!-- MikeBZH44 start : No case for movieset -->
			<visible>![Skin.HasSetting(NoCaseForMovieset) + SubString(ListItem(-1).Path,videodb://movies/sets)]</visible>
			<!-- MikeBZH44 end -->
		</control>
		<control type="image">
			<include>WatchedOverlayShowCase</include>
			<texture>overlayprogress.png</texture>
			<visible>Container.ListItem(-1).IsResumable + Skin.HasSetting(InProgressFlag)</visible>
		</control>
		<control type="image">
			<include>WatchedOverlayShowCase</include>
			<texture background="true" diffuse="thumbs/ExtraOverlayWatched.png">$VAR[VideoextrasOverlay-1]</texture>
			<visible>System.HasAddon(script.videoextras)</visible>
		</control>
	</include>
	<include name="MovieShowCaseItem0">
		<include>MovieShowCaseGlow</include>
		<control type="image">
			<include>MovieShowcaseThumb</include>
			<texture background="true" diffuse="thumbs/thumb_mask.png" fallback="thumbs/fallback_poster_tp_solid.jpg">$VAR[ShowcaseItem0Var]</texture>
			<!-- MikeBZH44 start : No case for movieset -->
			<visible>![Skin.HasSetting(NoCaseForMovieset) + SubString(ListItem(0).Path,videodb://movies/sets)] | [!Skin.HasSetting(usecases)]</visible>
			<visible>!Skin.HasSetting(genrethumbs)</visible>
			<!-- MikeBZH44 end -->
		</control>
		<control type="image">
			<include>MovieShowcaseThumb</include>
			<texture background="true" diffuse="thumbs/thumb_mask.png" fallback="thumbs/fallback_poster_tp_solid.jpg">$VAR[ShowcaseItem0Var1]</texture>
			<!-- MikeBZH44 start : No case for movieset -->
			<visible>![Skin.HasSetting(NoCaseForMovieset) + SubString(ListItem(0).Path,videodb://movies/sets)] | [!Skin.HasSetting(usecases)]</visible>
			<visible>Skin.HasSetting(genrethumbs)</visible>
			<!-- MikeBZH44 end -->
		</control>
		<control type="image">
			<texture background="true">wall/boxes/wall_movie_overlay.png</texture>
			<include>TvShowShowcaseThumb</include>
		</control>
		<control type="image">
			<include>MovieShowcaseThumb</include>
			<texture background="true" diffuse="thumbs/thumb_mask.png" fallback="thumbs/fallback_poster_tp_solid.jpg">$VAR[ShowcaseItem0Var]</texture>
			<visible>Container.Content(sets) + Skin.HasSetting(NoCaseForMovieset)</visible>
			<visible>!Skin.HasSetting(genrethumbs)</visible>
		</control>
		<control type="image">
			<include>MovieShowcaseThumb</include>
			<texture background="true" diffuse="thumbs/thumb_mask.png" fallback="thumbs/fallback_poster_tp_solid.jpg">$VAR[ShowcaseItem0Var1]</texture>
			<visible>Container.Content(sets) + Skin.HasSetting(NoCaseForMovieset)</visible>
			<visible>Skin.HasSetting(genrethumbs)</visible>
		</control>
		<!-- MikeBZH44 start : If no case for movieset then larger thumbnail -->
		<control type="image">
			<include>MovieShowcaseDVDCoverVarsSets</include>
			<texture background="true" fallback="thumbs/fallback_poster_tp_solid.jpg">$VAR[ShowcaseItem0Var]</texture>
			<visible>[Skin.HasSetting(usecases) + Container.Content(movies) + Skin.HasSetting(NoCaseForMovieset) + SubString(ListItem(0).Path,videodb://movies/sets)]</visible>
			<visible>!Skin.HasSetting(genrethumbs)</visible>
		</control>
		<control type="image">
			<include>MovieShowcaseDVDCoverVarsSets</include>
			<texture background="true" fallback="thumbs/fallback_poster_tp_solid.jpg">$VAR[ShowcaseItem0Var1]</texture>
			<visible>[Skin.HasSetting(usecases) + Container.Content(movies) + Skin.HasSetting(NoCaseForMovieset) + SubString(ListItem(0).Path,videodb://movies/sets)]</visible>
			<visible>Skin.HasSetting(genrethumbs)</visible>
		</control>
		<!-- MikeBZH44 end -->
		<!-- Movie Showcase Variables: Thumb glass overlays -->
		<control type="image">
			<include>MovieShowcaseThumbDimensions</include>
			<texture diffuse="thumbs/thumb_mask.png">thumbs/thumb_glass.png</texture>
			<!-- MikeBZH44 start : No case for movieset -->
			<visible>![Skin.HasSetting(NoCaseForMovieset) + SubString(ListItem(0).Path,videodb://movies/sets)]</visible>
			<!-- MikeBZH44 end -->
		</control>
		<control type="image">
			<include>MovieShowcaseDVDCoverVars</include>
			<texture background="true">thumbs/boxes/$VAR[ShowcaseCasePathVar]/$VAR[ShowcaseCase0Var]</texture>
			<!-- MikeBZH44 start : No case for movieset -->
			<visible>![Skin.HasSetting(NoCaseForMovieset) + SubString(ListItem(0).Path,videodb://movies/sets)]</visible>
			<!-- MikeBZH44 end -->
		</control>
		<control type="image">
			<include>MovieShowcaseThumbReflection</include>
			<texture background="true" flipy="true" diffuse="thumbs/movieposter_mask_reflect.png" fallback="thumbs/fallback_poster_tp_solid.jpg">$VAR[ShowcaseItem0Var]</texture>
			<!-- MikeBZH44 start : No case for movieset -->
			<visible>![Skin.HasSetting(NoCaseForMovieset) + SubString(ListItem(0).Path,videodb://movies/sets)]</visible>
			<visible>!Skin.HasSetting(genrethumbs)</visible>
			<!-- MikeBZH44 end -->
		</control>
		<control type="image">
			<include>MovieShowcaseThumbReflection</include>
			<texture background="true" flipy="true" diffuse="thumbs/movieposter_mask_reflect.png" fallback="thumbs/fallback_poster_tp_solid.jpg">$VAR[ShowcaseItem0Var1]</texture>
			<!-- MikeBZH44 start : No case for movieset -->
			<visible>![Skin.HasSetting(NoCaseForMovieset) + SubString(ListItem(0).Path,videodb://movies/sets)]</visible>
			<visible>Skin.HasSetting(genrethumbs)</visible>
			<!-- MikeBZH44 end -->
		</control>
		<!-- MikeBZH44 start : If no case for movieset then larger thumbnail -->
		<control type="image">
			<include>MovieShowcaseThumbReflectionMovieset</include>
			<texture background="true" flipy="true" diffuse="thumbs/movieposter_mask_reflect.png" fallback="thumbs/fallback_poster_tp_solid.jpg">$VAR[ShowcaseItem0Var]</texture>
			<visible>[Skin.HasSetting(usecases) + Container.Content(movies) + Skin.HasSetting(NoCaseForMovieset) + SubString(ListItem(0).Path,videodb://movies/sets)]</visible>
			<visible>!Skin.HasSetting(genrethumbs)</visible>
		</control>
		<control type="image">
			<include>MovieShowcaseThumbReflectionMovieset</include>
			<texture background="true" flipy="true" diffuse="thumbs/movieposter_mask_reflect.png" fallback="thumbs/fallback_poster_tp_solid.jpg">$VAR[ShowcaseItem0Var1]</texture>
			<visible>[Skin.HasSetting(usecases) + Container.Content(movies) + Skin.HasSetting(NoCaseForMovieset) + SubString(ListItem(0).Path,videodb://movies/sets)]</visible>
			<visible>Skin.HasSetting(genrethumbs)</visible>
		</control>
		<!-- MikeBZH44 end -->
		<control type="image">
			<include>MovieShowcaseThumbReflectionDVD</include>
			<!-- MikeBZH44 start : No case for movieset -->
			<visible>![Skin.HasSetting(NoCaseForMovieset) + SubString(ListItem(0).Path,videodb://movies/sets)]</visible>
			<!-- MikeBZH44 end -->
		</control>
		<control type="image">
			<include>WatchedOverlayShowCase</include>
			<include>OverlayVisibility0</include>
			<!-- MikeBZH44 start : No case for movieset -->
			<visible>![Skin.HasSetting(NoCaseForMovieset) + SubString(ListItem(0).Path,videodb://movies/sets)]</visible>
			<!-- MikeBZH44 end -->
		</control>
		<control type="image">
			<include>WatchedOverlayShowCase</include>
			<texture>overlayprogress.png</texture>
			<visible>Container.ListItem(0).IsResumable + Skin.HasSetting(InProgressFlag)</visible>
		</control>
		<control type="image">
			<include>WatchedOverlayShowCase</include>
			<texture background="true" diffuse="thumbs/ExtraOverlayWatched.png">$VAR[VideoextrasOverlay]</texture>
			<visible>System.HasAddon(script.videoextras)</visible>
		</control>
	</include>
	<include name="MovieShowCaseItem1">
		<include>MovieShowCaseGlow</include>
		<control type="image">
			<include>MovieShowcaseThumb</include>
			<texture background="true" diffuse="thumbs/thumb_mask.png" fallback="thumbs/fallback_poster_tp_solid.jpg">$VAR[ShowcaseItem1Var]</texture>
			<!-- MikeBZH44 start : No case for movieset -->
			<visible>![Skin.HasSetting(NoCaseForMovieset) + SubString(ListItem(1).Path,videodb://movies/sets)] | [!Skin.HasSetting(usecases)]</visible>
			<visible>!Skin.HasSetting(genrethumbs)</visible>
			<!-- MikeBZH44 end -->
		</control>
		<control type="image">
			<include>MovieShowcaseThumb</include>
			<texture background="true" diffuse="thumbs/thumb_mask.png" fallback="thumbs/fallback_poster_tp_solid.jpg">$VAR[ShowcaseItem1Var1]</texture>
			<!-- MikeBZH44 start : No case for movieset -->
			<visible>![Skin.HasSetting(NoCaseForMovieset) + SubString(ListItem(1).Path,videodb://movies/sets)] | [!Skin.HasSetting(usecases)]</visible>
			<visible>Skin.HasSetting(genrethumbs)</visible>
			<!-- MikeBZH44 end -->
		</control>
		<control type="image">
			<texture background="true">wall/boxes/wall_movie_overlay.png</texture>
			<include>TvShowShowcaseThumb</include>
		</control>
		<control type="image">
			<include>MovieShowcaseThumb</include>
			<texture background="true" diffuse="thumbs/thumb_mask.png" fallback="thumbs/fallback_poster_tp_solid.jpg">$VAR[ShowcaseItem1Var]</texture>
			<visible>Container.Content(sets) + Skin.HasSetting(NoCaseForMovieset)</visible>
			<visible>!Skin.HasSetting(genrethumbs)</visible>
		</control>
		<control type="image">
			<include>MovieShowcaseThumb</include>
			<texture background="true" diffuse="thumbs/thumb_mask.png" fallback="thumbs/fallback_poster_tp_solid.jpg">$VAR[ShowcaseItem1Var1]</texture>
			<visible>Container.Content(sets) + Skin.HasSetting(NoCaseForMovieset)</visible>
			<visible>Skin.HasSetting(genrethumbs)</visible>
		</control>
		<!-- MikeBZH44 start : If no case for movieset then larger thumbnail -->
		<control type="image">
			<include>MovieShowcaseDVDCoverVarsSets</include>
			<texture background="true" fallback="thumbs/fallback_poster_tp_solid.jpg">$VAR[ShowcaseItem1Var]</texture>
			<visible>[Skin.HasSetting(usecases) + Container.Content(movies) + Skin.HasSetting(NoCaseForMovieset) + SubString(ListItem(1).Path,videodb://movies/sets)]</visible>
			<visible>!Skin.HasSetting(genrethumbs)</visible>
		</control>
		<control type="image">
			<include>MovieShowcaseDVDCoverVarsSets</include>
			<texture background="true" fallback="thumbs/fallback_poster_tp_solid.jpg">$VAR[ShowcaseItem1Var1]</texture>
			<visible>[Skin.HasSetting(usecases) + Container.Content(movies) + Skin.HasSetting(NoCaseForMovieset) + SubString(ListItem(1).Path,videodb://movies/sets)]</visible>
			<visible>Skin.HasSetting(genrethumbs)</visible>
		</control>
		<!-- MikeBZH44 end -->
		<!-- Movie Showcase Variables: Thumb glass overlays -->
		<control type="image">
			<include>MovieShowcaseThumbDimensions</include>
			<texture diffuse="thumbs/thumb_mask.png">thumbs/thumb_glass.png</texture>
			<!-- MikeBZH44 start : No case for movieset -->
			<visible>![Skin.HasSetting(NoCaseForMovieset) + SubString(ListItem(1).Path,videodb://movies/sets)]</visible>
			<!-- MikeBZH44 end -->
		</control>
		<control type="image">
			<include>MovieShowcaseDVDCoverVars</include>
			<texture background="true">thumbs/boxes/$VAR[ShowcaseCasePathVar]/$VAR[ShowcaseCase1Var]</texture>
			<!-- MikeBZH44 start : No case for movieset -->
			<visible>![Skin.HasSetting(NoCaseForMovieset) + SubString(ListItem(1).Path,videodb://movies/sets)]</visible>
			<!-- MikeBZH44 end -->
		</control>
		<control type="image">
			<include>MovieShowcaseThumbReflection</include>
			<texture background="true" flipy="true" diffuse="thumbs/movieposter_mask_reflect.png" fallback="thumbs/fallback_poster_tp_solid.jpg">$VAR[ShowcaseItem1Var]</texture>
			<!-- MikeBZH44 start : No case for movieset -->
			<visible>![Skin.HasSetting(NoCaseForMovieset) + SubString(ListItem(1).Path,videodb://movies/sets)]</visible>
			<visible>!Skin.HasSetting(genrethumbs)</visible>
			<!-- MikeBZH44 end -->
		</control>
		<control type="image">
			<include>MovieShowcaseThumbReflection</include>
			<texture background="true" flipy="true" diffuse="thumbs/movieposter_mask_reflect.png" fallback="thumbs/fallback_poster_tp_solid.jpg">$VAR[ShowcaseItem1Var1]</texture>
			<!-- MikeBZH44 start : No case for movieset -->
			<visible>![Skin.HasSetting(NoCaseForMovieset) + SubString(ListItem(1).Path,videodb://movies/sets)]</visible>
			<visible>Skin.HasSetting(genrethumbs)</visible>
			<!-- MikeBZH44 end -->
		</control>
		<!-- MikeBZH44 start : If no case for movieset then larger thumbnail -->
		<control type="image">
			<include>MovieShowcaseThumbReflectionMovieset</include>
			<texture background="true" flipy="true" diffuse="thumbs/movieposter_mask_reflect.png" fallback="thumbs/fallback_poster_tp_solid.jpg">$VAR[ShowcaseItem1Var]</texture>
			<visible>[Skin.HasSetting(usecases) + Container.Content(movies) + Skin.HasSetting(NoCaseForMovieset) + SubString(ListItem(1).Path,videodb://movies/sets)]</visible>
			<visible>!Skin.HasSetting(genrethumbs)</visible>
		</control>
		<control type="image">
			<include>MovieShowcaseThumbReflectionMovieset</include>
			<texture background="true" flipy="true" diffuse="thumbs/movieposter_mask_reflect.png" fallback="thumbs/fallback_poster_tp_solid.jpg">$VAR[ShowcaseItem1Var1]</texture>
			<visible>[Skin.HasSetting(usecases) + Container.Content(movies) + Skin.HasSetting(NoCaseForMovieset) + SubString(ListItem(1).Path,videodb://movies/sets)]</visible>
			<visible>Skin.HasSetting(genrethumbs)</visible>
		</control>
		<!-- MikeBZH44 end -->
		<control type="image">
			<include>MovieShowcaseThumbReflectionDVD</include>
			<!-- MikeBZH44 start : No case for movieset -->
			<visible>![Skin.HasSetting(NoCaseForMovieset) + SubString(ListItem(1).Path,videodb://movies/sets)]</visible>
			<!-- MikeBZH44 end -->
		</control>
		<control type="image">
			<include>WatchedOverlayShowCase</include>
			<include>OverlayVisibility1</include>
			<!-- MikeBZH44 start : No case for movieset -->
			<visible>![Skin.HasSetting(NoCaseForMovieset) + SubString(ListItem(1).Path,videodb://movies/sets)]</visible>
			<!-- MikeBZH44 end -->
		</control>
		<control type="image">
			<include>WatchedOverlayShowCase</include>
			<texture>overlayprogress.png</texture>
			<visible>Container.ListItem(1).IsResumable + Skin.HasSetting(InProgressFlag)</visible>
		</control>
		<control type="image">
			<include>WatchedOverlayShowCase</include>
			<texture background="true" diffuse="thumbs/ExtraOverlayWatched.png">$VAR[VideoextrasOverlay1]</texture>
			<visible>System.HasAddon(script.videoextras)</visible>
		</control>
	</include>
	<include name="MovieShowCaseItem2">
		<include>MovieShowCaseGlow</include>
		<control type="image">
			<include>MovieShowcaseThumb</include>
			<texture background="true" diffuse="thumbs/thumb_mask.png" fallback="thumbs/fallback_poster_tp_solid.jpg">$VAR[ShowcaseItem2Var]</texture>
			<!-- MikeBZH44 start : No case for movieset -->
			<visible>![Skin.HasSetting(NoCaseForMovieset) + SubString(ListItem(2).Path,videodb://movies/sets)] | [!Skin.HasSetting(usecases)]</visible>
			<visible>!Skin.HasSetting(genrethumbs)</visible>
			<!-- MikeBZH44 end -->
		</control>
		<control type="image">
			<include>MovieShowcaseThumb</include>
			<texture background="true" diffuse="thumbs/thumb_mask.png" fallback="thumbs/fallback_poster_tp_solid.jpg">$VAR[ShowcaseItem2Var1]</texture>
			<!-- MikeBZH44 start : No case for movieset -->
			<visible>![Skin.HasSetting(NoCaseForMovieset) + SubString(ListItem(2).Path,videodb://movies/sets)] | [!Skin.HasSetting(usecases)]</visible>
			<visible>Skin.HasSetting(genrethumbs)</visible>
			<!-- MikeBZH44 end -->
		</control>
		<control type="image">
			<texture background="true">wall/boxes/wall_movie_overlay.png</texture>
			<include>TvShowShowcaseThumb</include>
		</control>
		<control type="image">
			<include>MovieShowcaseThumb</include>
			<texture background="true" diffuse="thumbs/thumb_mask.png" fallback="thumbs/fallback_poster_tp_solid.jpg">$VAR[ShowcaseItem2Var]</texture>
			<visible>Container.Content(sets) + Skin.HasSetting(NoCaseForMovieset)</visible>
			<visible>!Skin.HasSetting(genrethumbs)</visible>
		</control>
		<control type="image">
			<include>MovieShowcaseThumb</include>
			<texture background="true" diffuse="thumbs/thumb_mask.png" fallback="thumbs/fallback_poster_tp_solid.jpg">$VAR[ShowcaseItem2Var1]</texture>
			<visible>Container.Content(sets) + Skin.HasSetting(NoCaseForMovieset)</visible>
			<visible>Skin.HasSetting(genrethumbs)</visible>
		</control>
		<!-- MikeBZH44 start : If no case for movieset then larger thumbnail -->
		<control type="image">
			<include>MovieShowcaseDVDCoverVarsSets</include>
			<texture background="true" fallback="thumbs/fallback_poster_tp_solid.jpg">$VAR[ShowcaseItem2Var]</texture>
			<visible>[Skin.HasSetting(usecases) + Container.Content(movies) + Skin.HasSetting(NoCaseForMovieset) + SubString(ListItem(2).Path,videodb://movies/sets)]</visible>
			<visible>!Skin.HasSetting(genrethumbs)</visible>
		</control>
		<control type="image">
			<include>MovieShowcaseDVDCoverVarsSets</include>
			<texture background="true" fallback="thumbs/fallback_poster_tp_solid.jpg">$VAR[ShowcaseItem2Var1]</texture>
			<visible>[Skin.HasSetting(usecases) + Container.Content(movies) + Skin.HasSetting(NoCaseForMovieset) + SubString(ListItem(2).Path,videodb://movies/sets)]</visible>
			<visible>Skin.HasSetting(genrethumbs)</visible>
		</control>
		<!-- MikeBZH44 end -->
		<!-- Movie Showcase Variables: Thumb glass overlays -->
		<control type="image">
			<include>MovieShowcaseThumbDimensions</include>
			<texture diffuse="thumbs/thumb_mask.png">thumbs/thumb_glass.png</texture>
			<!-- MikeBZH44 start : No case for movieset -->
			<visible>![Skin.HasSetting(NoCaseForMovieset) + SubString(ListItem(2).Path,videodb://movies/sets)]</visible>
			<!-- MikeBZH44 end -->
		</control>
		<control type="image">
			<include>MovieShowcaseDVDCoverVars</include>
			<texture background="true">thumbs/boxes/$VAR[ShowcaseCasePathVar]/$VAR[ShowcaseCase2Var]</texture>
			<!-- MikeBZH44 start : No case for movieset -->
			<visible>![Skin.HasSetting(NoCaseForMovieset) + SubString(ListItem(2).Path,videodb://movies/sets)]</visible>
			<!-- MikeBZH44 end -->
		</control>
		<control type="image">
			<include>MovieShowcaseThumbReflection</include>
			<texture background="true" flipy="true" diffuse="thumbs/movieposter_mask_reflect.png" fallback="thumbs/fallback_poster_tp_solid.jpg">$VAR[ShowcaseItem2Var]</texture>
			<!-- MikeBZH44 start : No case for movieset -->
			<visible>![Skin.HasSetting(NoCaseForMovieset) + SubString(ListItem(2).Path,videodb://movies/sets)]</visible>
			<visible>!Skin.HasSetting(genrethumbs)</visible>
			<!-- MikeBZH44 end -->
		</control>
		<control type="image">
			<include>MovieShowcaseThumbReflection</include>
			<texture background="true" flipy="true" diffuse="thumbs/movieposter_mask_reflect.png" fallback="thumbs/fallback_poster_tp_solid.jpg">$VAR[ShowcaseItem2Var1]</texture>
			<!-- MikeBZH44 start : No case for movieset -->
			<visible>![Skin.HasSetting(NoCaseForMovieset) + SubString(ListItem(2).Path,videodb://movies/sets)]</visible>
			<visible>Skin.HasSetting(genrethumbs)</visible>
			<!-- MikeBZH44 end -->
		</control>
		<!-- MikeBZH44 start : If no case for movieset then larger thumbnail -->
		<control type="image">
			<include>MovieShowcaseThumbReflectionMovieset</include>
			<texture background="true" flipy="true" diffuse="thumbs/movieposter_mask_reflect.png" fallback="thumbs/fallback_poster_tp_solid.jpg">$VAR[ShowcaseItem2Var]</texture>
			<visible>[Skin.HasSetting(usecases) + Container.Content(movies) + Skin.HasSetting(NoCaseForMovieset) + SubString(ListItem(2).Path,videodb://movies/sets)]</visible>
			<visible>!Skin.HasSetting(genrethumbs)</visible>
		</control>
		<control type="image">
			<include>MovieShowcaseThumbReflectionMovieset</include>
			<texture background="true" flipy="true" diffuse="thumbs/movieposter_mask_reflect.png" fallback="thumbs/fallback_poster_tp_solid.jpg">$VAR[ShowcaseItem2Var1]</texture>
			<visible>[Skin.HasSetting(usecases) + Container.Content(movies) + Skin.HasSetting(NoCaseForMovieset) + SubString(ListItem(2).Path,videodb://movies/sets)]</visible>
			<visible>Skin.HasSetting(genrethumbs)</visible>
		</control>
		<!-- MikeBZH44 end -->
		<control type="image">
			<include>MovieShowcaseThumbReflectionDVD</include>
			<!-- MikeBZH44 start : No case for movieset -->
			<visible>![Skin.HasSetting(NoCaseForMovieset) + SubString(ListItem(2).Path,videodb://movies/sets)]</visible>
			<!-- MikeBZH44 end -->
		</control>
		<control type="image">
			<include>WatchedOverlayShowCase</include>
			<include>OverlayVisibility2</include>
			<!-- MikeBZH44 start : No case for movieset -->
			<visible>![Skin.HasSetting(NoCaseForMovieset) + SubString(ListItem(2).Path,videodb://movies/sets)]</visible>
			<!-- MikeBZH44 end -->
		</control>
		<control type="image">
			<include>WatchedOverlayShowCase</include>
			<texture>overlayprogress.png</texture>
			<visible>Container.ListItem(2).IsResumable + Skin.HasSetting(InProgressFlag)</visible>
		</control>
		<control type="image">
			<include>WatchedOverlayShowCase</include>
			<texture background="true" diffuse="thumbs/ExtraOverlayWatched.png">$VAR[VideoextrasOverlay2]</texture>
			<visible>System.HasAddon(script.videoextras)</visible>
		</control>
	</include>
	<include name="MovieShowCaseItem3">
		<include>MovieShowCaseGlow</include>
		<control type="image">
			<include>MovieShowcaseThumb</include>
			<texture background="true" diffuse="thumbs/thumb_mask.png" fallback="thumbs/fallback_poster_tp_solid.jpg">$VAR[ShowcaseItem3Var]</texture>
			<!-- MikeBZH44 start : No case for movieset -->
			<visible>![Skin.HasSetting(NoCaseForMovieset) + SubString(ListItem(3).Path,videodb://movies/sets)] | [!Skin.HasSetting(usecases)]</visible>
			<visible>!Skin.HasSetting(genrethumbs)</visible>
			<!-- MikeBZH44 end -->
		</control>
		<control type="image">
			<include>MovieShowcaseThumb</include>
			<texture background="true" diffuse="thumbs/thumb_mask.png" fallback="thumbs/fallback_poster_tp_solid.jpg">$VAR[ShowcaseItem3Var1]</texture>
			<!-- MikeBZH44 start : No case for movieset -->
			<visible>![Skin.HasSetting(NoCaseForMovieset) + SubString(ListItem(3).Path,videodb://movies/sets)] | [!Skin.HasSetting(usecases)]</visible>
			<visible>Skin.HasSetting(genrethumbs)</visible>
			<!-- MikeBZH44 end -->
		</control>
		<control type="image">
			<texture background="true">wall/boxes/wall_movie_overlay.png</texture>
			<include>TvShowShowcaseThumb</include>
		</control>
		<control type="image">
			<include>MovieShowcaseThumb</include>
			<texture background="true" diffuse="thumbs/thumb_mask.png" fallback="thumbs/fallback_poster_tp_solid.jpg">$VAR[ShowcaseItem3Var]</texture>
			<visible>Container.Content(sets) + Skin.HasSetting(NoCaseForMovieset)</visible>
			<visible>!Skin.HasSetting(genrethumbs)</visible>
		</control>
		<control type="image">
			<include>MovieShowcaseThumb</include>
			<texture background="true" diffuse="thumbs/thumb_mask.png" fallback="thumbs/fallback_poster_tp_solid.jpg">$VAR[ShowcaseItem3Var1]</texture>
			<visible>Container.Content(sets) + Skin.HasSetting(NoCaseForMovieset)</visible>
			<visible>Skin.HasSetting(genrethumbs)</visible>
		</control>
		<!-- MikeBZH44 start : If no case for movieset then larger thumbnail -->
		<control type="image">
			<include>MovieShowcaseDVDCoverVarsSets</include>
			<texture background="true" fallback="thumbs/fallback_poster_tp_solid.jpg">$VAR[ShowcaseItem3Var]</texture>
			<visible>[Skin.HasSetting(usecases) + Container.Content(movies) + Skin.HasSetting(NoCaseForMovieset) + SubString(ListItem(3).Path,videodb://movies/sets)]</visible>
			<visible>!Skin.HasSetting(genrethumbs)</visible>
		</control>
		<control type="image">
			<include>MovieShowcaseDVDCoverVarsSets</include>
			<texture background="true" fallback="thumbs/fallback_poster_tp_solid.jpg">$VAR[ShowcaseItem3Var1]</texture>
			<visible>[Skin.HasSetting(usecases) + Container.Content(movies) + Skin.HasSetting(NoCaseForMovieset) + SubString(ListItem(3).Path,videodb://movies/sets)]</visible>
			<visible>Skin.HasSetting(genrethumbs)</visible>
		</control>
		<!-- MikeBZH44 end -->
		<!-- Movie Showcase Variables: Thumb glass overlays -->
		<control type="image">
			<include>MovieShowcaseThumbDimensions</include>
			<texture diffuse="thumbs/thumb_mask.png">thumbs/thumb_glass.png</texture>
			<!-- MikeBZH44 start : No case for movieset -->
			<visible>![Skin.HasSetting(NoCaseForMovieset) + SubString(ListItem(3).Path,videodb://movies/sets)]</visible>
			<!-- MikeBZH44 end -->
		</control>
		<control type="image">
			<include>MovieShowcaseDVDCoverVars</include>
			<texture background="true">thumbs/boxes/$VAR[ShowcaseCasePathVar]/$VAR[ShowcaseCase3Var]</texture>
			<!-- MikeBZH44 start : No case for movieset -->
			<visible>![Skin.HasSetting(NoCaseForMovieset) + SubString(ListItem(3).Path,videodb://movies/sets)]</visible>
			<!-- MikeBZH44 end -->
		</control>
		<control type="image">
			<include>MovieShowcaseThumbReflection</include>
			<texture background="true" flipy="true" diffuse="thumbs/movieposter_mask_reflect.png" fallback="thumbs/fallback_poster_tp_solid.jpg">$VAR[ShowcaseItem3Var]</texture>
			<!-- MikeBZH44 start : No case for movieset -->
			<visible>![Skin.HasSetting(NoCaseForMovieset) + SubString(ListItem(3).Path,videodb://movies/sets)]</visible>
			<visible>!Skin.HasSetting(genrethumbs)</visible>
			<!-- MikeBZH44 end -->
		</control>
		<control type="image">
			<include>MovieShowcaseThumbReflection</include>
			<texture background="true" flipy="true" diffuse="thumbs/movieposter_mask_reflect.png" fallback="thumbs/fallback_poster_tp_solid.jpg">$VAR[ShowcaseItem3Var1]</texture>
			<!-- MikeBZH44 start : No case for movieset -->
			<visible>![Skin.HasSetting(NoCaseForMovieset) + SubString(ListItem(3).Path,videodb://movies/sets)]</visible>
			<visible>Skin.HasSetting(genrethumbs)</visible>
			<!-- MikeBZH44 end -->
		</control>
		<!-- MikeBZH44 start : If no case for movieset then larger thumbnail -->
		<control type="image">
			<include>MovieShowcaseThumbReflectionMovieset</include>
			<texture background="true" flipy="true" diffuse="thumbs/movieposter_mask_reflect.png" fallback="thumbs/fallback_poster_tp_solid.jpg">$VAR[ShowcaseItem3Var]</texture>
			<visible>[Skin.HasSetting(usecases) + Container.Content(movies) + Skin.HasSetting(NoCaseForMovieset) + SubString(ListItem(3).Path,videodb://movies/sets)]</visible>
			<visible>!Skin.HasSetting(genrethumbs)</visible>
		</control>
		<control type="image">
			<include>MovieShowcaseThumbReflectionMovieset</include>
			<texture background="true" flipy="true" diffuse="thumbs/movieposter_mask_reflect.png" fallback="thumbs/fallback_poster_tp_solid.jpg">$VAR[ShowcaseItem3Var1]</texture>
			<visible>[Skin.HasSetting(usecases) + Container.Content(movies) + Skin.HasSetting(NoCaseForMovieset) + SubString(ListItem(3).Path,videodb://movies/sets)]</visible>
			<visible>Skin.HasSetting(genrethumbs)</visible>
		</control>
		<!-- MikeBZH44 end -->
		<control type="image">
			<include>MovieShowcaseThumbReflectionDVD</include>
			<!-- MikeBZH44 start : No case for movieset -->
			<visible>![Skin.HasSetting(NoCaseForMovieset) + SubString(ListItem(3).Path,videodb://movies/sets)]</visible>
			<!-- MikeBZH44 end -->
		</control>
		<control type="image">
			<include>WatchedOverlayShowCase</include>
			<include>OverlayVisibility3</include>
			<!-- MikeBZH44 start : No case for movieset -->
			<visible>![Skin.HasSetting(NoCaseForMovieset) + SubString(ListItem(3).Path,videodb://movies/sets)]</visible>
			<!-- MikeBZH44 end -->
		</control>
		<control type="image">
			<include>WatchedOverlayShowCase</include>
			<texture>overlayprogress.png</texture>
			<visible>Container.ListItem(3).IsResumable + Skin.HasSetting(InProgressFlag)</visible>
		</control>
		<control type="image">
			<include>WatchedOverlayShowCase</include>
			<texture background="true" diffuse="thumbs/ExtraOverlayWatched.png">$VAR[VideoextrasOverlay3]</texture>
			<visible>System.HasAddon(script.videoextras)</visible>
		</control>
	</include>
	<include name="MovieShowCaseItem4">
		<include>MovieShowCaseGlow</include>
		<control type="image">
			<include>MovieShowcaseThumb</include>
			<texture background="true" diffuse="thumbs/thumb_mask.png" fallback="thumbs/fallback_poster_tp_solid.jpg">$VAR[ShowcaseItem4Var]</texture>
			<!-- MikeBZH44 start : No case for movieset -->
			<visible>![Skin.HasSetting(NoCaseForMovieset) + SubString(ListItem(4).Path,videodb://movies/sets)] | [!Skin.HasSetting(usecases)]</visible>
			<visible>!Skin.HasSetting(genrethumbs)</visible>
			<!-- MikeBZH44 end -->
		</control>
		<control type="image">
			<include>MovieShowcaseThumb</include>
			<texture background="true" diffuse="thumbs/thumb_mask.png" fallback="thumbs/fallback_poster_tp_solid.jpg">$VAR[ShowcaseItem4Var1]</texture>
			<!-- MikeBZH44 start : No case for movieset -->
			<visible>![Skin.HasSetting(NoCaseForMovieset) + SubString(ListItem(4).Path,videodb://movies/sets)] | [!Skin.HasSetting(usecases)]</visible>
			<visible>Skin.HasSetting(genrethumbs)</visible>
			<!-- MikeBZH44 end -->
		</control>
		<control type="image">
			<texture background="true">wall/boxes/wall_movie_overlay.png</texture>
			<include>TvShowShowcaseThumb</include>
		</control>
		<control type="image">
			<include>MovieShowcaseThumb</include>
			<texture background="true" diffuse="thumbs/thumb_mask.png" fallback="thumbs/fallback_poster_tp_solid.jpg">$VAR[ShowcaseItem4Var]</texture>
			<visible>Container.Content(sets) + Skin.HasSetting(NoCaseForMovieset)</visible>
			<visible>!Skin.HasSetting(genrethumbs)</visible>
		</control>
		<control type="image">
			<include>MovieShowcaseThumb</include>
			<texture background="true" diffuse="thumbs/thumb_mask.png" fallback="thumbs/fallback_poster_tp_solid.jpg">$VAR[ShowcaseItem4Var1]</texture>
			<visible>Container.Content(sets) + Skin.HasSetting(NoCaseForMovieset)</visible>
			<visible>Skin.HasSetting(genrethumbs)</visible>
		</control>
		<!-- MikeBZH44 start : If no case for movieset then larger thumbnail -->
		<control type="image">
			<include>MovieShowcaseDVDCoverVarsSets</include>
			<texture background="true" fallback="thumbs/fallback_poster_tp_solid.jpg">$VAR[ShowcaseItem4Var]</texture>
			<visible>[Skin.HasSetting(usecases) + Container.Content(movies) + Skin.HasSetting(NoCaseForMovieset) + SubString(ListItem(4).Path,videodb://movies/sets)]</visible>
			<visible>!Skin.HasSetting(genrethumbs)</visible>
		</control>
		<control type="image">
			<include>MovieShowcaseDVDCoverVarsSets</include>
			<texture background="true" fallback="thumbs/fallback_poster_tp_solid.jpg">$VAR[ShowcaseItem4Var1]</texture>
			<visible>[Skin.HasSetting(usecases) + Container.Content(movies) + Skin.HasSetting(NoCaseForMovieset) + SubString(ListItem(4).Path,videodb://movies/sets)]</visible>
			<visible>Skin.HasSetting(genrethumbs)</visible>
		</control>
		<!-- MikeBZH44 end -->
		<!-- Movie Showcase Variables: Thumb glass overlays -->
		<control type="image">
			<include>MovieShowcaseThumbDimensions</include>
			<texture diffuse="thumbs/thumb_mask.png">thumbs/thumb_glass.png</texture>
			<!-- MikeBZH44 start : No case for movieset -->
			<visible>![Skin.HasSetting(NoCaseForMovieset) + SubString(ListItem(4).Path,videodb://movies/sets)]</visible>
			<!-- MikeBZH44 end -->
		</control>
		<control type="image">
			<include>MovieShowcaseDVDCoverVars</include>
			<texture background="true">thumbs/boxes/$VAR[ShowcaseCasePathVar]/$VAR[ShowcaseCase4Var]</texture>
			<!-- MikeBZH44 start : No case for movieset -->
			<visible>![Skin.HasSetting(NoCaseForMovieset) + SubString(ListItem(4).Path,videodb://movies/sets)]</visible>
			<!-- MikeBZH44 end -->
		</control>
		<control type="image">
			<include>MovieShowcaseThumbReflection</include>
			<texture background="true" flipy="true" diffuse="thumbs/movieposter_mask_reflect.png" fallback="thumbs/fallback_poster_tp_solid.jpg">$VAR[ShowcaseItem4Var]</texture>
			<!-- MikeBZH44 start : No case for movieset -->
			<visible>![Skin.HasSetting(NoCaseForMovieset) + SubString(ListItem(4).Path,videodb://movies/sets)]</visible>
			<visible>!Skin.HasSetting(genrethumbs)</visible>
			<!-- MikeBZH44 end -->
		</control>
		<control type="image">
			<include>MovieShowcaseThumbReflection</include>
			<texture background="true" flipy="true" diffuse="thumbs/movieposter_mask_reflect.png" fallback="thumbs/fallback_poster_tp_solid.jpg">$VAR[ShowcaseItem4Var1]</texture>
			<!-- MikeBZH44 start : No case for movieset -->
			<visible>![Skin.HasSetting(NoCaseForMovieset) + SubString(ListItem(4).Path,videodb://movies/sets)]</visible>
			<visible>Skin.HasSetting(genrethumbs)</visible>
			<!-- MikeBZH44 end -->
		</control>
		<!-- MikeBZH44 start : If no case for movieset then larger thumbnail -->
		<control type="image">
			<include>MovieShowcaseThumbReflectionMovieset</include>
			<texture background="true" flipy="true" diffuse="thumbs/movieposter_mask_reflect.png" fallback="thumbs/fallback_poster_tp_solid.jpg">$VAR[ShowcaseItem4Var]</texture>
			<visible>[Skin.HasSetting(usecases) + Container.Content(movies) + Skin.HasSetting(NoCaseForMovieset) + SubString(ListItem(4).Path,videodb://movies/sets)]</visible>
			<visible>!Skin.HasSetting(genrethumbs)</visible>
		</control>
		<control type="image">
			<include>MovieShowcaseThumbReflectionMovieset</include>
			<texture background="true" flipy="true" diffuse="thumbs/movieposter_mask_reflect.png" fallback="thumbs/fallback_poster_tp_solid.jpg">$VAR[ShowcaseItem4Var1]</texture>
			<visible>[Skin.HasSetting(usecases) + Container.Content(movies) + Skin.HasSetting(NoCaseForMovieset) + SubString(ListItem(4).Path,videodb://movies/sets)]</visible>
			<visible>Skin.HasSetting(genrethumbs)</visible>
		</control>
		<!-- MikeBZH44 end -->
		<control type="image">
			<include>MovieShowcaseThumbReflectionDVD</include>
			<!-- MikeBZH44 start : No case for movieset -->
			<visible>![Skin.HasSetting(NoCaseForMovieset) + SubString(ListItem(4).Path,videodb://movies/sets)]</visible>
			<!-- MikeBZH44 end -->
		</control>
		<control type="image">
			<include>WatchedOverlayShowCase</include>
			<include>OverlayVisibility4</include>
			<!-- MikeBZH44 start : No case for movieset -->
			<visible>![Skin.HasSetting(NoCaseForMovieset) + SubString(ListItem(4).Path,videodb://movies/sets)]</visible>
			<!-- MikeBZH44 end -->
		</control>
		<control type="image">
			<include>WatchedOverlayShowCase</include>
			<texture>overlayprogress.png</texture>
			<visible>Container.ListItem(4).IsResumable + Skin.HasSetting(InProgressFlag)</visible>
		</control>
		<control type="image">
			<include>WatchedOverlayShowCase</include>
			<texture background="true" diffuse="thumbs/ExtraOverlayWatched.png">$VAR[VideoextrasOverlay4]</texture>
			<visible>System.HasAddon(script.videoextras)</visible>
		</control>
	</include>
	<include name="MovieShowCaseItem5">
		<include>MovieShowCaseGlow</include>
		<control type="image">
			<include>MovieShowcaseThumb</include>
			<texture background="true" diffuse="thumbs/thumb_mask.png" fallback="thumbs/fallback_poster_tp_solid.jpg">$VAR[ShowcaseItem5Var]</texture>
			<!-- MikeBZH44 start : No case for movieset -->
			<visible>![Skin.HasSetting(NoCaseForMovieset) + SubString(ListItem(5).Path,videodb://movies/sets)] | [!Skin.HasSetting(usecases)]</visible>
			<visible>!Skin.HasSetting(genrethumbs)</visible>
			<!-- MikeBZH44 end -->
		</control>
		<control type="image">
			<include>MovieShowcaseThumb</include>
			<texture background="true" diffuse="thumbs/thumb_mask.png" fallback="thumbs/fallback_poster_tp_solid.jpg">$VAR[ShowcaseItem5Var1]</texture>
			<!-- MikeBZH44 start : No case for movieset -->
			<visible>![Skin.HasSetting(NoCaseForMovieset) + SubString(ListItem(5).Path,videodb://movies/sets)] | [!Skin.HasSetting(usecases)]</visible>
			<visible>Skin.HasSetting(genrethumbs)</visible>
			<!-- MikeBZH44 end -->
		</control>
		<control type="image">
			<texture background="true">wall/boxes/wall_movie_overlay.png</texture>
			<include>TvShowShowcaseThumb</include>
		</control>
		<control type="image">
			<include>MovieShowcaseThumb</include>
			<texture background="true" diffuse="thumbs/thumb_mask.png" fallback="thumbs/fallback_poster_tp_solid.jpg">$VAR[ShowcaseItem5Var]</texture>
			<visible>Container.Content(sets) + Skin.HasSetting(NoCaseForMovieset)</visible>
			<visible>!Skin.HasSetting(genrethumbs)</visible>
		</control>
		<control type="image">
			<include>MovieShowcaseThumb</include>
			<texture background="true" diffuse="thumbs/thumb_mask.png" fallback="thumbs/fallback_poster_tp_solid.jpg">$VAR[ShowcaseItem5Var1]</texture>
			<visible>Container.Content(sets) + Skin.HasSetting(NoCaseForMovieset)</visible>
			<visible>Skin.HasSetting(genrethumbs)</visible>
		</control>
		<!-- MikeBZH44 start : If no case for movieset then larger thumbnail -->
		<control type="image">
			<include>MovieShowcaseDVDCoverVarsSets</include>
			<texture background="true" fallback="thumbs/fallback_poster_tp_solid.jpg">$VAR[ShowcaseItem5Var]</texture>
			<visible>[Skin.HasSetting(usecases) + Container.Content(movies) + Skin.HasSetting(NoCaseForMovieset) + SubString(ListItem(5).Path,videodb://movies/sets)]</visible>
			<visible>!Skin.HasSetting(genrethumbs)</visible>
		</control>
		<control type="image">
			<include>MovieShowcaseDVDCoverVarsSets</include>
			<texture background="true" fallback="thumbs/fallback_poster_tp_solid.jpg">$VAR[ShowcaseItem5Var1]</texture>
			<visible>[Skin.HasSetting(usecases) + Container.Content(movies) + Skin.HasSetting(NoCaseForMovieset) + SubString(ListItem(5).Path,videodb://movies/sets)]</visible>
			<visible>Skin.HasSetting(genrethumbs)</visible>
		</control>
		<!-- MikeBZH44 end -->
		<!-- Movie Showcase Variables: Thumb glass overlays -->
		<control type="image">
			<include>MovieShowcaseThumbDimensions</include>
			<texture diffuse="thumbs/thumb_mask.png">thumbs/thumb_glass.png</texture>
			<!-- MikeBZH44 start : No case for movieset -->
			<visible>![Skin.HasSetting(NoCaseForMovieset) + SubString(ListItem(5).Path,videodb://movies/sets)]</visible>
			<!-- MikeBZH44 end -->
		</control>
		<control type="image">
			<include>MovieShowcaseDVDCoverVars</include>
			<texture background="true">thumbs/boxes/$VAR[ShowcaseCasePathVar]/$VAR[ShowcaseCase5Var]</texture>
			<!-- MikeBZH44 start : No case for movieset -->
			<visible>![Skin.HasSetting(NoCaseForMovieset) + SubString(ListItem(5).Path,videodb://movies/sets)]</visible>
			<!-- MikeBZH44 end -->
		</control>
		<control type="image">
			<include>MovieShowcaseThumbReflection</include>
			<texture background="true" flipy="true" diffuse="thumbs/movieposter_mask_reflect.png" fallback="thumbs/fallback_poster_tp_solid.jpg">$VAR[ShowcaseItem5Var]</texture>
			<!-- MikeBZH44 start : No case for movieset -->
			<visible>![Skin.HasSetting(NoCaseForMovieset) + SubString(ListItem(5).Path,videodb://movies/sets)]</visible>
			<visible>!Skin.HasSetting(genrethumbs)</visible>
			<!-- MikeBZH44 end -->
		</control>
		<control type="image">
			<include>MovieShowcaseThumbReflection</include>
			<texture background="true" flipy="true" diffuse="thumbs/movieposter_mask_reflect.png" fallback="thumbs/fallback_poster_tp_solid.jpg">$VAR[ShowcaseItem5Var1]</texture>
			<!-- MikeBZH44 start : No case for movieset -->
			<visible>![Skin.HasSetting(NoCaseForMovieset) + SubString(ListItem(5).Path,videodb://movies/sets)]</visible>
			<visible>Skin.HasSetting(genrethumbs)</visible>
			<!-- MikeBZH44 end -->
		</control>
		<!-- MikeBZH44 start : If no case for movieset then larger thumbnail -->
		<control type="image">
			<include>MovieShowcaseThumbReflectionMovieset</include>
			<texture background="true" flipy="true" diffuse="thumbs/movieposter_mask_reflect.png" fallback="thumbs/fallback_poster_tp_solid.jpg">$VAR[ShowcaseItem5Var]</texture>
			<visible>[Skin.HasSetting(usecases) + Container.Content(movies) + Skin.HasSetting(NoCaseForMovieset) + SubString(ListItem(5).Path,videodb://movies/sets)]</visible>
			<visible>!Skin.HasSetting(genrethumbs)</visible>
		</control>
		<control type="image">
			<include>MovieShowcaseThumbReflectionMovieset</include>
			<texture background="true" flipy="true" diffuse="thumbs/movieposter_mask_reflect.png" fallback="thumbs/fallback_poster_tp_solid.jpg">$VAR[ShowcaseItem5Var1]</texture>
			<visible>[Skin.HasSetting(usecases) + Container.Content(movies) + Skin.HasSetting(NoCaseForMovieset) + SubString(ListItem(5).Path,videodb://movies/sets)]</visible>
			<visible>Skin.HasSetting(genrethumbs)</visible>
		</control>
		<!-- MikeBZH44 end -->
		<control type="image">
			<include>MovieShowcaseThumbReflectionDVD</include>
			<!-- MikeBZH44 start : No case for movieset -->
			<visible>![Skin.HasSetting(NoCaseForMovieset) + SubString(ListItem(5).Path,videodb://movies/sets)]</visible>
			<!-- MikeBZH44 end -->
		</control>
		<control type="image">
			<include>WatchedOverlayShowCase</include>
			<include>OverlayVisibility5</include>
			<!-- MikeBZH44 start : No case for movieset -->
			<visible>![Skin.HasSetting(NoCaseForMovieset) + SubString(ListItem(5).Path,videodb://movies/sets)]</visible>
			<!-- MikeBZH44 end -->
		</control>
		<control type="image">
			<include>WatchedOverlayShowCase</include>
			<texture>overlayprogress.png</texture>
			<visible>Container.ListItem(5).IsResumable + Skin.HasSetting(InProgressFlag)</visible>
		</control>
		<control type="image">
			<include>WatchedOverlayShowCase</include>
			<texture background="true" diffuse="thumbs/ExtraOverlayWatched.png">$VAR[VideoextrasOverlay5]</texture>
			<visible>System.HasAddon(script.videoextras)</visible>
		</control>
	</include>
	<include name="MovieShowCaseItem6">
		<include>MovieShowCaseGlow</include>
		<control type="image">
			<include>MovieShowcaseThumb</include>
			<texture background="true" diffuse="thumbs/thumb_mask.png" fallback="thumbs/fallback_poster_tp_solid.jpg">$VAR[ShowcaseItem6Var]</texture>
			<!-- MikeBZH44 start : No case for movieset -->
			<visible>![Skin.HasSetting(NoCaseForMovieset) + SubString(ListItem(6).Path,videodb://movies/sets)] | [!Skin.HasSetting(usecases)]</visible>
			<visible>!Skin.HasSetting(genrethumbs)</visible>
			<!-- MikeBZH44 end -->
		</control>
		<control type="image">
			<include>MovieShowcaseThumb</include>
			<texture background="true" diffuse="thumbs/thumb_mask.png" fallback="thumbs/fallback_poster_tp_solid.jpg">$VAR[ShowcaseItem6Var1]</texture>
			<!-- MikeBZH44 start : No case for movieset -->
			<visible>![Skin.HasSetting(NoCaseForMovieset) + SubString(ListItem(6).Path,videodb://movies/sets)] | [!Skin.HasSetting(usecases)]</visible>
			<visible>Skin.HasSetting(genrethumbs)</visible>
			<!-- MikeBZH44 end -->
		</control>
		<control type="image">
			<texture background="true">wall/boxes/wall_movie_overlay.png</texture>
			<include>TvShowShowcaseThumb</include>
		</control>
		<control type="image">
			<include>MovieShowcaseThumb</include>
			<texture background="true" diffuse="thumbs/thumb_mask.png" fallback="thumbs/fallback_poster_tp_solid.jpg">$VAR[ShowcaseItem6Var]</texture>
			<visible>Container.Content(sets) + Skin.HasSetting(NoCaseForMovieset)</visible>
			<visible>!Skin.HasSetting(genrethumbs)</visible>
		</control>
		<control type="image">
			<include>MovieShowcaseThumb</include>
			<texture background="true" diffuse="thumbs/thumb_mask.png" fallback="thumbs/fallback_poster_tp_solid.jpg">$VAR[ShowcaseItem6Var1]</texture>
			<visible>Container.Content(sets) + Skin.HasSetting(NoCaseForMovieset)</visible>
			<visible>Skin.HasSetting(genrethumbs)</visible>
		</control>
		<!-- MikeBZH44 start : If no case for movieset then larger thumbnail -->
		<control type="image">
			<include>MovieShowcaseDVDCoverVarsSets</include>
			<texture background="true" fallback="thumbs/fallback_poster_tp_solid.jpg">$VAR[ShowcaseItem6Var]</texture>
			<visible>[Skin.HasSetting(usecases) + Container.Content(movies) + Skin.HasSetting(NoCaseForMovieset) + SubString(ListItem(6).Path,videodb://movies/sets)]</visible>
			<visible>!Skin.HasSetting(genrethumbs)</visible>
		</control>
		<control type="image">
			<include>MovieShowcaseDVDCoverVarsSets</include>
			<texture background="true" fallback="thumbs/fallback_poster_tp_solid.jpg">$VAR[ShowcaseItem6Var1]</texture>
			<visible>[Skin.HasSetting(usecases) + Container.Content(movies) + Skin.HasSetting(NoCaseForMovieset) + SubString(ListItem(6).Path,videodb://movies/sets)]</visible>
			<visible>Skin.HasSetting(genrethumbs)</visible>
		</control>
		<!-- MikeBZH44 end -->
		<!-- Movie Showcase Variables: Thumb glass overlays -->
		<control type="image">
			<include>MovieShowcaseThumbDimensions</include>
			<texture diffuse="thumbs/thumb_mask.png">thumbs/thumb_glass.png</texture>
			<!-- MikeBZH44 start : No case for movieset -->
			<visible>![Skin.HasSetting(NoCaseForMovieset) + SubString(ListItem(6).Path,videodb://movies/sets)]</visible>
			<!-- MikeBZH44 end -->
		</control>
		<control type="image">
			<include>MovieShowcaseDVDCoverVars</include>
			<texture background="true">thumbs/boxes/$VAR[ShowcaseCasePathVar]/$VAR[ShowcaseCase6Var]</texture>
			<!-- MikeBZH44 start : No case for movieset -->
			<visible>![Skin.HasSetting(NoCaseForMovieset) + SubString(ListItem(6).Path,videodb://movies/sets)]</visible>
			<!-- MikeBZH44 end -->
		</control>
		<control type="image">
			<include>MovieShowcaseThumbReflection</include>
			<texture background="true" flipy="true" diffuse="thumbs/movieposter_mask_reflect.png" fallback="thumbs/fallback_poster_tp_solid.jpg">$VAR[ShowcaseItem6Var]</texture>
			<!-- MikeBZH44 start : No case for movieset -->
			<visible>![Skin.HasSetting(NoCaseForMovieset) + SubString(ListItem(6).Path,videodb://movies/sets)]</visible>
			<visible>!Skin.HasSetting(genrethumbs)</visible>
			<!-- MikeBZH44 end -->
		</control>
		<control type="image">
			<include>MovieShowcaseThumbReflection</include>
			<texture background="true" flipy="true" diffuse="thumbs/movieposter_mask_reflect.png" fallback="thumbs/fallback_poster_tp_solid.jpg">$VAR[ShowcaseItem6Var1]</texture>
			<!-- MikeBZH44 start : No case for movieset -->
			<visible>![Skin.HasSetting(NoCaseForMovieset) + SubString(ListItem(6).Path,videodb://movies/sets)]</visible>
			<visible>Skin.HasSetting(genrethumbs)</visible>
			<!-- MikeBZH44 end -->
		</control>
		<!-- MikeBZH44 start : If no case for movieset then larger thumbnail -->
		<control type="image">
			<include>MovieShowcaseThumbReflectionMovieset</include>
			<texture background="true" flipy="true" diffuse="thumbs/movieposter_mask_reflect.png" fallback="thumbs/fallback_poster_tp_solid.jpg">$VAR[ShowcaseItem6Var]</texture>
			<visible>[Skin.HasSetting(usecases) + Container.Content(movies) + Skin.HasSetting(NoCaseForMovieset) + SubString(ListItem(6).Path,videodb://movies/sets)]</visible>
			<visible>!Skin.HasSetting(genrethumbs)</visible>
		</control>
		<control type="image">
			<include>MovieShowcaseThumbReflectionMovieset</include>
			<texture background="true" flipy="true" diffuse="thumbs/movieposter_mask_reflect.png" fallback="thumbs/fallback_poster_tp_solid.jpg">$VAR[ShowcaseItem6Var1]</texture>
			<visible>[Skin.HasSetting(usecases) + Container.Content(movies) + Skin.HasSetting(NoCaseForMovieset) + SubString(ListItem(6).Path,videodb://movies/sets)]</visible>
			<visible>Skin.HasSetting(genrethumbs)</visible>
		</control>
		<!-- MikeBZH44 end -->
		<control type="image">
			<include>MovieShowcaseThumbReflectionDVD</include>
			<!-- MikeBZH44 start : No case for movieset -->
			<visible>![Skin.HasSetting(NoCaseForMovieset) + SubString(ListItem(6).Path,videodb://movies/sets)]</visible>
			<!-- MikeBZH44 end -->
		</control>
		<control type="image">
			<include>WatchedOverlayShowCase</include>
			<include>OverlayVisibility6</include>
			<!-- MikeBZH44 start : No case for movieset -->
			<visible>![Skin.HasSetting(NoCaseForMovieset) + SubString(ListItem(6).Path,videodb://movies/sets)]</visible>
			<!-- MikeBZH44 end -->
		</control>
		<control type="image">
			<include>WatchedOverlayShowCase</include>
			<texture>overlayprogress.png</texture>
			<visible>Container.ListItem(6).IsResumable + Skin.HasSetting(InProgressFlag)</visible>
		</control>
		<control type="image">
			<include>WatchedOverlayShowCase</include>
			<texture background="true" diffuse="thumbs/ExtraOverlayWatched.png">$VAR[VideoextrasOverlay6]</texture>
			<visible>System.HasAddon(script.videoextras)</visible>
		</control>
	</include>
	<include name="MovieShowCaseItem7">
		<include>MovieShowCaseGlow</include>
		<control type="image">
			<include>MovieShowcaseThumb</include>
			<texture background="true" diffuse="thumbs/thumb_mask.png" fallback="thumbs/fallback_poster_tp_solid.jpg">$VAR[ShowcaseItem7Var]</texture>
			<!-- MikeBZH44 start : No case for movieset -->
			<visible>![Skin.HasSetting(NoCaseForMovieset) + SubString(ListItem(7).Path,videodb://movies/sets)] | [!Skin.HasSetting(usecases)]</visible>
			<visible>!Skin.HasSetting(genrethumbs)</visible>
			<!-- MikeBZH44 end -->
		</control>
		<control type="image">
			<include>MovieShowcaseThumb</include>
			<texture background="true" diffuse="thumbs/thumb_mask.png" fallback="thumbs/fallback_poster_tp_solid.jpg">$VAR[ShowcaseItem7Var1]</texture>
			<!-- MikeBZH44 start : No case for movieset -->
			<visible>![Skin.HasSetting(NoCaseForMovieset) + SubString(ListItem(7).Path,videodb://movies/sets)] | [!Skin.HasSetting(usecases)]</visible>
			<visible>Skin.HasSetting(genrethumbs)</visible>
			<!-- MikeBZH44 end -->
		</control>
		<control type="image">
			<texture background="true">wall/boxes/wall_movie_overlay.png</texture>
			<include>TvShowShowcaseThumb</include>
		</control>
		<control type="image">
			<include>MovieShowcaseThumb</include>
			<texture background="true" diffuse="thumbs/thumb_mask.png" fallback="thumbs/fallback_poster_tp_solid.jpg">$VAR[ShowcaseItem7Var]</texture>
			<visible>Container.Content(sets) + Skin.HasSetting(NoCaseForMovieset)</visible>
			<visible>!Skin.HasSetting(genrethumbs)</visible>
		</control>
		<control type="image">
			<include>MovieShowcaseThumb</include>
			<texture background="true" diffuse="thumbs/thumb_mask.png" fallback="thumbs/fallback_poster_tp_solid.jpg">$VAR[ShowcaseItem7Var1]</texture>
			<visible>Container.Content(sets) + Skin.HasSetting(NoCaseForMovieset)</visible>
			<visible>Skin.HasSetting(genrethumbs)</visible>
		</control>
		<!-- MikeBZH44 start : If no case for movieset then larger thumbnail -->
		<control type="image">
			<include>MovieShowcaseDVDCoverVarsSets</include>
			<texture background="true" fallback="thumbs/fallback_poster_tp_solid.jpg">$VAR[ShowcaseItem7Var]</texture>
			<visible>[Skin.HasSetting(usecases) + Container.Content(movies) + Skin.HasSetting(NoCaseForMovieset) + SubString(ListItem(7).Path,videodb://movies/sets)]</visible>
			<visible>!Skin.HasSetting(genrethumbs)</visible>
		</control>
		<control type="image">
			<include>MovieShowcaseDVDCoverVarsSets</include>
			<texture background="true" fallback="thumbs/fallback_poster_tp_solid.jpg">$VAR[ShowcaseItem7Var1]</texture>
			<visible>[Skin.HasSetting(usecases) + Container.Content(movies) + Skin.HasSetting(NoCaseForMovieset) + SubString(ListItem(7).Path,videodb://movies/sets)]</visible>
			<visible>Skin.HasSetting(genrethumbs)</visible>
		</control>
		<!-- MikeBZH44 end -->
		<!-- Movie Showcase Variables: Thumb glass overlays -->
		<control type="image">
			<include>MovieShowcaseThumbDimensions</include>
			<texture diffuse="thumbs/thumb_mask.png">thumbs/thumb_glass.png</texture>
			<!-- MikeBZH44 start : No case for movieset -->
			<visible>![Skin.HasSetting(NoCaseForMovieset) + SubString(ListItem(7).Path,videodb://movies/sets)]</visible>
			<!-- MikeBZH44 end -->
		</control>
		<control type="image">
			<include>MovieShowcaseDVDCoverVars</include>
			<texture background="true">thumbs/boxes/$VAR[ShowcaseCasePathVar]/$VAR[ShowcaseCase7Var]</texture>
			<!-- MikeBZH44 start : No case for movieset -->
			<visible>![Skin.HasSetting(NoCaseForMovieset) + SubString(ListItem(7).Path,videodb://movies/sets)]</visible>
			<!-- MikeBZH44 end -->
		</control>
		<control type="image">
			<include>MovieShowcaseThumbReflection</include>
			<texture background="true" flipy="true" diffuse="thumbs/movieposter_mask_reflect.png" fallback="thumbs/fallback_poster_tp_solid.jpg">$VAR[ShowcaseItem7Var]</texture>
			<!-- MikeBZH44 start : No case for movieset -->
			<visible>![Skin.HasSetting(NoCaseForMovieset) + SubString(ListItem(7).Path,videodb://movies/sets)]</visible>
			<visible>!Skin.HasSetting(genrethumbs)</visible>
			<!-- MikeBZH44 end -->
		</control>
		<control type="image">
			<include>MovieShowcaseThumbReflection</include>
			<texture background="true" flipy="true" diffuse="thumbs/movieposter_mask_reflect.png" fallback="thumbs/fallback_poster_tp_solid.jpg">$VAR[ShowcaseItem7Var1]</texture>
			<!-- MikeBZH44 start : No case for movieset -->
			<visible>![Skin.HasSetting(NoCaseForMovieset) + SubString(ListItem(7).Path,videodb://movies/sets)]</visible>
			<visible>Skin.HasSetting(genrethumbs)</visible>
			<!-- MikeBZH44 end -->
		</control>
		<!-- MikeBZH44 start : If no case for movieset then larger thumbnail -->
		<control type="image">
			<include>MovieShowcaseThumbReflectionMovieset</include>
			<texture background="true" flipy="true" diffuse="thumbs/movieposter_mask_reflect.png" fallback="thumbs/fallback_poster_tp_solid.jpg">$VAR[ShowcaseItem7Var]</texture>
			<visible>[Skin.HasSetting(usecases) + Container.Content(movies) + Skin.HasSetting(NoCaseForMovieset) + SubString(ListItem(7).Path,videodb://movies/sets)]</visible>
			<visible>!Skin.HasSetting(genrethumbs)</visible>
		</control>
		<control type="image">
			<include>MovieShowcaseThumbReflectionMovieset</include>
			<texture background="true" flipy="true" diffuse="thumbs/movieposter_mask_reflect.png" fallback="thumbs/fallback_poster_tp_solid.jpg">$VAR[ShowcaseItem7Var1]</texture>
			<visible>[Skin.HasSetting(usecases) + Container.Content(movies) + Skin.HasSetting(NoCaseForMovieset) + SubString(ListItem(7).Path,videodb://movies/sets)]</visible>
			<visible>Skin.HasSetting(genrethumbs)</visible>
		</control>
		<!-- MikeBZH44 end -->
		<control type="image">
			<include>MovieShowcaseThumbReflectionDVD</include>
			<!-- MikeBZH44 start : No case for movieset -->
			<visible>![Skin.HasSetting(NoCaseForMovieset) + SubString(ListItem(7).Path,videodb://movies/sets)]</visible>
			<!-- MikeBZH44 end -->
		</control>
		<control type="image">
			<include>WatchedOverlayShowCase</include>
			<include>OverlayVisibility7</include>
			<!-- MikeBZH44 start : No case for movieset -->
			<visible>![Skin.HasSetting(NoCaseForMovieset) + SubString(ListItem(7).Path,videodb://movies/sets)]</visible>
			<!-- MikeBZH44 end -->
		</control>
		<control type="image">
			<include>WatchedOverlayShowCase</include>
			<texture>overlayprogress.png</texture>
			<visible>Container.ListItem(7).IsResumable + Skin.HasSetting(InProgressFlag)</visible>
		</control>
		<control type="image">
			<include>WatchedOverlayShowCase</include>
			<texture background="true" diffuse="thumbs/ExtraOverlayWatched.png">$VAR[VideoextrasOverlay7]</texture>
			<visible>System.HasAddon(script.videoextras)</visible>
		</control>
	</include>
	<!-- Rolling discart -->
	<include name="MovieShowcaseDisc">
		<control type="image">
			<left>26</left>
			<top>73</top>
			<width>240</width>
			<height>240</height>
			<aspectratio>keep</aspectratio>
			<texture background="true">$INFO[ListItem.Art(discart)]</texture>
			<fadetime>4000</fadetime>
			<!-- MikeBZH44 Add !Skin.HasSetting(OpenCase) condition -->
			<animation type="Conditional" condition="Control.IsVisible(961) + !Control.IsVisible(6000) + Skin.HasSetting(OpenCase)" reversible="true">
			<effect type="rotate" start="0" center="auto" end="720" delay="2500" time="4300" tween="cubic" easing="inout"/>
			</animation>
			<visible>Skin.HasSetting(noflow)</visible>
		</control>
		<!-- Mad - Fake version -->
		<control type="image">
			<left>26</left>
			<top>73</top>
			<width>240</width>
			<height>240</height>
			<aspectratio scalediffuse="false" aligny="top">scale</aspectratio>
			<texture background="true" diffuse="thumbs/sets/cdart-mask.png">$INFO[ListItem.Art(poster)]</texture>
			<fadetime>4000</fadetime>
			<animation type="Conditional" condition="Control.IsVisible(961) + !Control.IsVisible(6000) + Skin.HasSetting(OpenCase)" reversible="true">
				<effect type="rotate" start="0" center="auto" end="720" delay="2500" time="4300" tween="cubic" easing="inout"/>
			</animation>
			<visible>Skin.HasSetting(noflow) + IsEmpty(ListItem.Art(discart)) + Skin.HasSetting(Fakediscart)</visible>
		</control>
		<control type="image">
			<left>26</left>
			<top>73</top>
			<width>240</width>
			<height>240</height>
			<aspectratio scalediffuse="false" aligny="top">scale</aspectratio>
			<texture background="true">$VAR[FakeDiscArtOverlay]</texture>
			<fadetime>4000</fadetime>
			<!-- MikeBZH44 Add !Skin.HasSetting(OpenCase) condition -->
			<animation type="Conditional" condition="Control.IsVisible(961) + !Control.IsVisible(6000) + Skin.HasSetting(OpenCase)" reversible="true">
				<effect type="rotate" start="0" center="auto" end="720" delay="2500" time="4300" tween="cubic" easing="inout"/>
			</animation>
			<visible>Skin.HasSetting(noflow) + IsEmpty(ListItem.Art(discart)) + Skin.HasSetting(Fakediscart) + !IsEmpty(ListItem.Art(poster))</visible>
		</control>
		<control type="image">
			<left>26</left>
			<top>73</top>
			<width>240</width>
			<height>240</height>
			<aspectratio scalediffuse="false" aligny="top">scale</aspectratio>
			<texture background="true">$VAR[FakeDischand]</texture>
			<fadetime>4000</fadetime>
			<!-- MikeBZH44 Add !Skin.HasSetting(OpenCase) condition -->
			<animation type="Conditional" condition="Control.IsVisible(961) + !Control.IsVisible(6000) + Skin.HasSetting(OpenCase)" reversible="true">
				<effect type="rotate" start="0" center="auto" end="720" delay="2500" time="4300" tween="cubic" easing="inout"/>
			</animation>
			<visible>Skin.HasSetting(noflow) + IsEmpty(ListItem.Art(discart)) + Skin.HasSetting(Fakedischandwriting) + Container.Content(movies) + !SubString(ListItem.Path,videodb://movies/sets/) + !Control.HasFocus(5001) + !Skin.Hassetting(Fakehanddisccolor)</visible>
		</control>
		<control type="image">
			<left>26</left>
			<top>73</top>
			<width>240</width>
			<height>240</height>
			<aspectratio scalediffuse="false" aligny="top">scale</aspectratio>
			<texture background="true">$VAR[FakeDischandcolor]</texture>
			<fadetime>4000</fadetime>
			<!-- MikeBZH44 Add !Skin.HasSetting(OpenCase) condition -->
			<animation type="Conditional" condition="Control.IsVisible(961) + !Control.IsVisible(6000) + Skin.HasSetting(OpenCase)" reversible="true">
				<effect type="rotate" start="0" center="auto" end="720" delay="2500" time="4300" tween="cubic" easing="inout"/>
			</animation>
			<visible>Skin.HasSetting(noflow) + IsEmpty(ListItem.Art(discart)) + Skin.HasSetting(Fakedischandwriting) + Container.Content(movies) + !SubString(ListItem.Path,videodb://movies/sets/) + !Control.HasFocus(5001) + Skin.HasSetting(fakehanddisccolor)</visible>
		</control>
		<control type="textbox">
			<animation type="Conditional" condition="Skin.HasSetting(OpenCase)" reversible="true">
				<effect type="rotate" start="0" center="146,191" end="720" delay="2500" time="4300" tween="cubic" easing="inout"/>
			</animation>
			<left>64</left>
			<top>116</top>
			<width>164</width>
			<height>169</height>
			<font>Hand_18</font>
			<align>center</align>
			<aligny>top</aligny>
			<textcolor>black</textcolor>
			<visible>Skin.Hassetting(noflow) + IsEmpty(ListItem.Art(discart)) + Skin.HasSetting(OpenCase) + Container.Content(movies) + Skin.HasSetting(Fakedischandwriting) + !SubString(ListItem.Path,videodb://movies/sets) + IsEmpty(ListItem.Art(clearlogo))</visible>
            <label>[CR][CR][CR][CR][CR] $INFO[ListItem.Title]</label>
        </control>
		<control type="group">
			<animation type="Conditional" condition="Skin.HasSetting(OpenCase)" reversible="true">
				<effect type="rotate" start="0" center="146,191" end="720" delay="2500" time="4300" tween="cubic" easing="inout"/>
			</animation>
			<left>78</left>
			<top>98</top>
			<width>145</width>
			<height>40</height>
			<align>center</align>
			<aligny>center</aligny>
			<aspectratio aligny="bottom">keep</aspectratio>
			<visible>Skin.HasSetting(noflow) + Container.Content(movies) + !IsEmpty(ListItem.Art(clearlogo)) + IsEmpty(ListItem.Art(discart)) + !SubString(ListItem.Path,videodb://movies/sets) + Skin.HasSetting(Fakedischandwriting)</visible>
			<control type="image">
			<texture background="true" fallback="empty.png">$INFO[ListItem.Art(clearlogo)]</texture>
			</control>
		</control>
		<!--MAD Fake Disc End -->
		<!-- Rolling disc art animation for movies-->
		<control type="image">
			<left>1426</left>
			<top>70</top>
			<width>240</width>
			<height>240</height>
			<aspectratio aligny="bottom">keep</aspectratio>
			<texture background="true">$INFO[ListItem.Art(discart)]</texture>
			<animation type="Conditional" condition="Control.IsVisible(1970)" reversible="false">
				<effect type="slide" start="0,0" end="-1400,0" delay="0" time="2300" tween="cubic" easing="inout"/>
				<effect type="rotate" start="0" center="auto" end="720" delay="0" time="2300" tween="cubic" easing="inout"/>
			</animation>
			<visible>Skin.HasSetting(usecases) + Skin.HasSetting(OpenCase)</visible>
		</control>
		<control type="image">
			<left>1426</left>
			<top>70</top>
			<width>240</width>
			<height>240</height>
			<aspectratio scalediffuse="false" aligny="top">scale</aspectratio>
			<texture background="true" diffuse="thumbs/sets/cdart-mask.png">$INFO[ListItem.Art(poster)]</texture>
			<animation type="Conditional" condition="Control.IsVisible(1970)" reversible="false">
				<effect type="slide" start="0,0" end="-1400,0" delay="0" time="2300" tween="cubic" easing="inout"/>
				<effect type="rotate" start="0" center="auto" end="720" delay="0" time="2300" tween="cubic" easing="inout"/>
			</animation>
			<bordersize>7</bordersize>
			<visible>Skin.HasSetting(usecases) + Skin.HasSetting(OpenCase) + IsEmpty(ListItem.Art(discart)) + !IsEmpty(ListItem.Art(poster)) + !SubString(ListItem(0).Path,videodb://movies/sets) + Container.Content(movies) + Skin.HasSetting(Fakediscart)</visible>
		</control>
		<control type="image">
			<left>1426</left>
			<top>70</top>
			<width>240</width>
			<height>240</height>
			<aspectratio scalediffuse="false" aligny="top">scale</aspectratio>
			<texture background="true">$VAR[FakeDiscArtOverlay]</texture>
			<animation type="Conditional" condition="Control.IsVisible(1970)" reversible="false">
				<effect type="slide" start="0,0" end="-1400,0" delay="0" time="2300" tween="cubic" easing="inout"/>
				<effect type="rotate" start="0" center="auto" end="720" delay="0" time="2300" tween="cubic" easing="inout"/>
			</animation>
			<bordersize>7</bordersize>
			<visible>Skin.HasSetting(usecases) + Skin.HasSetting(OpenCase) + IsEmpty(ListItem.Art(discart)) + !IsEmpty(ListItem.Art(poster)) + !SubString(ListItem(0).Path,videodb://movies/sets) + Container.Content(movies) + Skin.Hassetting(fakediscart)</visible>
		</control>
		<control type="image">
			<left>1426</left>
			<top>70</top>
			<width>240</width>
			<height>240</height>
			<aspectratio scalediffuse="false" aligny="top">scale</aspectratio>
			<texture background="true">$VAR[FakeDischand]</texture>
			<animation type="Conditional" condition="Control.IsVisible(1970)" reversible="false">
				<effect type="slide" start="0,0" end="-1400,0" delay="0" time="2300" tween="cubic" easing="inout"/>
				<effect type="rotate" start="0" center="auto" end="720" delay="0" time="2300" tween="cubic" easing="inout"/>
			</animation>
			<bordersize>7</bordersize>
			<visible>Skin.HasSetting(usecases) + Skin.HasSetting(OpenCase) + IsEmpty(ListItem.Art(discart)) + !IsEmpty(ListItem.Art(poster)) + !SubString(ListItem(0).Path,videodb://movies/sets) + Container.Content(movies) + Skin.Hassetting(Fakedischandwriting) + !Skin.Hassetting(Fakehanddisccolor)</visible>
		</control>
		<control type="image">
			<left>1426</left>
			<top>70</top>
			<width>240</width>
			<height>240</height>
			<aspectratio scalediffuse="false" aligny="top">scale</aspectratio>
			<texture background="true">$VAR[FakeDischandcolor]</texture>
			<animation type="Conditional" condition="Control.IsVisible(1970)" reversible="false">
				<effect type="slide" start="0,0" end="-1400,0" delay="0" time="2300" tween="cubic" easing="inout"/>
				<effect type="rotate" start="0" center="auto" end="720" delay="0" time="2300" tween="cubic" easing="inout"/>
			</animation>
			<bordersize>7</bordersize>
			<visible>Skin.HasSetting(usecases) + Skin.HasSetting(OpenCase) + IsEmpty(ListItem.Art(discart)) + !IsEmpty(ListItem.Art(poster)) + !SubString(ListItem(0).Path,videodb://movies/sets) + Container.Content(movies) + Skin.Hassetting(Fakedischandwriting) + Skin.Hassetting(fakehanddisccolor)</visible>
		</control>
		<control type="textbox">
			<animation type="Conditional" condition="Control.IsVisible(1970)" reversible="false">
				<effect type="slide" start="0,0" end="-1400,0" delay="0" time="2300" tween="cubic" easing="inout"/>
				<effect type="rotate" start="0" center="1546,190" end="720" delay="0" time="2300" tween="cubic" easing="inout"/>
			</animation>
			<left>1464</left>
			<top>112</top>
			<width>164</width>
			<height>170</height>
			<font>Hand_18</font>
			<align>center</align>
			<aligny>top</aligny>
			<visible>Skin.HasSetting(usecases) + Skin.HasSetting(OpenCase) + IsEmpty(ListItem.Art(discart)) + !IsEmpty(ListItem.Art(poster)) + !SubString(ListItem(0).Path,videodb://movies/sets) + Container.Content(movies) + Skin.Hassetting(Fakedischandwriting) + IsEmpty(ListItem.Art(clearlogo))</visible>
			<label>[CR][CR][CR][CR][CR] $INFO[ListItem.Label]</label>
			<textcolor>black</textcolor>
		</control>
		<control type="image">
			<animation type="Conditional" condition="Control.IsVisible(1970)" reversible="false">
				<effect type="slide" start="0,0" end="-1400,0" delay="0" time="2300" tween="cubic" easing="inout"/>
				<effect type="rotate" start="0" center="1546,190" end="720" delay="0" time="2300" tween="cubic" easing="inout"/>
			</animation>
			<left>1470</left>
			<top>100</top>
			<width>146</width>
			<height>40</height>
			<align>center</align>
			<aligny>center</aligny>
			<aspectratio>keep</aspectratio>
			<visible>Skin.HasSetting(usecases) + Skin.HasSetting(OpenCase) + IsEmpty(ListItem.Art(discart)) + !IsEmpty(ListItem.Art(poster)) + !SubString(ListItem(0).Path,videodb://movies/sets) + Container.Content(movies) + Skin.Hassetting(Fakedischandwriting) + !IsEmpty(ListItem.Art(clearlogo))</visible>
			<texture background="true" fallback="empty.png">$INFO[ListItem.Art(clearlogo)]</texture>
		</control>
		<control type="image">
			<left>1426</left>
			<top>70</top>
			<width>240</width>
			<height>240</height>
			<aspectratio aligny="bottom">keep</aspectratio>
			<texture background="true">$INFO[Window(home).Property(Set.Movie.1.Art(discart))]</texture>
			<animation type="Conditional" condition="Control.IsVisible(1970) + !IsEmpty(Window(home).Property(Set.Movie.1.Art(discart)))" reversible="false">
				<effect type="slide" start="0,0" end="-1400,0" delay="0" time="2300" tween="cubic" easing="inout"/>
				<effect type="rotate" start="0" center="auto" end="720" delay="0" time="2300" tween="cubic" easing="inout"/>
			</animation>
			<visible>!Skin.HasSetting(NoCaseForMovieset) + Skin.HasSetting(usecases) + Skin.HasSetting(OpenCase)</visible>
		</control>
		<control type="image">
			<left>1426</left>
			<top>70</top>
			<width>240</width>
			<height>240</height>
			<aspectratio aligny="bottom">keep</aspectratio>
			<texture background="true">$INFO[Window(home).Property(Set.Movie.2.Art(discart))]</texture>
			<animation type="Conditional" condition="Control.IsVisible(1970) + !IsEmpty(Window(home).Property(Set.Movie.2.Art(discart)))" reversible="false">
				<effect type="slide" start="0,0" end="-1400,0" delay="500" time="2300" tween="cubic" easing="inout"/>
				<effect type="rotate" start="0" center="auto" end="720" delay="500" time="2300" tween="cubic" easing="inout"/>
			</animation>
			<visible>!Skin.HasSetting(NoCaseForMovieset) + Skin.HasSetting(usecases) + Skin.HasSetting(OpenCase)</visible>
		</control>
		<control type="image">
			<left>1426</left>
			<top>70</top>
			<width>240</width>
			<height>240</height>
			<aspectratio aligny="bottom">keep</aspectratio>
			<texture background="true">$INFO[Window(home).Property(Set.Movie.3.Art(discart))]</texture>
			<animation type="Conditional" condition="Control.IsVisible(1970) + !IsEmpty(Window(home).Property(Set.Movie.3.Art(discart)))" reversible="false">
				<effect type="slide" start="0,0" end="-1400,0" delay="1000" time="2300" tween="cubic" easing="inout"/>
				<effect type="rotate" start="0" center="auto" end="720" delay="1000" time="2300" tween="cubic" easing="inout"/>
			</animation>
			<visible>!Skin.HasSetting(NoCaseForMovieset) + Skin.HasSetting(usecases) + Skin.HasSetting(OpenCase)</visible>
		</control>
		<control type="image">
			<left>1426</left>
			<top>70</top>
			<width>240</width>
			<height>240</height>
			<aspectratio aligny="bottom">keep</aspectratio>
			<texture background="true">$INFO[Window(home).Property(Set.Movie.4.Art(discart))]</texture>
			<animation type="Conditional" condition="Control.IsVisible(1970) + !IsEmpty(Window(home).Property(Set.Movie.4.Art(discart)))" reversible="false">
				<effect type="slide" start="0,0" end="-1400,0" delay="1500" time="2300" tween="cubic" easing="inout"/>
				<effect type="rotate" start="0" center="auto" end="720" delay="1500" time="2300" tween="cubic" easing="inout"/>
			</animation>
			<visible>!Skin.HasSetting(NoCaseForMovieset) + Skin.HasSetting(usecases) + Skin.HasSetting(OpenCase)</visible>
		</control>
		<control type="image">
			<left>1426</left>
			<top>70</top>
			<width>240</width>
			<height>240</height>
			<aspectratio aligny="bottom">keep</aspectratio>
			<texture background="true">$INFO[Window(home).Property(Set.Movie.5.Art(discart))]</texture>
			<animation type="Conditional" condition="Control.IsVisible(1970) + !IsEmpty(Window(home).Property(Set.Movie.5.Art(discart)))" reversible="false">
				<effect type="slide" start="0,0" end="-1400,0" delay="2000" time="2300" tween="cubic" easing="inout"/>
				<effect type="rotate" start="0" center="auto" end="720" delay="2000" time="2300" tween="cubic" easing="inout"/>
			</animation>
			<visible>!Skin.HasSetting(NoCaseForMovieset) + Skin.HasSetting(usecases) + Skin.HasSetting(OpenCase)</visible>
		</control>
		<control type="image">
			<left>1426</left>
			<top>70</top>
			<width>240</width>
			<height>240</height>
			<aspectratio aligny="bottom">keep</aspectratio>
			<texture background="true">$INFO[Window(home).Property(Set.Movie.6.Art(discart))]</texture>
			<animation type="Conditional" condition="Control.IsVisible(1970) + !IsEmpty(Window(home).Property(Set.Movie.6.Art(discart)))" reversible="false">
				<effect type="slide" start="0,0" end="-1400,0" delay="2500" time="2300" tween="cubic" easing="inout"/>
				<effect type="rotate" start="0" center="auto" end="720" delay="2500" time="2300" tween="cubic" easing="inout"/>
			</animation>
			<visible>!Skin.HasSetting(NoCaseForMovieset) + Skin.HasSetting(usecases) + Skin.HasSetting(OpenCase)</visible>
		</control>
		<control type="image">
			<left>1426</left>
			<top>70</top>
			<width>240</width>
			<height>240</height>
			<aspectratio aligny="bottom">keep</aspectratio>
			<texture background="true">$INFO[Window(home).Property(Set.Movie.7.Art(discart))]</texture>
			<animation type="Conditional" condition="Control.IsVisible(1970) + !IsEmpty(Window(home).Property(Set.Movie.7.Art(discart)))" reversible="false">
				<effect type="slide" start="0,0" end="-1400,0" delay="3000" time="2300" tween="cubic" easing="inout"/>
				<effect type="rotate" start="0" center="auto" end="720" delay="3000" time="2300" tween="cubic" easing="inout"/>
			</animation>
			<visible>!Skin.HasSetting(NoCaseForMovieset) + Skin.HasSetting(usecases) + Skin.HasSetting(OpenCase)</visible>
		</control>
		<control type="image">
			<left>1426</left>
			<top>70</top>
			<width>240</width>
			<height>240</height>
			<aspectratio aligny="bottom">keep</aspectratio>
			<texture background="true">$INFO[Window(home).Property(Set.Movie.8.Art(discart))]</texture>
			<animation type="Conditional" condition="Control.IsVisible(1970) + !IsEmpty(Window(home).Property(Set.Movie.8.Art(discart)))" reversible="false">
				<effect type="slide" start="0,0" end="-1400,0" delay="3500" time="2300" tween="cubic" easing="inout"/>
				<effect type="rotate" start="0" center="auto" end="720" delay="3500" time="2300" tween="cubic" easing="inout"/>
			</animation>
			<visible>!Skin.HasSetting(NoCaseForMovieset) + Skin.HasSetting(usecases) + Skin.HasSetting(OpenCase)</visible>
		</control>
		<control type="image">
			<left>1426</left>
			<top>70</top>
			<width>240</width>
			<height>240</height>
			<aspectratio aligny="bottom">keep</aspectratio>
			<texture background="true">$INFO[Window(home).Property(Set.Movie.9.Art(discart))]</texture>
			<animation type="Conditional" condition="Control.IsVisible(1970) + !IsEmpty(Window(home).Property(Set.Movie.9.Art(discart)))" reversible="false">
				<effect type="slide" start="0,0" end="-1400,0" delay="4000" time="2300" tween="cubic" easing="inout"/>
				<effect type="rotate" start="0" center="auto" end="720" delay="4000" time="2300" tween="cubic" easing="inout"/>
			</animation>
			<visible>!Skin.HasSetting(NoCaseForMovieset) + Skin.HasSetting(usecases) + Skin.HasSetting(OpenCase)</visible>
		</control>
		<control type="image">
			<left>1426</left>
			<top>70</top>
			<width>240</width>
			<height>240</height>
			<aspectratio aligny="bottom">keep</aspectratio>
			<texture background="true">$INFO[Window(home).Property(Set.Movie.10.Art(discart))]</texture>
			<animation type="Conditional" condition="Control.IsVisible(1970) + !IsEmpty(Window(home).Property(Set.Movie.10.Art(discart)))" reversible="false">
				<effect type="slide" start="0,0" end="-1400,0" delay="4500" time="2300" tween="cubic" easing="inout"/>
				<effect type="rotate" start="0" center="auto" end="720" delay="4500" time="2300" tween="cubic" easing="inout"/>
			</animation>
			<visible>!Skin.HasSetting(NoCaseForMovieset) + Skin.HasSetting(usecases) + Skin.HasSetting(OpenCase)</visible>
		</control>
	</include>
	<!-- Open case -->
	<include name="ShowcaseOpenCase">
		<animation type="conditional" reversible="false" condition="Control.IsVisible(1970) + Skin.HasSetting(usecases) + Skin.HasSetting(OpenCase) + [!IsEmpty(Container.ListItem.Art(discart)) | !IsEmpty(Window(home).Property(Set.Movie.1.Art(discart))) | Skin.HasSetting(Fakedischandwriting)| Skin.Hassetting(fakediscart)] + !Skin.HasSetting(clearcases) + Container.Content(movies)">
			<effect type="rotatey" center="-4" start="0" end="75" time="1000" tween="quadratic" easing="out"/>
			<effect type="rotatey" delay="4800" center="-4" start="0" end="-75" time="1000" tween="quadratic" easing="out"/>
		</animation>
		<animation type="conditional" reversible="false" condition="Control.IsVisible(1970) + Skin.HasSetting(usecases) + Skin.HasSetting(OpenCase) + [!IsEmpty(Container.ListItem.Art(discart)) | !IsEmpty(Window(home).Property(Set.Movie.1.Art(discart))) | !IsEmpty(Container.ListItem.Art(poster))] + Skin.HasSetting(clearcases) + Container.Content(movies)">
			<effect type="rotatey" center="-4" start="0" end="75" time="1000" tween="quadratic" easing="out"/>
			<effect type="rotatey" delay="4800" center="-4" start="0" end="-75" time="1000" tween="quadratic" easing="out"/>
		</animation>
	</include>
	<include name="ShowcaseOpenCaseWatched">
		<animation type="conditional" reversible="false" condition="Control.IsVisible(1970) + Skin.HasSetting(usecases) + Skin.HasSetting(OpenCase) + [!IsEmpty(Container.ListItem.Art(discart)) | !IsEmpty(Window(home).Property(Set.Movie.1.Art(discart))) | Skin.HasSetting(Fakedischandwriting)| Skin.Hassetting(fakediscart)] + !Skin.HasSetting(clearcases) + Container.Content(movies)">
			<effect type="rotatey" center="0" start="0" end="75" time="1000" tween="quadratic" easing="out"/>
			<effect type="rotatey" delay="4800" center="0" start="0" end="-75" time="1000" tween="quadratic" easing="out"/>
		</animation>
		<animation type="conditional" reversible="false" condition="Control.IsVisible(1970) + Skin.HasSetting(OpenCase) + [!IsEmpty(Container.ListItem.Art(discart)) | !IsEmpty(Window(home).Property(Set.Movie.1.Art(discart))) | !IsEmpty(Container.ListItem.Art(poster))] + Skin.HasSetting(clearcases) + Container.Content(movies)">
			<effect type="rotatey" center="-11" start="0" end="75" time="1000" tween="quadratic" easing="out"/>
			<effect type="rotatey" delay="4800" center="-11" start="0" end="-75" time="1000" tween="quadratic" easing="out"/>
		</animation>
	</include>
	<!-- MikeBZH44 End -->
	<include name="Boxset_warlion">
		<control type="group">
			<visible>Skin.HasSetting(OpenBoxSet) + Control.IsVisible(501)</visible>
			<control type="group">
				<animation effect="zoom" start="100" end="90" center="145,217" time="500" delay="300" reversible="false" tween="cubic" condition="Control.IsVisible(1970) + !Skin.HasSetting(noflow)">Conditional</animation>
				<animation effect="zoom" start="110" end="110" center="145,217" time="10" reversible="false" tween="cubic" condition="Control.IsVisible(1970) + Skin.HasSetting(noflow)">Conditional</animation>
				<animation effect="zoom" start="100" end="195" time="640" easing="inout" tween="circle" center="140,390" condition="Skin.HasSetting(showcasezoom) + Skin.HasSetting(noflow)">Conditional</animation>
				<visible>[container.content(sets) | container.content(movies)] + Skin.HasSetting(NoCaseForMovieset) + SubString(ListItem.Path,videodb://movies/sets)</visible>
				<control type="group">
					<control type="image">
						<left>0</left>
						<top>-20</top>
						<width>290</width>
						<height>435</height>
						<fadetime>0</fadetime>
						<visible>[container.content(sets) | container.content(movies) | Container.Content(musicvideos)]</visible>
						<aspectratio scalediffuse="false" align="center" aligny="top">scale</aspectratio>
						<texture background="true" fallback="thumbs/sets/backset.png" diffuse="thumbs/sets/backset.png">$INFO[ListItem.Art(extrafanart1)]</texture>
					</control>
					<control type="image">
						<left>20</left>
						<top>-20</top>
						<width>240</width>
						<height>240</height>
						<aspectratio>keep</aspectratio>
						<texture background="true">$INFO[Window(home).Property(Set.Movie.1.Art(discart))]</texture>
					</control>
					<control type="group">
						<left>20</left>
						<top>-20</top>
						<width>240</width>
						<height>240</height>
						<visible>IsEmpty(Window(home).Property(Set.Movie.1.Art(discart)))</visible>
						<control type="image">
							<aspectratio scalediffuse="false" aligny="top">scale</aspectratio>
							<texture background="true" diffuse="thumbs/sets/cdart-mask.png">$INFO[Window(home).Property(Set.Movie.1.Art(poster))]</texture>
						</control>
						<control type="image">
							<texture>thumbs/sets/cdarttop.png</texture>
							<visible>!IsEmpty(Window(home).Property(Set.Movie.1.Art(poster)))</visible>
						</control>
						<control type="image">
							<texture background="true">$VAR[BoxSetFakeDiscArtOverlay]</texture>
							<visible>!IsEmpty(Window(home).Property(Set.Movie.1.Art(poster)))</visible>
						</control>
					</control>
					<control type="image">
						<left>0</left>
						<top>-20</top>
						<width>290</width>
						<height>435</height>
						<fadetime>0</fadetime>
						<visible>[container.content(sets) | container.content(movies) | Container.Content(musicvideos)]</visible>
						<aspectratio scalediffuse="false" aligny="top">scale</aspectratio>
						<texture background="true" fallback="thumbs/sets/disc3.png" diffuse="thumbs/sets/disc3.png">$INFO[ListItem.Art(extrafanart1)]</texture>
						<visible>!IsEmpty(Window(home).Property(Set.Movie.1.Art(poster)))</visible>
					</control>
					<control type="image">
						<left>20</left>
						<top>80</top>
						<width>240</width>
						<height>240</height>
						<aspectratio>keep</aspectratio>
						<texture background="true">$INFO[Window(home).Property(Set.Movie.2.Art(discart))]</texture>
					</control>
					<control type="group">
						<left>20</left>
						<top>80</top>
						<width>240</width>
						<height>240</height>
						<visible>IsEmpty(Window(home).Property(Set.Movie.2.Art(discart)))</visible>
						<control type="image">
							<aspectratio scalediffuse="false" aligny="top">scale</aspectratio>
							<texture background="true" diffuse="thumbs/sets/cdart-mask.png">$INFO[Window(home).Property(Set.Movie.2.Art(poster))]</texture>
						</control>
						<control type="image">
							<texture>thumbs/sets/cdarttop.png</texture>
							<visible>!IsEmpty(Window(home).Property(Set.Movie.2.Art(poster)))</visible>
						</control>
						<control type="image">
							<texture background="true">$VAR[BoxSetFakeDiscArtOverlay]</texture>
							<visible>!IsEmpty(Window(home).Property(Set.Movie.2.Art(poster)))</visible>
						</control>
					</control>
					<control type="image">
						<left>0</left>
						<top>-20</top>
						<width>290</width>
						<height>435</height>
						<fadetime>0</fadetime>
						<visible>[container.content(sets) | container.content(movies) | Container.Content(musicvideos)]</visible>
						<aspectratio scalediffuse="false" aligny="top">scale</aspectratio>
						<texture background="true" fallback="thumbs/sets/disc2.png" diffuse="thumbs/sets/disc2.png">$INFO[ListItem.Art(extrafanart1)]</texture>
						<visible>!IsEmpty(Window(home).Property(Set.Movie.2.Art(poster)))</visible>
					</control>
					<control type="image">
						<left>20</left>
						<top>168</top>
						<width>240</width>
						<height>240</height>
						<aspectratio>keep</aspectratio>
						<texture background="true">$INFO[Window(home).Property(Set.Movie.3.Art(discart))]</texture>
					</control>
					<control type="group">
						<left>20</left>
						<top>168</top>
						<width>240</width>
						<height>240</height>
						<visible>IsEmpty(Window(home).Property(Set.Movie.3.Art(discart)))</visible>
						<control type="image">
							<aspectratio scalediffuse="false" aligny="top">scale</aspectratio>
							<texture background="true" diffuse="thumbs/sets/cdart-mask.png">$INFO[Window(home).Property(Set.Movie.3.Art(poster))]</texture>
						</control>
						<control type="image">
							<texture>thumbs/sets/cdarttop.png</texture>
							<visible>!IsEmpty(Window(home).Property(Set.Movie.3.Art(poster)))</visible>
						</control>
						<control type="image">
							<texture background="true">$VAR[BoxSetFakeDiscArtOverlay]</texture>
							<visible>!IsEmpty(Window(home).Property(Set.Movie.3.Art(poster)))</visible>
						</control>
					</control>
					<control type="image">
						<left>0</left>
						<top>-20</top>
						<width>290</width>
						<height>435</height>
						<fadetime>0</fadetime>
						<visible>[container.content(sets) | container.content(movies) | Container.Content(musicvideos)]</visible>
						<aspectratio scalediffuse="false" aligny="top">scale</aspectratio>
						<texture background="true" fallback="thumbs/sets/disc1.png" diffuse="thumbs/sets/disc1.png">$INFO[ListItem.Art(extrafanart1)]</texture>
						<visible>!IsEmpty(Window(home).Property(Set.Movie.3.Art(poster)))</visible>
					</control>
					<control type="image">
						<left>220</left>
						<top>-22</top>
						<width>117</width>
						<height>437</height>
						<fadetime>0</fadetime>
						<visible>Skin.HasSetting(usecases) + [container.content(sets) | container.content(movies) | Container.Content(musicvideos)]</visible>
						<aspectratio scalediffuse="false" align="center" aligny="top">scale</aspectratio>
						<texture background="true">thumbs/sets/div.png</texture>
						<colordiffuse>55ffffff</colordiffuse>
					</control>
					<control type="image">
						<left>-53</left>
						<top>-22</top>
						<width>117</width>
						<height>437</height>
						<fadetime>0</fadetime>
						<visible>[container.content(sets) | container.content(movies) | Container.Content(musicvideos)]</visible>
						<aspectratio scalediffuse="false" align="center" aligny="top">scale</aspectratio>
						<texture background="true">thumbs/sets/div.png</texture>
						<colordiffuse>55ffffff</colordiffuse>
					</control>
				</control>
				<control type="group">
					<top>2</top>
					<animation type="conditional" reversible="false" condition="[Control.IsVisible(1970)]">
						<effect type="rotatey" center="268" end="-90" time="1040" tween="cubic" easing="in"/>
						<effect type="rotatey" center="268" start="-90" end="-90" time="0" delay="1040"/>
						<effect type="fade" start="0" end="100" time="0" delay="1000"/>
						<effect type="rotatey" center="268" start="90" end="48" time="440" delay="1040" tween="cubic"/>
					</animation>
					<control type="image">
						<left>0</left>
						<top>-20</top>
						<width>250</width>
						<height>433</height>
						<fadetime>0</fadetime>
						<visible>[container.content(sets) | container.content(movies) | Container.Content(musicvideos)]</visible>
						<aspectratio scalediffuse="false" align="left" aligny="top">scale</aspectratio>
						<texture background="true" flipx="true" fallback="thumbs/sets/backset.png" diffuse="thumbs/sets/backset.png">$INFO[ListItem.Art(extrafanart1)]</texture>
					</control>
					<control type="image">
						<left>5</left>
						<top>-20</top>
						<width>240</width>
						<height>240</height>
						<aspectratio>keep</aspectratio>
						<texture background="true" flipx="true">$INFO[Window(home).Property(Set.Movie.7.Art(discart))]</texture>
					</control>
					<control type="group">
						<left>5</left>
						<top>-20</top>
						<width>240</width>
						<height>240</height>
						<visible>IsEmpty(Window(home).Property(Set.Movie.7.Art(discart)))</visible>
						<control type="image">
							<aspectratio scalediffuse="false" aligny="top">scale</aspectratio>
							<texture background="true" flipx="true" diffuse="thumbs/sets/cdart-mask.png">$INFO[Window(home).Property(Set.Movie.7.Art(poster))]</texture>
						</control>
						<control type="image">
							<texture>thumbs/sets/cdarttop.png</texture>
							<visible>!IsEmpty(Window(home).Property(Set.Movie.7.Art(poster)))</visible>
						</control>
						<control type="image">
							<texture background="true">$VAR[BoxSetFakeDiscArtOverlay]</texture>
							<visible>!IsEmpty(Window(home).Property(Set.Movie.7.Art(poster)))</visible>
						</control>
					</control>
					<control type="image">
						<left>0</left>
						<top>-20</top>
						<width>250</width>
						<height>433</height>
						<fadetime>0</fadetime>
						<visible>[container.content(sets) | container.content(movies) | Container.Content(musicvideos)]</visible>
						<aspectratio scalediffuse="false" align="left" aligny="top">scale</aspectratio>
						<texture background="true" flipx="true" fallback="thumbs/sets/disc3.png" diffuse="thumbs/sets/disc3.png">$INFO[ListItem.Art(extrafanart1)]</texture>
						<visible>!IsEmpty(Window(home).Property(Set.Movie.7.Art(poster)))</visible>
					</control>
					<control type="image">
						<left>5</left>
						<top>80</top>
						<width>240</width>
						<height>240</height>
						<aspectratio>keep</aspectratio>
						<texture background="true" flipx="true">$INFO[Window(home).Property(Set.Movie.8.Art(discart))]</texture>
					</control>
					<control type="group">
						<left>5</left>
						<top>80</top>
						<width>240</width>
						<height>240</height>
						<visible>IsEmpty(Window(home).Property(Set.Movie.8.Art(discart)))</visible>
						<control type="image">
							<aspectratio scalediffuse="false" aligny="top">scale</aspectratio>
							<texture background="true" flipx="true" diffuse="thumbs/sets/cdart-mask.png">$INFO[Window(home).Property(Set.Movie.8.Art(poster))]</texture>
						</control>
						<control type="image">
							<texture>thumbs/sets/cdarttop.png</texture>
							<visible>!IsEmpty(Window(home).Property(Set.Movie.8.Art(poster)))</visible>
						</control>
						<control type="image">
							<texture background="true">$VAR[BoxSetFakeDiscArtOverlay]</texture>
							<visible>!IsEmpty(Window(home).Property(Set.Movie.8.Art(poster)))</visible>
						</control>
					</control>
					<control type="image">
						<left>0</left>
						<top>-20</top>
						<width>250</width>
						<height>433</height>
						<fadetime>0</fadetime>
						<visible>[container.content(sets) | container.content(movies) | Container.Content(musicvideos)]</visible>
						<aspectratio scalediffuse="false" align="left" aligny="top">scale</aspectratio>
						<texture background="true" flipx="true" fallback="thumbs/sets/disc2.png" diffuse="thumbs/sets/disc2.png">$INFO[ListItem.Art(extrafanart1)]</texture>
						<visible>!IsEmpty(Window(home).Property(Set.Movie.8.Art(poster)))</visible>
					</control>
					<control type="image">
						<left>5</left>
						<top>168</top>
						<width>240</width>
						<height>240</height>
						<aspectratio>keep</aspectratio>
						<texture background="true" flipx="true">$INFO[Window(home).Property(Set.Movie.9.Art(discart))]</texture>
					</control>
					<control type="group">
						<left>5</left>
						<top>168</top>
						<width>240</width>
						<height>240</height>
						<visible>IsEmpty(Window(home).Property(Set.Movie.9.Art(discart)))</visible>
						<control type="image">
							<aspectratio scalediffuse="false" aligny="top">scale</aspectratio>
							<texture background="true" flipx="true" diffuse="thumbs/sets/cdart-mask.png">$INFO[Window(home).Property(Set.Movie.9.Art(poster))]</texture>
						</control>
						<control type="image">
							<texture>thumbs/sets/cdarttop.png</texture>
							<visible>!IsEmpty(Window(home).Property(Set.Movie.9.Art(poster)))</visible>
						</control>
						<control type="image">
							<texture background="true">$VAR[BoxSetFakeDiscArtOverlay]</texture>
							<visible>!IsEmpty(Window(home).Property(Set.Movie.9.Art(poster)))</visible>
						</control>
					</control>
					<control type="image">
						<left>0</left>
						<top>-20</top>
						<width>250</width>
						<height>433</height>
						<fadetime>0</fadetime>
						<visible>[container.content(sets) | container.content(movies) | Container.Content(musicvideos)]</visible>
						<aspectratio scalediffuse="false" align="left" aligny="top">scale</aspectratio>
						<texture background="true" flipx="true" fallback="thumbs/sets/disc1.png" diffuse="thumbs/sets/disc1.png">$INFO[ListItem.Art(extrafanart1)]</texture>
						<visible>!IsEmpty(Window(home).Property(Set.Movie.9.Art(poster)))</visible>
					</control>
					<control type="group">
						<visible>IsEmpty(Window(home).Property(Set.Movie.9.Art(poster))) + IsEmpty(Window(home).Property(Set.Movie.8.Art(poster))) + IsEmpty(Window(home).Property(Set.Movie.7.Art(poster)))</visible>
						<control type="image">
							<left>15</left>
							<top>-20</top>
							<width>220</width>
							<height>433</height>
							<fadetime>0</fadetime>
							<visible>[container.content(sets) | container.content(movies) | Container.Content(musicvideos)]</visible>
							<texture background="true" flipx="true">thumbs/sets/brochure.png</texture>
						</control>
						<control type="image">
							<left>69</left>
							<top>-9</top>
							<width>100</width>
							<height>100</height>
							<aspectratio>keep</aspectratio>
							<texture background="true" flipx="true">$INFO[ListItem.Art(clearlogo)]</texture>
							<colordiffuse>99000000</colordiffuse>
						</control>
						<control type="image">
							<left>70</left>
							<top>-10</top>
							<width>100</width>
							<height>100</height>
							<aspectratio>keep</aspectratio>
							<texture background="true" flipx="true">$INFO[ListItem.Art(clearlogo)]</texture>
							<colordiffuse>99ffffff</colordiffuse>
						</control>
						<control type="group">
							<animation type="conditional" reversible="false" condition="[Control.IsVisible(1970)]">
								<effect type="fade" start="0" end="100" time="0" delay="1000"/>
								<effect type="rotatey" center="130" start="48" end="180" time="50" delay="1000" tween="cubic"/>
							</animation>
							<control type="textbox">
								<left>60</left>
								<top>60</top>
								<width>150</width>
								<height>198</height>
								<aligny>top</aligny>
								<label>$INFO[Window(home).Property(Set.Movies.ExtendedPlot)]</label>
								<font>Font_Reg10</font>
								<textcolor>black</textcolor>
							</control>
						</control>
						<control type="image">
							<left>0</left>
							<top>-20</top>
							<width>250</width>
							<height>433</height>
							<fadetime>0</fadetime>
							<visible>[container.content(sets) | container.content(movies) | Container.Content(musicvideos)]</visible>
							<aspectratio scalediffuse="false" align="left" aligny="top">scale</aspectratio>
							<texture background="true" flipx="true" fallback="thumbs/sets/brochurecover.png" diffuse="thumbs/sets/brochurecover.png">$INFO[ListItem.Art(extrafanart1)]</texture>
						</control>
					</control>
				</control>
				<control type="group">
					<animation type="conditional" reversible="false" condition="[Control.IsVisible(1970)]">
						<effect type="rotatey" center="300" end="-90" time="1040" tween="cubic" easing="in"/>
						<effect type="rotatey" center="300" start="-90" end="-90" time="0" delay="1040"/>
						<effect type="fade" start="100" end="0" time="0" delay="1000"/>
						<effect type="rotatey" center="300" start="90" end="0" time="440" delay="1040" tween="cubic"/>
					</animation>
					<control type="image">
						<left>20</left>
						<top>-22</top>
						<width>270</width>
						<height>437</height>
						<fadetime>0</fadetime>
						<visible>[container.content(sets) | container.content(movies) | Container.Content(musicvideos)]</visible>
						<aspectratio scalediffuse="false" align="center" aligny="top">scale</aspectratio>
						<texture background="true" fallback="thumbs/sets/backset.png" diffuse="thumbs/sets/backset.png">$INFO[ListItem.Art(fanart)]</texture>
					</control>
				</control>
				<control type="group">
					<animation type="conditional" reversible="false" condition="[Control.IsVisible(1970)]">
						<effect type="rotatey" center="-2" end="90" time="440" tween="cubic" easing="in"/>
						<effect type="rotatey" center="-2" start="90" end="90" time="0" delay="440"/>
						<effect type="fade" start="0" end="100" time="0" delay="400"/>
						<effect type="rotatey" center="-2" start="-90" end="-40" time="440" delay="440" tween="cubic"/>
					</animation>
					<control type="image">
						<left>-14</left>
						<top>-22</top>
						<width>250</width>
						<height>437</height>
						<fadetime>0</fadetime>
						<visible>[container.content(sets) | container.content(movies) | Container.Content(musicvideos)]</visible>
						<aspectratio scalediffuse="false" align="right" aligny="top">scale</aspectratio>
						<texture background="true" flipx="true" fallback="thumbs/sets/backset.png" diffuse="thumbs/sets/backset.png">$INFO[ListItem.Art(extrafanart1)]</texture>
					</control>
					<control type="image">
						<left>-10</left>
						<top>-20</top>
						<width>240</width>
						<height>240</height>
						<aspectratio>keep</aspectratio>
						<texture background="true" flipx="true">$INFO[Window(home).Property(Set.Movie.4.Art(discart))]</texture>
					</control>
					<control type="group">
						<left>-10</left>
						<top>-20</top>
						<width>240</width>
						<height>240</height>
						<visible>IsEmpty(Window(home).Property(Set.Movie.4.Art(discart)))</visible>
						<control type="image">
							<aspectratio scalediffuse="false" aligny="top">scale</aspectratio>
							<texture background="true" flipx="true" diffuse="thumbs/sets/cdart-mask.png">$INFO[Window(home).Property(Set.Movie.4.Art(poster))]</texture>
						</control>
						<control type="image">
							<texture>thumbs/sets/cdarttop.png</texture>
							<visible>!IsEmpty(Window(home).Property(Set.Movie.4.Art(poster)))</visible>
						</control>
						<control type="image">
							<texture background="true">$VAR[BoxSetFakeDiscArtOverlay]</texture>
							<visible>!IsEmpty(Window(home).Property(Set.Movie.4.Art(poster)))</visible>
						</control>
					</control>
					<control type="image">
						<left>-14</left>
						<top>-22</top>
						<width>250</width>
						<height>437</height>
						<fadetime>0</fadetime>
						<visible>[container.content(sets) | container.content(movies) | Container.Content(musicvideos)]</visible>
						<aspectratio scalediffuse="false" align="right" aligny="top">scale</aspectratio>
						<texture background="true" flipx="true" fallback="thumbs/sets/disc3.png" diffuse="thumbs/sets/disc3.png">$INFO[ListItem.Art(extrafanart1)]</texture>
						<visible>!IsEmpty(Window(home).Property(Set.Movie.4.Art(poster)))</visible>
					</control>
					<control type="image">
						<left>-10</left>
						<top>80</top>
						<width>240</width>
						<height>240</height>
						<aspectratio>keep</aspectratio>
						<texture background="true" flipx="true">$INFO[Window(home).Property(Set.Movie.5.Art(discart))]</texture>
					</control>
					<control type="group">
						<left>-10</left>
						<top>80</top>
						<width>240</width>
						<height>240</height>
						<visible>IsEmpty(Window(home).Property(Set.Movie.5.Art(discart)))</visible>
						<control type="image">
							<aspectratio scalediffuse="false" aligny="top">scale</aspectratio>
							<texture background="true" flipx="true" diffuse="thumbs/sets/cdart-mask.png">$INFO[Window(home).Property(Set.Movie.5.Art(poster))]</texture>
						</control>
						<control type="image">
							<texture>thumbs/sets/cdarttop.png</texture>
							<visible>!IsEmpty(Window(home).Property(Set.Movie.5.Art(poster)))</visible>
						</control>
						<control type="image">
							<texture background="true">$VAR[BoxSetFakeDiscArtOverlay]</texture>
							<visible>!IsEmpty(Window(home).Property(Set.Movie.5.Art(poster)))</visible>
						</control>
					</control>
					<control type="image">
						<left>-14</left>
						<top>-20</top>
						<width>250</width>
						<height>437</height>
						<fadetime>0</fadetime>
						<visible>[container.content(sets) | container.content(movies) | Container.Content(musicvideos)]</visible>
						<aspectratio scalediffuse="false" align="right" aligny="top">scale</aspectratio>
						<texture background="true" flipx="true" fallback="thumbs/sets/disc2.png" diffuse="thumbs/sets/disc2.png">$INFO[ListItem.Art(extrafanart1)]</texture>
						<visible>!IsEmpty(Window(home).Property(Set.Movie.5.Art(poster)))</visible>
					</control>
					<control type="image">
						<left>-10</left>
						<top>168</top>
						<width>240</width>
						<height>240</height>
						<aspectratio>keep</aspectratio>
						<texture background="true" flipx="true">$INFO[Window(home).Property(Set.Movie.6.Art(discart))]</texture>
					</control>
					<control type="group">
						<left>-10</left>
						<top>168</top>
						<width>240</width>
						<height>240</height>
						<visible>IsEmpty(Window(home).Property(Set.Movie.6.Art(discart)))</visible>
						<control type="image">
							<aspectratio scalediffuse="false" aligny="top">scale</aspectratio>
							<texture background="true" flipx="true" diffuse="thumbs/sets/cdart-mask.png">$INFO[Window(home).Property(Set.Movie.6.Art(poster))]</texture>
						</control>
						<control type="image">
							<texture>thumbs/sets/cdarttop.png</texture>
							<visible>!IsEmpty(Window(home).Property(Set.Movie.6.Art(poster)))</visible>
						</control>
						<control type="image">
							<texture background="true">$VAR[BoxSetFakeDiscArtOverlay]</texture>
							<visible>!IsEmpty(Window(home).Property(Set.Movie.6.Art(poster)))</visible>
						</control>
					</control>
					<control type="image">
						<left>-14</left>
						<top>-22</top>
						<width>250</width>
						<height>437</height>
						<fadetime>0</fadetime>
						<visible>[container.content(sets) | container.content(movies) | Container.Content(musicvideos)]</visible>
						<aspectratio scalediffuse="false" align="right" aligny="top">scale</aspectratio>
						<texture background="true" flipx="true" fallback="thumbs/sets/disc1.png" diffuse="thumbs/sets/disc1.png">$INFO[ListItem.Art(extrafanart1)]</texture>
						<visible>!IsEmpty(Window(home).Property(Set.Movie.6.Art(poster)))</visible>
					</control>
				</control>
				<control type="group">
					<animation type="conditional" reversible="false" condition="[Control.IsVisible(1970)]">
						<effect type="rotatey" center="0" end="90" time="440" tween="cubic" easing="in"/>
						<effect type="rotatey" center="0" start="90" end="90" time="0" delay="440"/>
						<effect type="fade" start="100" end="0" time="0" delay="400"/>
						<effect type="rotatey" center="0" start="-90" end="0" time="440" delay="440" tween="cubic"/>
					</animation>
					<control type="image">
						<include>MovieShowcaseDVDCoverVarsSets</include>
						<texture background="true" fallback="thumbs/fallback_poster_tp_solid.jpg">$VAR[ShowcaseItem0Var]</texture>
						<visible>!Skin.HasSetting(genrethumbs)</visible>
					</control>
					<control type="image">
						<include>MovieShowcaseDVDCoverVarsSets</include>
						<texture background="true" fallback="thumbs/fallback_poster_tp_solid.jpg">$VAR[ShowcaseItem0Var1]</texture>
						<visible>Skin.HasSetting(genrethumbs)</visible>
					</control>
				</control>
			</control>
		</control>
	</include>
	</includes>
